{
  "errors": [],
  "sources": {
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/Base.sol": [
      {
        "source_file": {
          "id": 0,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/Script.sol": [
      {
        "source_file": {
          "id": 1,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdAssertions.sol": [
      {
        "source_file": {
          "id": 2,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdChains.sol": [
      {
        "source_file": {
          "id": 3,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdCheats.sol": [
      {
        "source_file": {
          "id": 4,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdConstants.sol": [
      {
        "source_file": {
          "id": 5,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdError.sol": [
      {
        "source_file": {
          "id": 6,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdInvariant.sol": [
      {
        "source_file": {
          "id": 7,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdJson.sol": [
      {
        "source_file": {
          "id": 8,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdMath.sol": [
      {
        "source_file": {
          "id": 9,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdStorage.sol": [
      {
        "source_file": {
          "id": 10,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdStyle.sol": [
      {
        "source_file": {
          "id": 11,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdToml.sol": [
      {
        "source_file": {
          "id": 12,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdUtils.sol": [
      {
        "source_file": {
          "id": 13,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/Test.sol": [
      {
        "source_file": {
          "id": 14,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/Vm.sol": [
      {
        "source_file": {
          "id": 15,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/console.sol": [
      {
        "source_file": {
          "id": 16,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/console2.sol": [
      {
        "source_file": {
          "id": 17,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/interfaces/IMulticall3.sol": [
      {
        "source_file": {
          "id": 18,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/safeconsole.sol": [
      {
        "source_file": {
          "id": 19,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/script/DeploySkillSBT.s.sol": [
      {
        "source_file": {
          "id": 20,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/src/ERC721SBT/ERC721SBT.sol": [
      {
        "source_file": {
          "id": 21,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/src/SkillSBT.sol": [
      {
        "source_file": {
          "id": 22,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/src/interfaces/IERC165.sol": [
      {
        "source_file": {
          "id": 23,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/src/interfaces/IERC721.sol": [
      {
        "source_file": {
          "id": 24,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ],
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/test/MySkillTest.t.sol": [
      {
        "source_file": {
          "id": 25,
          "ast": {}
        },
        "version": "0.8.30",
        "build_id": "d290beb48127fdf4",
        "profile": "default"
      }
    ]
  },
  "contracts": {
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/Base.sol": {
      "CommonBase": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"CONSOLE\":{\"details\":\"console.sol and console2.sol work by executing a staticcall to this address. Calculated as `address(uint160(uint88(bytes11(\\\"console.log\\\"))))`.\"},\"CREATE2_FACTORY\":{\"details\":\"Used when deploying with create2. Taken from https://github.com/Arachnid/deterministic-deployment-proxy.\"},\"DEFAULT_SENDER\":{\"details\":\"The default address for tx.origin and msg.sender. Calculated as `address(uint160(uint256(keccak256(\\\"foundry default caller\\\"))))`.\"},\"DEFAULT_TEST_CONTRACT\":{\"details\":\"The address of the first contract `CREATE`d by a running test contract. When running tests, each test contract is `CREATE`d by `DEFAULT_SENDER` with nonce 1. Calculated as `VM.computeCreateAddress(VM.computeCreateAddress(DEFAULT_SENDER, 1), 1)`.\"},\"MULTICALL3_ADDRESS\":{\"details\":\"Deterministic deployment address of the Multicall3 contract. Taken from https://www.multicall3.com.\"},\"SECP256K1_ORDER\":{\"details\":\"The order of the secp256k1 curve.\"},\"VM_ADDRESS\":{\"details\":\"Cheat code address. Calculated as `address(uint160(uint256(keccak256(\\\"hevm cheat code\\\"))))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Base.sol\":\"CommonBase\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4b2a5a85e045dcf6a082700c7252e43854c2eed88f860aaa18ec1e85218ae2bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98d060ed5be569a92d908fc358149039dc8f833d61973aa1b9d1d8235676bf6d\",\"dweb:/ipfs/QmaWQpn5dJmbMS5skwmPPMeUWZG35BLkignPpcA3zyagEs\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x04102de0a79398e4bdea57b7a4818655b4cc66d6f81d1cff08bf428cd0b384cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53edc6c8f7f67cafc0129f039637c77d979880f7f1947defea31e8f0c05095bc\",\"dweb:/ipfs/QmUKXJd1vFCkxxrkXNLURdXrx2apoyWQFrFb5UqNkjdHVi\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ],
      "ScriptBase": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Base.sol\":\"ScriptBase\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4b2a5a85e045dcf6a082700c7252e43854c2eed88f860aaa18ec1e85218ae2bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98d060ed5be569a92d908fc358149039dc8f833d61973aa1b9d1d8235676bf6d\",\"dweb:/ipfs/QmaWQpn5dJmbMS5skwmPPMeUWZG35BLkignPpcA3zyagEs\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x04102de0a79398e4bdea57b7a4818655b4cc66d6f81d1cff08bf428cd0b384cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53edc6c8f7f67cafc0129f039637c77d979880f7f1947defea31e8f0c05095bc\",\"dweb:/ipfs/QmUKXJd1vFCkxxrkXNLURdXrx2apoyWQFrFb5UqNkjdHVi\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ],
      "TestBase": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Base.sol\":\"TestBase\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4b2a5a85e045dcf6a082700c7252e43854c2eed88f860aaa18ec1e85218ae2bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98d060ed5be569a92d908fc358149039dc8f833d61973aa1b9d1d8235676bf6d\",\"dweb:/ipfs/QmaWQpn5dJmbMS5skwmPPMeUWZG35BLkignPpcA3zyagEs\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x04102de0a79398e4bdea57b7a4818655b4cc66d6f81d1cff08bf428cd0b384cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53edc6c8f7f67cafc0129f039637c77d979880f7f1947defea31e8f0c05095bc\",\"dweb:/ipfs/QmUKXJd1vFCkxxrkXNLURdXrx2apoyWQFrFb5UqNkjdHVi\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/Script.sol": {
      "Script": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "IS_SCRIPT",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Script.sol\":\"Script\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4b2a5a85e045dcf6a082700c7252e43854c2eed88f860aaa18ec1e85218ae2bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98d060ed5be569a92d908fc358149039dc8f833d61973aa1b9d1d8235676bf6d\",\"dweb:/ipfs/QmaWQpn5dJmbMS5skwmPPMeUWZG35BLkignPpcA3zyagEs\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0xc942e27c7baae499beb01afbbae99f24d42af9a6e4aae675bc6901b704aa8e9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0456008adf68947247f358b62863af4a8e349549d2260f2ff9569ff0e3cf5c98\",\"dweb:/ipfs/QmdviSUj2i7o3TPN5vd2xocqGMFVqjUzaiJTZRYyPxyHPx\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xae394f477769a38276d98d4854bc865fc8d281edbd4e72167507adb8236812aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34a0e609a4ec617b5c349f5e89a3352810cc5e4d3adaf939b32a27e4a5e46de2\",\"dweb:/ipfs/QmPfjimWAGGb6rzDjNMtLeZ93JJbCJJMov5gaNKyTy1doe\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0fa6ec03602648b62cce41aab2096e6b7e052f2846075d967b6958dd586db746\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd84e2ca9c1eaed6b76768cc12bb8c1af8289170ea8b7706f58d516460d79c41\",\"dweb:/ipfs/QmQ7BK7co6DE4eWUqMyv11s5eHYkS1tyx8tDSZGZVtf2aK\"]},\"lib/forge-std/src/StdConstants.sol\":{\"keccak256\":\"0x319ccdabfa2c0b2428301445873270ffea20f0e039d4fd5e6eeba65158e4e534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b633f9d3a719e1d035ce7daa6cc051ddf89a72d34200d14cec37728e245cdabc\",\"dweb:/ipfs/QmRP7HQJpHMx1CsFrY8tXVVx1DQmi2dcb2BoGfiWaA923r\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974\",\"dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x04102de0a79398e4bdea57b7a4818655b4cc66d6f81d1cff08bf428cd0b384cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53edc6c8f7f67cafc0129f039637c77d979880f7f1947defea31e8f0c05095bc\",\"dweb:/ipfs/QmUKXJd1vFCkxxrkXNLURdXrx2apoyWQFrFb5UqNkjdHVi\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xb2469a902a326074034c4f7081d868113db0edbb7cf48b86528af2d6b07295f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1430a81c4978be875e2a3b31a8bfa4e1438fecd327f23771b690d64db63c020a\",\"dweb:/ipfs/QmW6aB2u1LNaRgGQFwjV7L7UbxsRg63iJ7AuujPouEa4cT\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab\",\"dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "IS_SCRIPT()": "f8ccbf47"
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdAssertions.sol": {
      "StdAssertions": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "failed",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "event",
                "name": "log",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_address",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes32",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_int",
                "inputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_address",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes32",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_string",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_string",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_uint",
                "inputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "logs",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdAssertions.sol\":\"StdAssertions\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xd8eec16034b53b52c90a3d720e121ce7d30d64cc57d854db7d817d5b382dda43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://612780755e32668c7e3b747d94d16c7291101144e084dd9ee563f071711e99e3\",\"dweb:/ipfs/QmQgtFJXEmDtSHT7tZQTMbb6PCDpq5UDYFvrBnWk1Xo2SY\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "failed()": "ba414fa6"
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdChains.sol": {
      "StdChains": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"StdChains provides information about EVM compatible chains that can be used in scripts/tests. For each chain, the chain's name, chain ID, and a default RPC URL are provided. Chains are identified by their alias, which is the same as the alias in the `[rpc_endpoints]` section of the `foundry.toml` file. For best UX, ensure the alias in the `foundry.toml` file match the alias used in this contract, which can be found as the first argument to the `setChainWithDefaultRpcUrl` call in the `initializeStdChains` function. There are two main ways to use this contract:   1. Set a chain with `setChain(string memory chainAlias, ChainData memory chain)` or      `setChain(string memory chainAlias, Chain memory chain)`   2. Get a chain with `getChain(string memory chainAlias)` or `getChain(uint256 chainId)`. The first time either of those are used, chains are initialized with the default set of RPC URLs. This is done in `initializeStdChains`, which uses `setChainWithDefaultRpcUrl`. Defaults are recorded in `defaultRpcUrls`. The `setChain` function is straightforward, and it simply saves off the given chain data. The `getChain` methods use `getChainWithUpdatedRpcUrl` to return a chain. For example, let's say we want to retrieve the RPC URL for `mainnet`:   - If you have specified data with `setChain`, it will return that.   - If you have configured a mainnet RPC URL in `foundry.toml`, it will return the URL, provided it     is valid (e.g. a URL is specified, or an environment variable is given and exists).   - If neither of the above conditions is met, the default data is returned. Summarizing the above, the prioritization hierarchy is `setChain` -> `foundry.toml` -> environment variable -> defaults.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdChains.sol\":\"StdChains\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xae394f477769a38276d98d4854bc865fc8d281edbd4e72167507adb8236812aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34a0e609a4ec617b5c349f5e89a3352810cc5e4d3adaf939b32a27e4a5e46de2\",\"dweb:/ipfs/QmPfjimWAGGb6rzDjNMtLeZ93JJbCJJMov5gaNKyTy1doe\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdCheats.sol": {
      "StdCheats": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdCheats.sol\":\"StdCheats\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0fa6ec03602648b62cce41aab2096e6b7e052f2846075d967b6958dd586db746\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd84e2ca9c1eaed6b76768cc12bb8c1af8289170ea8b7706f58d516460d79c41\",\"dweb:/ipfs/QmQ7BK7co6DE4eWUqMyv11s5eHYkS1tyx8tDSZGZVtf2aK\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x04102de0a79398e4bdea57b7a4818655b4cc66d6f81d1cff08bf428cd0b384cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53edc6c8f7f67cafc0129f039637c77d979880f7f1947defea31e8f0c05095bc\",\"dweb:/ipfs/QmUKXJd1vFCkxxrkXNLURdXrx2apoyWQFrFb5UqNkjdHVi\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ],
      "StdCheatsSafe": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdCheats.sol\":\"StdCheatsSafe\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0fa6ec03602648b62cce41aab2096e6b7e052f2846075d967b6958dd586db746\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd84e2ca9c1eaed6b76768cc12bb8c1af8289170ea8b7706f58d516460d79c41\",\"dweb:/ipfs/QmQ7BK7co6DE4eWUqMyv11s5eHYkS1tyx8tDSZGZVtf2aK\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x04102de0a79398e4bdea57b7a4818655b4cc66d6f81d1cff08bf428cd0b384cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53edc6c8f7f67cafc0129f039637c77d979880f7f1947defea31e8f0c05095bc\",\"dweb:/ipfs/QmUKXJd1vFCkxxrkXNLURdXrx2apoyWQFrFb5UqNkjdHVi\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdConstants.sol": {
      "StdConstants": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"CONSOLE\":{\"details\":\"console.sol and console2.sol work by executing a staticcall to this address. Calculated as `address(uint160(uint88(bytes11(\\\"console.log\\\"))))`.\"},\"CREATE2_FACTORY\":{\"details\":\"Used when deploying with create2. Taken from https://github.com/Arachnid/deterministic-deployment-proxy.\"},\"DEFAULT_SENDER\":{\"details\":\"The default address for tx.origin and msg.sender. Calculated as `address(uint160(uint256(keccak256(\\\"foundry default caller\\\"))))`.\"},\"DEFAULT_TEST_CONTRACT\":{\"details\":\"The address of the first contract `CREATE`d by a running test contract. When running tests, each test contract is `CREATE`d by `DEFAULT_SENDER` with nonce 1. Calculated as `VM.computeCreateAddress(VM.computeCreateAddress(DEFAULT_SENDER, 1), 1)`.\"},\"MULTICALL3_ADDRESS\":{\"details\":\"Deterministic deployment address of the Multicall3 contract. Taken from https://www.multicall3.com.\"},\"SECP256K1_ORDER\":{\"details\":\"The order of the secp256k1 curve.\"},\"VM\":{\"details\":\"Cheat code address. Calculated as `address(uint160(uint256(keccak256(\\\"hevm cheat code\\\"))))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdConstants.sol\":\"StdConstants\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/StdConstants.sol\":{\"keccak256\":\"0x319ccdabfa2c0b2428301445873270ffea20f0e039d4fd5e6eeba65158e4e534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b633f9d3a719e1d035ce7daa6cc051ddf89a72d34200d14cec37728e245cdabc\",\"dweb:/ipfs/QmRP7HQJpHMx1CsFrY8tXVVx1DQmi2dcb2BoGfiWaA923r\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c5f5b1118e547c411d107fda32e8308407192d67f89dfcf47dce465fbdb489fb64736f6c634300081e0033",
                "sourceMap": "153:1713:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c5f5b1118e547c411d107fda32e8308407192d67f89dfcf47dce465fbdb489fb64736f6c634300081e0033",
                "sourceMap": "153:1713:5:-:0;;;;;;;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdError.sol": {
      "stdError": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "arithmeticError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "assertionError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "divisionError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "encodeStorageError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "enumConversionError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "indexOOBError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "memOverflowError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "popError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "zeroVarError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"arithmeticError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"divisionError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encodeStorageError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enumConversionError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexOOBError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"memOverflowError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"popError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zeroVarError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdError.sol\":\"stdError\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "610a8d61004d600b8282823980515f1a6073146041577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061009c575f3560e01c8063986c5f681161006f578063986c5f6814610118578063b22dc54d14610136578063b67689da14610154578063d160e4de14610172578063fa784a44146101905761009c565b806305ee8612146100a057806310332977146100be5780631de45560146100dc5780638995290f146100fa575b5f5ffd5b6100a86101ae565b6040516100b59190610740565b60405180910390f35b6100c6610240565b6040516100d39190610740565b60405180910390f35b6100e46102d2565b6040516100f19190610740565b60405180910390f35b610102610364565b60405161010f9190610740565b60405180910390f35b6101206103f6565b60405161012d9190610740565b60405180910390f35b61013e610488565b60405161014b9190610740565b60405180910390f35b61015c61051a565b6040516101699190610740565b60405180910390f35b61017a6105ac565b6040516101879190610740565b60405180910390f35b61019861063e565b6040516101a59190610740565b60405180910390f35b60326040516024016101c091906107ae565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b60016040516024016102529190610800565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b60216040516024016102e49190610852565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b601160405160240161037691906108a4565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b604160405160240161040891906108f6565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b603160405160240161049a9190610948565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b605160405160240161052c919061099a565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b60226040516024016105be91906109ec565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b60126040516024016106509190610a3e565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610712826106d0565b61071c81856106da565b935061072c8185602086016106ea565b610735816106f8565b840191505092915050565b5f6020820190508181035f8301526107588184610708565b905092915050565b5f819050919050565b5f60ff82169050919050565b5f819050919050565b5f61079861079361078e84610760565b610775565b610769565b9050919050565b6107a88161077e565b82525050565b5f6020820190506107c15f83018461079f565b92915050565b5f819050919050565b5f6107ea6107e56107e0846107c7565b610775565b610769565b9050919050565b6107fa816107d0565b82525050565b5f6020820190506108135f8301846107f1565b92915050565b5f819050919050565b5f61083c61083761083284610819565b610775565b610769565b9050919050565b61084c81610822565b82525050565b5f6020820190506108655f830184610843565b92915050565b5f819050919050565b5f61088e6108896108848461086b565b610775565b610769565b9050919050565b61089e81610874565b82525050565b5f6020820190506108b75f830184610895565b92915050565b5f819050919050565b5f6108e06108db6108d6846108bd565b610775565b610769565b9050919050565b6108f0816108c6565b82525050565b5f6020820190506109095f8301846108e7565b92915050565b5f819050919050565b5f61093261092d6109288461090f565b610775565b610769565b9050919050565b61094281610918565b82525050565b5f60208201905061095b5f830184610939565b92915050565b5f819050919050565b5f61098461097f61097a84610961565b610775565b610769565b9050919050565b6109948161096a565b82525050565b5f6020820190506109ad5f83018461098b565b92915050565b5f819050919050565b5f6109d66109d16109cc846109b3565b610775565b610769565b9050919050565b6109e6816109bc565b82525050565b5f6020820190506109ff5f8301846109dd565b92915050565b5f819050919050565b5f610a28610a23610a1e84610a05565b610775565b610769565b9050919050565b610a3881610a0e565b82525050565b5f602082019050610a515f830184610a2f565b9291505056fea2646970667358221220371074b23c16c7dad67c97fd1f1b0f87e821327d5cc098ba09693b18937d0f8164736f6c634300081e0033",
                "sourceMap": "162:850:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "730000000000000000000000000000000000000000301460806040526004361061009c575f3560e01c8063986c5f681161006f578063986c5f6814610118578063b22dc54d14610136578063b67689da14610154578063d160e4de14610172578063fa784a44146101905761009c565b806305ee8612146100a057806310332977146100be5780631de45560146100dc5780638995290f146100fa575b5f5ffd5b6100a86101ae565b6040516100b59190610740565b60405180910390f35b6100c6610240565b6040516100d39190610740565b60405180910390f35b6100e46102d2565b6040516100f19190610740565b60405180910390f35b610102610364565b60405161010f9190610740565b60405180910390f35b6101206103f6565b60405161012d9190610740565b60405180910390f35b61013e610488565b60405161014b9190610740565b60405180910390f35b61015c61051a565b6040516101699190610740565b60405180910390f35b61017a6105ac565b6040516101879190610740565b60405180910390f35b61019861063e565b6040516101a59190610740565b60405180910390f35b60326040516024016101c091906107ae565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b60016040516024016102529190610800565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b60216040516024016102e49190610852565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b601160405160240161037691906108a4565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b604160405160240161040891906108f6565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b603160405160240161049a9190610948565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b605160405160240161052c919061099a565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b60226040516024016105be91906109ec565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b60126040516024016106509190610a3e565b6040516020818303038152906040527f4e487b71000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610712826106d0565b61071c81856106da565b935061072c8185602086016106ea565b610735816106f8565b840191505092915050565b5f6020820190508181035f8301526107588184610708565b905092915050565b5f819050919050565b5f60ff82169050919050565b5f819050919050565b5f61079861079361078e84610760565b610775565b610769565b9050919050565b6107a88161077e565b82525050565b5f6020820190506107c15f83018461079f565b92915050565b5f819050919050565b5f6107ea6107e56107e0846107c7565b610775565b610769565b9050919050565b6107fa816107d0565b82525050565b5f6020820190506108135f8301846107f1565b92915050565b5f819050919050565b5f61083c61083761083284610819565b610775565b610769565b9050919050565b61084c81610822565b82525050565b5f6020820190506108655f830184610843565b92915050565b5f819050919050565b5f61088e6108896108848461086b565b610775565b610769565b9050919050565b61089e81610874565b82525050565b5f6020820190506108b75f830184610895565b92915050565b5f819050919050565b5f6108e06108db6108d6846108bd565b610775565b610769565b9050919050565b6108f0816108c6565b82525050565b5f6020820190506109095f8301846108e7565b92915050565b5f819050919050565b5f61093261092d6109288461090f565b610775565b610769565b9050919050565b61094281610918565b82525050565b5f60208201905061095b5f830184610939565b92915050565b5f819050919050565b5f61098461097f61097a84610961565b610775565b610769565b9050919050565b6109948161096a565b82525050565b5f6020820190506109ad5f83018461098b565b92915050565b5f819050919050565b5f6109d66109d16109cc846109b3565b610775565b610769565b9050919050565b6109e6816109bc565b82525050565b5f6020820190506109ff5f8301846109dd565b92915050565b5f819050919050565b5f610a28610a23610a1e84610a05565b610775565b610769565b9050919050565b610a3881610a0e565b82525050565b5f602082019050610a515f830184610a2f565b9291505056fea2646970667358221220371074b23c16c7dad67c97fd1f1b0f87e821327d5cc098ba09693b18937d0f8164736f6c634300081e0033",
                "sourceMap": "162:850:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;740:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;185:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;461:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;277:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;831:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;654:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;925:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;558:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;370:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;740;820:4;778:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;740:85;:::o;185:86::-;266:4;224:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;185:86;:::o;461:91::-;547:4;505:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;461:91;:::o;277:87::-;359:4;317:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;277:87;:::o;831:88::-;914:4;872:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;831:88;:::o;654:80::-;729:4;687:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;654:80;:::o;925:84::-;1004:4;962:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;925:84;:::o;558:90::-;643:4;601:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;558:90;:::o;370:85::-;450:4;408:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;370:85;:::o;7:98:26:-;58:6;92:5;86:12;76:22;;7:98;;;:::o;111:176::-;202:11;236:6;231:3;224:19;276:4;271:3;267:14;252:29;;111:176;;;;:::o;293:139::-;382:6;377:3;372;366:23;423:1;414:6;409:3;405:16;398:27;293:139;;;:::o;438:102::-;479:6;530:2;526:7;521:2;514:5;510:14;506:28;496:38;;438:102;;;:::o;546:389::-;640:3;668:38;700:5;668:38;:::i;:::-;722:78;793:6;788:3;722:78;:::i;:::-;715:85;;809:65;867:6;862:3;855:4;848:5;844:16;809:65;:::i;:::-;899:29;921:6;899:29;:::i;:::-;894:3;890:39;883:46;;644:291;546:389;;;;:::o;941:325::-;1060:4;1098:2;1087:9;1083:18;1075:26;;1147:9;1141:4;1137:20;1133:1;1122:9;1118:17;1111:47;1175:84;1254:4;1245:6;1175:84;:::i;:::-;1167:92;;941:325;;;;:::o;1272:86::-;1318:7;1347:5;1336:16;;1272:86;;;:::o;1364:::-;1399:7;1439:4;1432:5;1428:16;1417:27;;1364:86;;;:::o;1456:60::-;1484:3;1505:5;1498:12;;1456:60;;;:::o;1522:156::-;1579:9;1612:60;1628:43;1637:33;1664:5;1637:33;:::i;:::-;1628:43;:::i;:::-;1612:60;:::i;:::-;1599:73;;1522:156;;;:::o;1684:145::-;1778:44;1816:5;1778:44;:::i;:::-;1773:3;1766:57;1684:145;;:::o;1835:236::-;1935:4;1973:2;1962:9;1958:18;1950:26;;1986:78;2061:1;2050:9;2046:17;2037:6;1986:78;:::i;:::-;1835:236;;;;:::o;2077:85::-;2122:7;2151:5;2140:16;;2077:85;;;:::o;2168:154::-;2224:9;2257:59;2273:42;2282:32;2308:5;2282:32;:::i;:::-;2273:42;:::i;:::-;2257:59;:::i;:::-;2244:72;;2168:154;;;:::o;2328:143::-;2421:43;2458:5;2421:43;:::i;:::-;2416:3;2409:56;2328:143;;:::o;2477:234::-;2576:4;2614:2;2603:9;2599:18;2591:26;;2627:77;2701:1;2690:9;2686:17;2677:6;2627:77;:::i;:::-;2477:234;;;;:::o;2717:86::-;2763:7;2792:5;2781:16;;2717:86;;;:::o;2809:156::-;2866:9;2899:60;2915:43;2924:33;2951:5;2924:33;:::i;:::-;2915:43;:::i;:::-;2899:60;:::i;:::-;2886:73;;2809:156;;;:::o;2971:145::-;3065:44;3103:5;3065:44;:::i;:::-;3060:3;3053:57;2971:145;;:::o;3122:236::-;3222:4;3260:2;3249:9;3245:18;3237:26;;3273:78;3348:1;3337:9;3333:17;3324:6;3273:78;:::i;:::-;3122:236;;;;:::o;3364:86::-;3410:7;3439:5;3428:16;;3364:86;;;:::o;3456:156::-;3513:9;3546:60;3562:43;3571:33;3598:5;3571:33;:::i;:::-;3562:43;:::i;:::-;3546:60;:::i;:::-;3533:73;;3456:156;;;:::o;3618:145::-;3712:44;3750:5;3712:44;:::i;:::-;3707:3;3700:57;3618:145;;:::o;3769:236::-;3869:4;3907:2;3896:9;3892:18;3884:26;;3920:78;3995:1;3984:9;3980:17;3971:6;3920:78;:::i;:::-;3769:236;;;;:::o;4011:86::-;4057:7;4086:5;4075:16;;4011:86;;;:::o;4103:156::-;4160:9;4193:60;4209:43;4218:33;4245:5;4218:33;:::i;:::-;4209:43;:::i;:::-;4193:60;:::i;:::-;4180:73;;4103:156;;;:::o;4265:145::-;4359:44;4397:5;4359:44;:::i;:::-;4354:3;4347:57;4265:145;;:::o;4416:236::-;4516:4;4554:2;4543:9;4539:18;4531:26;;4567:78;4642:1;4631:9;4627:17;4618:6;4567:78;:::i;:::-;4416:236;;;;:::o;4658:86::-;4704:7;4733:5;4722:16;;4658:86;;;:::o;4750:156::-;4807:9;4840:60;4856:43;4865:33;4892:5;4865:33;:::i;:::-;4856:43;:::i;:::-;4840:60;:::i;:::-;4827:73;;4750:156;;;:::o;4912:145::-;5006:44;5044:5;5006:44;:::i;:::-;5001:3;4994:57;4912:145;;:::o;5063:236::-;5163:4;5201:2;5190:9;5186:18;5178:26;;5214:78;5289:1;5278:9;5274:17;5265:6;5214:78;:::i;:::-;5063:236;;;;:::o;5305:86::-;5351:7;5380:5;5369:16;;5305:86;;;:::o;5397:156::-;5454:9;5487:60;5503:43;5512:33;5539:5;5512:33;:::i;:::-;5503:43;:::i;:::-;5487:60;:::i;:::-;5474:73;;5397:156;;;:::o;5559:145::-;5653:44;5691:5;5653:44;:::i;:::-;5648:3;5641:57;5559:145;;:::o;5710:236::-;5810:4;5848:2;5837:9;5833:18;5825:26;;5861:78;5936:1;5925:9;5921:17;5912:6;5861:78;:::i;:::-;5710:236;;;;:::o;5952:86::-;5998:7;6027:5;6016:16;;5952:86;;;:::o;6044:156::-;6101:9;6134:60;6150:43;6159:33;6186:5;6159:33;:::i;:::-;6150:43;:::i;:::-;6134:60;:::i;:::-;6121:73;;6044:156;;;:::o;6206:145::-;6300:44;6338:5;6300:44;:::i;:::-;6295:3;6288:57;6206:145;;:::o;6357:236::-;6457:4;6495:2;6484:9;6480:18;6472:26;;6508:78;6583:1;6572:9;6568:17;6559:6;6508:78;:::i;:::-;6357:236;;;;:::o;6599:86::-;6645:7;6674:5;6663:16;;6599:86;;;:::o;6691:156::-;6748:9;6781:60;6797:43;6806:33;6833:5;6806:33;:::i;:::-;6797:43;:::i;:::-;6781:60;:::i;:::-;6768:73;;6691:156;;;:::o;6853:145::-;6947:44;6985:5;6947:44;:::i;:::-;6942:3;6935:57;6853:145;;:::o;7004:236::-;7104:4;7142:2;7131:9;7127:18;7119:26;;7155:78;7230:1;7219:9;7215:17;7206:6;7155:78;:::i;:::-;7004:236;;;;:::o",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "arithmeticError()": "8995290f",
                "assertionError()": "10332977",
                "divisionError()": "fa784a44",
                "encodeStorageError()": "d160e4de",
                "enumConversionError()": "1de45560",
                "indexOOBError()": "05ee8612",
                "memOverflowError()": "986c5f68",
                "popError()": "b22dc54d",
                "zeroVarError()": "b67689da"
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdInvariant.sol": {
      "StdInvariant": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "excludeArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetArtifactSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifactSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
                    "components": [
                      {
                        "name": "artifact",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetInterfaces",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedInterfaces_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzInterface[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "artifacts",
                        "type": "string[]",
                        "internalType": "string[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdInvariant.sol\":\"StdInvariant\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "excludeArtifacts()": "b5508aa9",
                "excludeContracts()": "e20c9f71",
                "excludeSelectors()": "b0464fdc",
                "excludeSenders()": "1ed7831c",
                "targetArtifactSelectors()": "66d9a9a0",
                "targetArtifacts()": "85226c81",
                "targetContracts()": "3f7286f4",
                "targetInterfaces()": "2ade3880",
                "targetSelectors()": "916a17c6",
                "targetSenders()": "3e5e3c23"
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdJson.sol": {
      "stdJson": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdJson.sol\":\"stdJson\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974\",\"dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212208b49b5e318c93ec5eba194a7de57414e38891aed89d674089154391b9adb03dd64736f6c634300081e0033",
                "sourceMap": "610:9092:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212208b49b5e318c93ec5eba194a7de57414e38891aed89d674089154391b9adb03dd64736f6c634300081e0033",
                "sourceMap": "610:9092:8:-:0;;;;;;;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdMath.sol": {
      "stdMath": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdMath.sol\":\"stdMath\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220730a9c313546c09f23fe1f76476789d2ca79d072bb95de7f15a1663f7ff3d33164736f6c634300081e0033",
                "sourceMap": "65:1294:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220730a9c313546c09f23fe1f76476789d2ca79d072bb95de7f15a1663f7ff3d33164736f6c634300081e0033",
                "sourceMap": "65:1294:9:-:0;;;;;;;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdStorage.sol": {
      "stdStorage": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdStorage.sol\":\"stdStorage\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x04102de0a79398e4bdea57b7a4818655b4cc66d6f81d1cff08bf428cd0b384cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53edc6c8f7f67cafc0129f039637c77d979880f7f1947defea31e8f0c05095bc\",\"dweb:/ipfs/QmUKXJd1vFCkxxrkXNLURdXrx2apoyWQFrFb5UqNkjdHVi\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206a8d4dfeeb28e21afae832b75ecae0646ac35b13dc8dd9ef4a3943a4f19cfe9464736f6c634300081e0033",
                "sourceMap": "12755:5081:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206a8d4dfeeb28e21afae832b75ecae0646ac35b13dc8dd9ef4a3943a4f19cfe9464736f6c634300081e0033",
                "sourceMap": "12755:5081:10:-:0;;;;;;;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ],
      "stdStorageSafe": [
        {
          "contract": {
            "abi": [
              {
                "type": "event",
                "name": "SlotFound",
                "inputs": [
                  {
                    "name": "who",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  },
                  {
                    "name": "fsig",
                    "type": "bytes4",
                    "indexed": false,
                    "internalType": "bytes4"
                  },
                  {
                    "name": "keysHash",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  },
                  {
                    "name": "slot",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "WARNING_UninitedSlot",
                "inputs": [
                  {
                    "name": "who",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  },
                  {
                    "name": "slot",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"fsig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keysHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"SlotFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"WARNING_UninitedSlot\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdStorage.sol\":\"stdStorageSafe\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x04102de0a79398e4bdea57b7a4818655b4cc66d6f81d1cff08bf428cd0b384cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53edc6c8f7f67cafc0129f039637c77d979880f7f1947defea31e8f0c05095bc\",\"dweb:/ipfs/QmUKXJd1vFCkxxrkXNLURdXrx2apoyWQFrFb5UqNkjdHVi\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201730cef7d17a6699aa4124264b6e956843f25ac27df515034763ceff15ed56c264736f6c634300081e0033",
                "sourceMap": "450:12303:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201730cef7d17a6699aa4124264b6e956843f25ac27df515034763ceff15ed56c264736f6c634300081e0033",
                "sourceMap": "450:12303:10:-:0;;;;;;;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdStyle.sol": {
      "StdStyle": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdStyle.sol\":\"StdStyle\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212208f97fa4f1f6562aa031a9281f4cb36068d79c67601c59cd467f99c0c308c7e6864736f6c634300081e0033",
                "sourceMap": "100:10361:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212208f97fa4f1f6562aa031a9281f4cb36068d79c67601c59cd467f99c0c308c7e6864736f6c634300081e0033",
                "sourceMap": "100:10361:11:-:0;;;;;;;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdToml.sol": {
      "stdToml": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdToml.sol\":\"stdToml\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3\",\"dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220925b9d6da3b404604ae5e54727b3dcb4266941af3e7f3062df0bdeabf82c766364736f6c634300081e0033",
                "sourceMap": "610:9092:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220925b9d6da3b404604ae5e54727b3dcb4266941af3e7f3062df0bdeabf82c766364736f6c634300081e0033",
                "sourceMap": "610:9092:12:-:0;;;;;;;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/StdUtils.sol": {
      "StdUtils": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdUtils.sol\":\"StdUtils\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xb2469a902a326074034c4f7081d868113db0edbb7cf48b86528af2d6b07295f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1430a81c4978be875e2a3b31a8bfa4e1438fecd327f23771b690d64db63c020a\",\"dweb:/ipfs/QmW6aB2u1LNaRgGQFwjV7L7UbxsRg63iJ7AuujPouEa4cT\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/Test.sol": {
      "Test": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "IS_TEST",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "failed",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetArtifactSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifactSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
                    "components": [
                      {
                        "name": "artifact",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetInterfaces",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedInterfaces_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzInterface[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "artifacts",
                        "type": "string[]",
                        "internalType": "string[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "event",
                "name": "log",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_address",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes32",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_int",
                "inputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_address",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes32",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_string",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_string",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_uint",
                "inputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "logs",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Test.sol\":\"Test\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4b2a5a85e045dcf6a082700c7252e43854c2eed88f860aaa18ec1e85218ae2bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98d060ed5be569a92d908fc358149039dc8f833d61973aa1b9d1d8235676bf6d\",\"dweb:/ipfs/QmaWQpn5dJmbMS5skwmPPMeUWZG35BLkignPpcA3zyagEs\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xd8eec16034b53b52c90a3d720e121ce7d30d64cc57d854db7d817d5b382dda43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://612780755e32668c7e3b747d94d16c7291101144e084dd9ee563f071711e99e3\",\"dweb:/ipfs/QmQgtFJXEmDtSHT7tZQTMbb6PCDpq5UDYFvrBnWk1Xo2SY\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xae394f477769a38276d98d4854bc865fc8d281edbd4e72167507adb8236812aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34a0e609a4ec617b5c349f5e89a3352810cc5e4d3adaf939b32a27e4a5e46de2\",\"dweb:/ipfs/QmPfjimWAGGb6rzDjNMtLeZ93JJbCJJMov5gaNKyTy1doe\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0fa6ec03602648b62cce41aab2096e6b7e052f2846075d967b6958dd586db746\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd84e2ca9c1eaed6b76768cc12bb8c1af8289170ea8b7706f58d516460d79c41\",\"dweb:/ipfs/QmQ7BK7co6DE4eWUqMyv11s5eHYkS1tyx8tDSZGZVtf2aK\"]},\"lib/forge-std/src/StdConstants.sol\":{\"keccak256\":\"0x319ccdabfa2c0b2428301445873270ffea20f0e039d4fd5e6eeba65158e4e534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b633f9d3a719e1d035ce7daa6cc051ddf89a72d34200d14cec37728e245cdabc\",\"dweb:/ipfs/QmRP7HQJpHMx1CsFrY8tXVVx1DQmi2dcb2BoGfiWaA923r\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974\",\"dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x04102de0a79398e4bdea57b7a4818655b4cc66d6f81d1cff08bf428cd0b384cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53edc6c8f7f67cafc0129f039637c77d979880f7f1947defea31e8f0c05095bc\",\"dweb:/ipfs/QmUKXJd1vFCkxxrkXNLURdXrx2apoyWQFrFb5UqNkjdHVi\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3\",\"dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xb2469a902a326074034c4f7081d868113db0edbb7cf48b86528af2d6b07295f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1430a81c4978be875e2a3b31a8bfa4e1438fecd327f23771b690d64db63c020a\",\"dweb:/ipfs/QmW6aB2u1LNaRgGQFwjV7L7UbxsRg63iJ7AuujPouEa4cT\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3dda6083a83dfa3e8526e97bcc28e862ee2442dd58fe94d5c426d65b8e38f73c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33f8c02e4dabdab86a6825125856446a8657eacd712318b51b7818e4a6f6e3f4\",\"dweb:/ipfs/QmRKSjVnrk54yr8wTK2e6QxRjiuba2H8HJSKunHAkdo7RG\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab\",\"dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "IS_TEST()": "fa7626d4",
                "excludeArtifacts()": "b5508aa9",
                "excludeContracts()": "e20c9f71",
                "excludeSelectors()": "b0464fdc",
                "excludeSenders()": "1ed7831c",
                "failed()": "ba414fa6",
                "targetArtifactSelectors()": "66d9a9a0",
                "targetArtifacts()": "85226c81",
                "targetContracts()": "3f7286f4",
                "targetInterfaces()": "2ade3880",
                "targetSelectors()": "916a17c6",
                "targetSenders()": "3e5e3c23"
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/Vm.sol": {
      "Vm": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "accessList",
                "inputs": [
                  {
                    "name": "access",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.AccessListItem[]",
                    "components": [
                      {
                        "name": "target",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "storageKeys",
                        "type": "bytes32[]",
                        "internalType": "bytes32[]"
                      }
                    ]
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "accesses",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "readSlots",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "writeSlots",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "activeFork",
                "inputs": [],
                "outputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "addr",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "keyAddr",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "allowCheatcodes",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertFalse",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertFalse",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertTrue",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertTrue",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assume",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assumeNoRevert",
                "inputs": [],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assumeNoRevert",
                "inputs": [
                  {
                    "name": "potentialReverts",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.PotentialRevert[]",
                    "components": [
                      {
                        "name": "reverter",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "partialMatch",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "revertData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assumeNoRevert",
                "inputs": [
                  {
                    "name": "potentialRevert",
                    "type": "tuple",
                    "internalType": "struct VmSafe.PotentialRevert",
                    "components": [
                      {
                        "name": "reverter",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "partialMatch",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "revertData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "attachBlob",
                "inputs": [
                  {
                    "name": "blob",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "attachDelegation",
                "inputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "attachDelegation",
                "inputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  },
                  {
                    "name": "crossChain",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "blobBaseFee",
                "inputs": [
                  {
                    "name": "newBlobBaseFee",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "blobhashes",
                "inputs": [
                  {
                    "name": "hashes",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "bound",
                "inputs": [
                  {
                    "name": "current",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "min",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "max",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "bound",
                "inputs": [
                  {
                    "name": "current",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "min",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "max",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "breakpoint",
                "inputs": [
                  {
                    "name": "char",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "breakpoint",
                "inputs": [
                  {
                    "name": "char",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "broadcast",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "broadcast",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "broadcast",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "broadcastRawTransaction",
                "inputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "chainId",
                "inputs": [
                  {
                    "name": "newChainId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "clearMockedCalls",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "cloneAccount",
                "inputs": [
                  {
                    "name": "source",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "closeFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "coinbase",
                "inputs": [
                  {
                    "name": "newCoinbase",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "computeCreate2Address",
                "inputs": [
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "initCodeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "computeCreate2Address",
                "inputs": [
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "initCodeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "deployer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "computeCreateAddress",
                "inputs": [
                  {
                    "name": "deployer",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "nonce",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "contains",
                "inputs": [
                  {
                    "name": "subject",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "search",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "cool",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "coolSlot",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "slot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "copyFile",
                "inputs": [
                  {
                    "name": "from",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "to",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "copied",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "copyStorage",
                "inputs": [
                  {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "recursive",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createFork",
                "inputs": [
                  {
                    "name": "urlOrAlias",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createFork",
                "inputs": [
                  {
                    "name": "urlOrAlias",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createFork",
                "inputs": [
                  {
                    "name": "urlOrAlias",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "txHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createSelectFork",
                "inputs": [
                  {
                    "name": "urlOrAlias",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createSelectFork",
                "inputs": [
                  {
                    "name": "urlOrAlias",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "txHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createSelectFork",
                "inputs": [
                  {
                    "name": "urlOrAlias",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createWallet",
                "inputs": [
                  {
                    "name": "walletLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createWallet",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createWallet",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "walletLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deal",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "newBalance",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deleteSnapshot",
                "inputs": [
                  {
                    "name": "snapshotId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deleteSnapshots",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deleteStateSnapshot",
                "inputs": [
                  {
                    "name": "snapshotId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deleteStateSnapshots",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "constructorArgs",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "constructorArgs",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "constructorArgs",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "constructorArgs",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "derivationPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  },
                  {
                    "name": "language",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  },
                  {
                    "name": "language",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "derivationPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "difficulty",
                "inputs": [
                  {
                    "name": "newDifficulty",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "dumpState",
                "inputs": [
                  {
                    "name": "pathToStateJson",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "eip712HashStruct",
                "inputs": [
                  {
                    "name": "bindingsPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeName",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "typeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "eip712HashStruct",
                "inputs": [
                  {
                    "name": "typeNameOrDefinition",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "typeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "eip712HashType",
                "inputs": [
                  {
                    "name": "bindingsPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeName",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "typeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "eip712HashType",
                "inputs": [
                  {
                    "name": "typeNameOrDefinition",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "typeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "eip712HashTypedData",
                "inputs": [
                  {
                    "name": "jsonData",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "ensNamehash",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "envAddress",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envAddress",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBool",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBool",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes32",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes32",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envExists",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envInt",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envInt",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envString",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envString",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envUint",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envUint",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "etch",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "newRuntimeBytecode",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "eth_getLogs",
                "inputs": [
                  {
                    "name": "fromBlock",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "toBlock",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "topics",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "logs",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.EthGetLogs[]",
                    "components": [
                      {
                        "name": "emitter",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "topics",
                        "type": "bytes32[]",
                        "internalType": "bytes32[]"
                      },
                      {
                        "name": "data",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "blockHash",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "blockNumber",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "transactionHash",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "transactionIndex",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "logIndex",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "removed",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "exists",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "expectCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "gas",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "gas",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCallMinGas",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "minGas",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCallMinGas",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "minGas",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCreate",
                "inputs": [
                  {
                    "name": "bytecode",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "deployer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCreate2",
                "inputs": [
                  {
                    "name": "bytecode",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "deployer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmit",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmit",
                "inputs": [
                  {
                    "name": "checkTopic1",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic2",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic3",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkData",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmit",
                "inputs": [
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmit",
                "inputs": [
                  {
                    "name": "checkTopic1",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic2",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic3",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkData",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmit",
                "inputs": [
                  {
                    "name": "checkTopic1",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic2",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic3",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkData",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "emitter",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmit",
                "inputs": [
                  {
                    "name": "emitter",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmit",
                "inputs": [
                  {
                    "name": "emitter",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmit",
                "inputs": [
                  {
                    "name": "checkTopic1",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic2",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic3",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkData",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "emitter",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmitAnonymous",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmitAnonymous",
                "inputs": [
                  {
                    "name": "emitter",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmitAnonymous",
                "inputs": [
                  {
                    "name": "checkTopic0",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic1",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic2",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic3",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkData",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "emitter",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmitAnonymous",
                "inputs": [
                  {
                    "name": "checkTopic0",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic1",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic2",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic3",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkData",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectPartialRevert",
                "inputs": [
                  {
                    "name": "revertData",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectPartialRevert",
                "inputs": [
                  {
                    "name": "revertData",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  },
                  {
                    "name": "reverter",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectRevert",
                "inputs": [
                  {
                    "name": "reverter",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectRevert",
                "inputs": [
                  {
                    "name": "revertData",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  },
                  {
                    "name": "reverter",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectRevert",
                "inputs": [
                  {
                    "name": "revertData",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectRevert",
                "inputs": [
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectRevert",
                "inputs": [
                  {
                    "name": "revertData",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "reverter",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectRevert",
                "inputs": [
                  {
                    "name": "revertData",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  },
                  {
                    "name": "reverter",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectRevert",
                "inputs": [
                  {
                    "name": "revertData",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectRevert",
                "inputs": [
                  {
                    "name": "revertData",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "reverter",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectRevert",
                "inputs": [
                  {
                    "name": "reverter",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectRevert",
                "inputs": [
                  {
                    "name": "revertData",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectRevert",
                "inputs": [
                  {
                    "name": "revertData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectRevert",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectSafeMemory",
                "inputs": [
                  {
                    "name": "min",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "max",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectSafeMemoryCall",
                "inputs": [
                  {
                    "name": "min",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "max",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "fee",
                "inputs": [
                  {
                    "name": "newBasefee",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "ffi",
                "inputs": [
                  {
                    "name": "commandInput",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "foundryVersionAtLeast",
                "inputs": [
                  {
                    "name": "version",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "foundryVersionCmp",
                "inputs": [
                  {
                    "name": "version",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "fsMetadata",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "metadata",
                    "type": "tuple",
                    "internalType": "struct VmSafe.FsMetadata",
                    "components": [
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "length",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "readOnly",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "modified",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "accessed",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "created",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getArtifactPathByCode",
                "inputs": [
                  {
                    "name": "code",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getArtifactPathByDeployedCode",
                "inputs": [
                  {
                    "name": "deployedCode",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlobBaseFee",
                "inputs": [],
                "outputs": [
                  {
                    "name": "blobBaseFee",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlobhashes",
                "inputs": [],
                "outputs": [
                  {
                    "name": "hashes",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlockNumber",
                "inputs": [],
                "outputs": [
                  {
                    "name": "height",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlockTimestamp",
                "inputs": [],
                "outputs": [
                  {
                    "name": "timestamp",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBroadcast",
                "inputs": [
                  {
                    "name": "contractName",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "chainId",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "txType",
                    "type": "uint8",
                    "internalType": "enum VmSafe.BroadcastTxType"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct VmSafe.BroadcastTxSummary",
                    "components": [
                      {
                        "name": "txHash",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "txType",
                        "type": "uint8",
                        "internalType": "enum VmSafe.BroadcastTxType"
                      },
                      {
                        "name": "contractAddress",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "blockNumber",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBroadcasts",
                "inputs": [
                  {
                    "name": "contractName",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "chainId",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.BroadcastTxSummary[]",
                    "components": [
                      {
                        "name": "txHash",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "txType",
                        "type": "uint8",
                        "internalType": "enum VmSafe.BroadcastTxType"
                      },
                      {
                        "name": "contractAddress",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "blockNumber",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBroadcasts",
                "inputs": [
                  {
                    "name": "contractName",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "chainId",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "txType",
                    "type": "uint8",
                    "internalType": "enum VmSafe.BroadcastTxType"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.BroadcastTxSummary[]",
                    "components": [
                      {
                        "name": "txHash",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "txType",
                        "type": "uint8",
                        "internalType": "enum VmSafe.BroadcastTxType"
                      },
                      {
                        "name": "contractAddress",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "blockNumber",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getChain",
                "inputs": [
                  {
                    "name": "chainAlias",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "chain",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Chain",
                    "components": [
                      {
                        "name": "name",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "chainId",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "chainAlias",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "rpcUrl",
                        "type": "string",
                        "internalType": "string"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getChain",
                "inputs": [
                  {
                    "name": "chainId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "chain",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Chain",
                    "components": [
                      {
                        "name": "name",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "chainId",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "chainAlias",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "rpcUrl",
                        "type": "string",
                        "internalType": "string"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getChainId",
                "inputs": [],
                "outputs": [
                  {
                    "name": "blockChainId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "creationBytecode",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getDeployedCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "runtimeBytecode",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getDeployment",
                "inputs": [
                  {
                    "name": "contractName",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "chainId",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getDeployment",
                "inputs": [
                  {
                    "name": "contractName",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getDeployments",
                "inputs": [
                  {
                    "name": "contractName",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "chainId",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddresses",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getFoundryVersion",
                "inputs": [],
                "outputs": [
                  {
                    "name": "version",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getLabel",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "currentLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getMappingKeyAndParentOf",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "elementSlot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "found",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "key",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "parent",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getMappingLength",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "mappingSlot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "length",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getMappingSlotAt",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "mappingSlot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "idx",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getNonce",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "nonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getNonce",
                "inputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "nonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getRawBlockHeader",
                "inputs": [
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "rlpHeader",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getRecordedLogs",
                "inputs": [],
                "outputs": [
                  {
                    "name": "logs",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.Log[]",
                    "components": [
                      {
                        "name": "topics",
                        "type": "bytes32[]",
                        "internalType": "bytes32[]"
                      },
                      {
                        "name": "data",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "emitter",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getStateDiff",
                "inputs": [],
                "outputs": [
                  {
                    "name": "diff",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getStateDiffJson",
                "inputs": [],
                "outputs": [
                  {
                    "name": "diff",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getStorageAccesses",
                "inputs": [],
                "outputs": [
                  {
                    "name": "storageAccesses",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.StorageAccess[]",
                    "components": [
                      {
                        "name": "account",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "slot",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "isWrite",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "previousValue",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "newValue",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "reverted",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getWallets",
                "inputs": [],
                "outputs": [
                  {
                    "name": "wallets",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "indexOf",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "interceptInitcode",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "isContext",
                "inputs": [
                  {
                    "name": "context",
                    "type": "uint8",
                    "internalType": "enum VmSafe.ForgeContext"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "isDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "isFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "isPersistent",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "persistent",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "keyExists",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "keyExistsJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "keyExistsToml",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "label",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "newLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "lastCallGas",
                "inputs": [],
                "outputs": [
                  {
                    "name": "gas",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Gas",
                    "components": [
                      {
                        "name": "gasLimit",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "gasTotalUsed",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "gasMemoryUsed",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "gasRefunded",
                        "type": "int64",
                        "internalType": "int64"
                      },
                      {
                        "name": "gasRemaining",
                        "type": "uint64",
                        "internalType": "uint64"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "load",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "slot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "loadAllocs",
                "inputs": [
                  {
                    "name": "pathToAllocsJson",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "makePersistent",
                "inputs": [
                  {
                    "name": "accounts",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "makePersistent",
                "inputs": [
                  {
                    "name": "account0",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "account1",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "makePersistent",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "makePersistent",
                "inputs": [
                  {
                    "name": "account0",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "account1",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "account2",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "mockCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  },
                  {
                    "name": "returnData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "mockCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "returnData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "mockCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "returnData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "mockCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "data",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  },
                  {
                    "name": "returnData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "mockCallRevert",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  },
                  {
                    "name": "revertData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "mockCallRevert",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "data",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  },
                  {
                    "name": "revertData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "mockCallRevert",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "revertData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "mockCallRevert",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "revertData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "mockCalls",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "returnData",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "mockCalls",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "returnData",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "mockFunction",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "noAccessList",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "parseAddress",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseBool",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseBytes",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseBytes32",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseInt",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonAddress",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonAddressArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBool",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBoolArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytes",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytes32",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytes32Array",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytesArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonInt",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonIntArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonKeys",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "keys",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonString",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonStringArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonType",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonType",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonTypeArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonUint",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonUintArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseToml",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseToml",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlAddress",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlAddressArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBool",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBoolArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytes",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytes32",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytes32Array",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytesArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlInt",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlIntArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlKeys",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "keys",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlString",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlStringArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlType",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlType",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlTypeArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlUint",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlUintArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseUint",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "pauseGasMetering",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "pauseTracing",
                "inputs": [],
                "outputs": [],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "prank",
                "inputs": [
                  {
                    "name": "msgSender",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "txOrigin",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "prank",
                "inputs": [
                  {
                    "name": "msgSender",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "txOrigin",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "delegateCall",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "prank",
                "inputs": [
                  {
                    "name": "msgSender",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "delegateCall",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "prank",
                "inputs": [
                  {
                    "name": "msgSender",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "prevrandao",
                "inputs": [
                  {
                    "name": "newPrevrandao",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "prevrandao",
                "inputs": [
                  {
                    "name": "newPrevrandao",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "projectRoot",
                "inputs": [],
                "outputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "prompt",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptAddress",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptSecret",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptSecretUint",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptUint",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "publicKeyP256",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "publicKeyX",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "publicKeyY",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "randomAddress",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomBool",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomBytes",
                "inputs": [
                  {
                    "name": "len",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomBytes4",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomBytes8",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes8",
                    "internalType": "bytes8"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomInt",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomInt",
                "inputs": [
                  {
                    "name": "bits",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomUint",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomUint",
                "inputs": [
                  {
                    "name": "bits",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomUint",
                "inputs": [
                  {
                    "name": "min",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "max",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readCallers",
                "inputs": [],
                "outputs": [
                  {
                    "name": "callerMode",
                    "type": "uint8",
                    "internalType": "enum VmSafe.CallerMode"
                  },
                  {
                    "name": "msgSender",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "txOrigin",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "maxDepth",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [
                  {
                    "name": "entries",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.DirEntry[]",
                    "components": [
                      {
                        "name": "errorMessage",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "path",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "maxDepth",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "followLinks",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "entries",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.DirEntry[]",
                    "components": [
                      {
                        "name": "errorMessage",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "path",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "entries",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.DirEntry[]",
                    "components": [
                      {
                        "name": "errorMessage",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "path",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readFileBinary",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readLine",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "line",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readLink",
                "inputs": [
                  {
                    "name": "linkPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "targetPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "record",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "recordLogs",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rememberKey",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "keyAddr",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rememberKeys",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "derivationPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "count",
                    "type": "uint32",
                    "internalType": "uint32"
                  }
                ],
                "outputs": [
                  {
                    "name": "keyAddrs",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rememberKeys",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "derivationPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "language",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "count",
                    "type": "uint32",
                    "internalType": "uint32"
                  }
                ],
                "outputs": [
                  {
                    "name": "keyAddrs",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "removeDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "recursive",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "removeFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "replace",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "from",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "to",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "resetGasMetering",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "resetNonce",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "resolveEnv",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "resumeGasMetering",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "resumeTracing",
                "inputs": [],
                "outputs": [],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "revertTo",
                "inputs": [
                  {
                    "name": "snapshotId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "revertToAndDelete",
                "inputs": [
                  {
                    "name": "snapshotId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "revertToState",
                "inputs": [
                  {
                    "name": "snapshotId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "revertToStateAndDelete",
                "inputs": [
                  {
                    "name": "snapshotId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "revokePersistent",
                "inputs": [
                  {
                    "name": "accounts",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "revokePersistent",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "roll",
                "inputs": [
                  {
                    "name": "newHeight",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rollFork",
                "inputs": [
                  {
                    "name": "txHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rollFork",
                "inputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rollFork",
                "inputs": [
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rollFork",
                "inputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "txHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rpc",
                "inputs": [
                  {
                    "name": "urlOrAlias",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "method",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "params",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rpc",
                "inputs": [
                  {
                    "name": "method",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "params",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rpcUrl",
                "inputs": [
                  {
                    "name": "rpcAlias",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "rpcUrlStructs",
                "inputs": [],
                "outputs": [
                  {
                    "name": "urls",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.Rpc[]",
                    "components": [
                      {
                        "name": "key",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "url",
                        "type": "string",
                        "internalType": "string"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "rpcUrls",
                "inputs": [],
                "outputs": [
                  {
                    "name": "urls",
                    "type": "string[2][]",
                    "internalType": "string[2][]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "selectFork",
                "inputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeAddress",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeAddress",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBool",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBool",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes32",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes32",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeInt",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeInt",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeJson",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeJsonType",
                "inputs": [
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "serializeJsonType",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeString",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeString",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeUint",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeUint",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeUintToHex",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setArbitraryStorage",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "overwrite",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setArbitraryStorage",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setBlockhash",
                "inputs": [
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "blockHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setEnv",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setNonce",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "newNonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setNonceUnsafe",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "newNonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setSeed",
                "inputs": [
                  {
                    "name": "seed",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "shuffle",
                "inputs": [
                  {
                    "name": "array",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "signAndAttachDelegation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "signAndAttachDelegation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "nonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "signAndAttachDelegation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "crossChain",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "signCompact",
                "inputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "vs",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "signCompact",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "vs",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "signCompact",
                "inputs": [
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "vs",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "signCompact",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "vs",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "signDelegation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "signDelegation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "crossChain",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "signDelegation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "nonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "signP256",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "skip",
                "inputs": [
                  {
                    "name": "skipTest",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "reason",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "skip",
                "inputs": [
                  {
                    "name": "skipTest",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "sleep",
                "inputs": [
                  {
                    "name": "duration",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "snapshot",
                "inputs": [],
                "outputs": [
                  {
                    "name": "snapshotId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "snapshotGasLastCall",
                "inputs": [
                  {
                    "name": "group",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "gasUsed",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "snapshotGasLastCall",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "gasUsed",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "snapshotState",
                "inputs": [],
                "outputs": [
                  {
                    "name": "snapshotId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "snapshotValue",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "snapshotValue",
                "inputs": [
                  {
                    "name": "group",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "sort",
                "inputs": [
                  {
                    "name": "array",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "split",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delimiter",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "outputs",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "startBroadcast",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startBroadcast",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startBroadcast",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startDebugTraceRecording",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startMappingRecording",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startPrank",
                "inputs": [
                  {
                    "name": "msgSender",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startPrank",
                "inputs": [
                  {
                    "name": "msgSender",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "delegateCall",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startPrank",
                "inputs": [
                  {
                    "name": "msgSender",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "txOrigin",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startPrank",
                "inputs": [
                  {
                    "name": "msgSender",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "txOrigin",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "delegateCall",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startSnapshotGas",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startSnapshotGas",
                "inputs": [
                  {
                    "name": "group",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startStateDiffRecording",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopAndReturnDebugTraceRecording",
                "inputs": [],
                "outputs": [
                  {
                    "name": "step",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.DebugStep[]",
                    "components": [
                      {
                        "name": "stack",
                        "type": "uint256[]",
                        "internalType": "uint256[]"
                      },
                      {
                        "name": "memoryInput",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "opcode",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "isOutOfGas",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "contractAddr",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopAndReturnStateDiff",
                "inputs": [],
                "outputs": [
                  {
                    "name": "accountAccesses",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.AccountAccess[]",
                    "components": [
                      {
                        "name": "chainInfo",
                        "type": "tuple",
                        "internalType": "struct VmSafe.ChainInfo",
                        "components": [
                          {
                            "name": "forkId",
                            "type": "uint256",
                            "internalType": "uint256"
                          },
                          {
                            "name": "chainId",
                            "type": "uint256",
                            "internalType": "uint256"
                          }
                        ]
                      },
                      {
                        "name": "kind",
                        "type": "uint8",
                        "internalType": "enum VmSafe.AccountAccessKind"
                      },
                      {
                        "name": "account",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "accessor",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "initialized",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "oldBalance",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "newBalance",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "deployedCode",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "value",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "data",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "reverted",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "storageAccesses",
                        "type": "tuple[]",
                        "internalType": "struct VmSafe.StorageAccess[]",
                        "components": [
                          {
                            "name": "account",
                            "type": "address",
                            "internalType": "address"
                          },
                          {
                            "name": "slot",
                            "type": "bytes32",
                            "internalType": "bytes32"
                          },
                          {
                            "name": "isWrite",
                            "type": "bool",
                            "internalType": "bool"
                          },
                          {
                            "name": "previousValue",
                            "type": "bytes32",
                            "internalType": "bytes32"
                          },
                          {
                            "name": "newValue",
                            "type": "bytes32",
                            "internalType": "bytes32"
                          },
                          {
                            "name": "reverted",
                            "type": "bool",
                            "internalType": "bool"
                          }
                        ]
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "oldNonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "newNonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopBroadcast",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopExpectSafeMemory",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopMappingRecording",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopPrank",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopRecord",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopSnapshotGas",
                "inputs": [
                  {
                    "name": "group",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "gasUsed",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopSnapshotGas",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "gasUsed",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopSnapshotGas",
                "inputs": [],
                "outputs": [
                  {
                    "name": "gasUsed",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "store",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "slot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "toBase64",
                "inputs": [
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toBase64",
                "inputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toBase64URL",
                "inputs": [
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toBase64URL",
                "inputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toLowercase",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toUppercase",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "transact",
                "inputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "txHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "transact",
                "inputs": [
                  {
                    "name": "txHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "trim",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "tryFfi",
                "inputs": [
                  {
                    "name": "commandInput",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "tuple",
                    "internalType": "struct VmSafe.FfiResult",
                    "components": [
                      {
                        "name": "exitCode",
                        "type": "int32",
                        "internalType": "int32"
                      },
                      {
                        "name": "stdout",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "stderr",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "txGasPrice",
                "inputs": [
                  {
                    "name": "newGasPrice",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "unixTime",
                "inputs": [],
                "outputs": [
                  {
                    "name": "milliseconds",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "warmSlot",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "slot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "warp",
                "inputs": [
                  {
                    "name": "newTimestamp",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeFileBinary",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeLine",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeToml",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeToml",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"storageKeys\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct VmSafe.AccessListItem[]\",\"name\":\"access\",\"type\":\"tuple[]\"}],\"name\":\"accessList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert[]\",\"name\":\"potentialReverts\",\"type\":\"tuple[]\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert\",\"name\":\"potentialRevert\",\"type\":\"tuple\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"name\":\"attachBlob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"name\":\"attachDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"crossChain\",\"type\":\"bool\"}],\"name\":\"attachDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"bound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"min\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"max\",\"type\":\"int256\"}],\"name\":\"bound\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"broadcastRawTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"cloneAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"search\",\"type\":\"string\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"cool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"coolSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"copyStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteStateSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteStateSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bindingsPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeName\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"name\":\"eip712HashStruct\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeNameOrDefinition\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"name\":\"eip712HashStruct\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bindingsPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeName\",\"type\":\"string\"}],\"name\":\"eip712HashType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeNameOrDefinition\",\"type\":\"string\"}],\"name\":\"eip712HashType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"jsonData\",\"type\":\"string\"}],\"name\":\"eip712HashTypedData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"expectCreate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"expectCreate2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"foundryVersionAtLeast\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"foundryVersionCmp\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByDeployedCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcast\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"}],\"name\":\"getChain\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rpcUrl\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Chain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"getChain\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rpcUrl\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Chain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockChainId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployments\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"deployedAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFoundryVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getRawBlockHeader\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"rlpHeader\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiff\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiffJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageAccesses\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interceptInitcode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"noAccessList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"publicKeyP256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"name\":\"randomBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes4\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes8\",\"outputs\":[{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"resolveEnv\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToStateAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"overwrite\",\"type\":\"bool\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"setBlockhash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"setSeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"}],\"name\":\"shuffle\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"crossChain\",\"type\":\"bool\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"crossChain\",\"type\":\"bool\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshotState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"}],\"name\":\"sort\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDebugTraceRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnDebugTraceRecording\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"stack\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"memoryInput\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"opcode\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isOutOfGas\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.DebugStep[]\",\"name\":\"step\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"oldNonce\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"warmSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accessList((address,bytes32[])[])\":{\"notice\":\"Utility cheatcode to set an EIP-2930 access list for all subsequent transactions.\"},\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"assumeNoRevert((address,bool,bytes))\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters.\"},\"assumeNoRevert((address,bool,bytes)[])\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters.\"},\"assumeNoRevert()\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverted.\"},\"attachBlob(bytes)\":{\"notice\":\"Attach an EIP-4844 blob to the next call\"},\"attachDelegation((uint8,bytes32,bytes32,uint64,address))\":{\"notice\":\"Designate the next call as an EIP-7702 transaction\"},\"attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)\":{\"notice\":\"Designate the next call as an EIP-7702 transaction, with optional cross-chain validity.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"bound(int256,int256,int256)\":{\"notice\":\"Returns an int256 value bounded in given range and different from the current one.\"},\"bound(uint256,uint256,uint256)\":{\"notice\":\"Returns an uint256 value bounded in given range and different from the current one.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"broadcastRawTransaction(bytes)\":{\"notice\":\"Takes a signed transaction and broadcasts it to the network.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"cloneAccount(address,address)\":{\"notice\":\"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"contains(string,string)\":{\"notice\":\"Returns true if `search` is found in `subject`, false otherwise.\"},\"cool(address)\":{\"notice\":\"Marks the slots of an account and the account address as cold.\"},\"coolSlot(address,bytes32)\":{\"notice\":\"Utility cheatcode to mark specific storage slot as cold, simulating no prior read.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"copyStorage(address,address)\":{\"notice\":\"Utility cheatcode to copy storage of `from` contract to another `to` contract.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions.\"},\"deleteSnapshots()\":{\"notice\":\"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions.\"},\"deleteStateSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteStateSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deployCode(string,bytes,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deployCode(string,bytes,uint256)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`.\"},\"deployCode(string,bytes,uint256,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`.\"},\"deployCode(string,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,uint256)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`.\"},\"deployCode(string,uint256,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"eip712HashStruct(string,bytes)\":{\"notice\":\"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Supports 2 different inputs: 1. Name of the type (i.e. \\\"PermitSingle\\\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \\\"Foo(Bar bar) Bar(uint256 baz)\\\"). * Note: the cheatcode will use the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces.\"},\"eip712HashStruct(string,string,bytes)\":{\"notice\":\"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \\\"PermitSingle\\\"). * `abiEncodedData`: ABI-encoded data for the struct that is being hashed.\"},\"eip712HashType(string)\":{\"notice\":\"Generates the hash of the canonical EIP-712 type representation. Supports 2 different inputs: 1. Name of the type (i.e. \\\"Transaction\\\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \\\"Foo(Bar bar) Bar(uint256 baz)\\\"). * Note: the cheatcode will output the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces.\"},\"eip712HashType(string,string)\":{\"notice\":\"Generates the hash of the canonical EIP-712 type representation. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \\\"Transaction\\\").\"},\"eip712HashTypedData(string)\":{\"notice\":\"Generates a ready-to-sign digest of human-readable typed data following the EIP-712 standard.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCreate(bytes,address)\":{\"notice\":\"Expects the deployment of the specified bytecode by the specified address using the CREATE opcode\"},\"expectCreate2(bytes,address)\":{\"notice\":\"Expects the deployment of the specified bytecode by the specified address using the CREATE2 opcode\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(address,uint64)\":{\"notice\":\"Expect a given number of logs from a specific emitter with all topic and data checks enabled.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool,address,uint64)\":{\"notice\":\"Expect a given number of logs from a specific emitter with the provided topics.\"},\"expectEmit(bool,bool,bool,bool,uint64)\":{\"notice\":\"Expect a given number of logs with the provided topics.\"},\"expectEmit(uint64)\":{\"notice\":\"Expect a given number of logs with all topic and data checks enabled.\"},\"expectEmitAnonymous()\":{\"notice\":\"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmitAnonymous(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectPartialRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectPartialRevert(bytes4,address)\":{\"notice\":\"Expects an error on next call to reverter address, that starts with the revert data.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(address)\":{\"notice\":\"Expects an error with any revert data on next call to reverter address.\"},\"expectRevert(address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes,address)\":{\"notice\":\"Expects an error from reverter address on next call, that exactly matches the revert data.\"},\"expectRevert(bytes,address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data.\"},\"expectRevert(bytes,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4,address)\":{\"notice\":\"Expects an error from reverter address on next call, with any revert data.\"},\"expectRevert(bytes4,address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data.\"},\"expectRevert(bytes4,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls that match the revert data.\"},\"expectRevert(uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"foundryVersionAtLeast(string)\":{\"notice\":\"Returns true if the current Foundry version is greater than or equal to the given version. The given version string must be in the format `major.minor.patch`. This is equivalent to `foundryVersionCmp(version) >= 0`.\"},\"foundryVersionCmp(string)\":{\"notice\":\"Compares the current Foundry version with the given version string. The given version string must be in the format `major.minor.patch`. Returns: -1 if current Foundry version is less than the given version 0 if current Foundry version equals the given version 1 if current Foundry version is greater than the given version This result can then be used with a comparison operator against `0`. For example, to check if the current Foundry version is greater than or equal to `1.0.0`: `if (foundryVersionCmp(\\\"1.0.0\\\") >= 0) { ... }`\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getArtifactPathByCode(bytes)\":{\"notice\":\"Gets the artifact path from code (aka. creation code).\"},\"getArtifactPathByDeployedCode(bytes)\":{\"notice\":\"Gets the artifact path from deployed code (aka. runtime code).\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBroadcast(string,uint64,uint8)\":{\"notice\":\"Returns the most recent broadcast for the given contract on `chainId` matching `txType`. For example: The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`. The most recent call can be fetched by passing `txType` as `CALL`.\"},\"getBroadcasts(string,uint64)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getBroadcasts(string,uint64,uint8)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId` with the specified `txType`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getChain(string)\":{\"notice\":\"Returns a Chain struct for specific alias\"},\"getChain(uint256)\":{\"notice\":\"Returns a Chain struct for specific chainId\"},\"getChainId()\":{\"notice\":\"Gets the current `block.chainid` of the currently selected environment. You should use this instead of `block.chainid` if you use `vm.selectFork` or `vm.createSelectFork`, as `block.chainid` could be assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployment(string)\":{\"notice\":\"Returns the most recent deployment for the current `chainId`.\"},\"getDeployment(string,uint64)\":{\"notice\":\"Returns the most recent deployment for the given contract on `chainId`\"},\"getDeployments(string,uint64)\":{\"notice\":\"Returns all deployments for the given contract on `chainId` Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber. The most recent deployment is the first element, and the oldest is the last.\"},\"getFoundryVersion()\":{\"notice\":\"Returns the Foundry version. Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile> Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use UNIX format (e.g., >= 1700000000) to compare timestamps while ignoring minor time differences.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get the nonce of a `Wallet`.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRawBlockHeader(uint256)\":{\"notice\":\"Gets the RLP encoded block header for a given block number. Returns the block header in the same format as `cast block <block_number> --raw`.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"getStateDiff()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session.\"},\"getStateDiffJson()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session, in json format.\"},\"getStorageAccesses()\":{\"notice\":\"Returns an array of `StorageAccess` from current `vm.stateStateDiffRecording` session\"},\"getWallets()\":{\"notice\":\"Returns addresses of available unlocked wallets in the script environment.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"interceptInitcode()\":{\"notice\":\"Causes the next contract creation (via new) to fail and return its initcode in the returndata buffer. This allows type-safe access to the initcode payload that would be used for contract creation. Example usage: vm.interceptInitcode(); bytes memory initcode; try new MyContract(param1, param2) { assert(false); } catch (bytes memory interceptedInitcode) { initcode = interceptedInitcode; }\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call from the callee perspective.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory EVM state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,bytes4,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCall(address,uint256,bytes4,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,bytes4,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"mockCallRevert(address,uint256,bytes4,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCalls(address,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address, returning specified data for each call.\"},\"mockCalls(address,uint256,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call.\"},\"mockFunction(address,address,bytes)\":{\"notice\":\"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted.\"},\"noAccessList()\":{\"notice\":\"Utility cheatcode to remove any EIP-2930 access list set by `accessList` cheatcode.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlType(string,string)\":{\"notice\":\"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlType(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlTypeArray(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"pauseTracing()\":{\"notice\":\"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prank(address,address,bool)\":{\"notice\":\"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prank(address,bool)\":{\"notice\":\"Sets the *next* delegate call's `msg.sender` to be the input address.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"publicKeyP256(uint256)\":{\"notice\":\"Derives secp256r1 public key from the provided `privateKey`.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomBool()\":{\"notice\":\"Returns a random `bool`.\"},\"randomBytes(uint256)\":{\"notice\":\"Returns a random byte array value of the given length.\"},\"randomBytes4()\":{\"notice\":\"Returns a random fixed-size byte array of length 4.\"},\"randomBytes8()\":{\"notice\":\"Returns a random fixed-size byte array of length 8.\"},\"randomInt()\":{\"notice\":\"Returns a random `int256` value.\"},\"randomInt(uint256)\":{\"notice\":\"Returns a random `int256` value of given bits.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256)\":{\"notice\":\"Returns a random `uint256` value of given bits.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uint256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes. Use `accesses` to get the recorded data. Subsequent calls to `record` will clear the previous data.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"rememberKeys(string,string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"rememberKeys(string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetGasMetering()\":{\"notice\":\"Reset gas metering (i.e. gas usage is set to gas limit).\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resolveEnv(string)\":{\"notice\":\"Resolves the env variable placeholders of a given input string.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"resumeTracing()\":{\"notice\":\"Unpauses collection of call traces.\"},\"revertTo(uint256)\":{\"notice\":\"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions.\"},\"revertToState(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`.\"},\"revertToStateAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setArbitraryStorage(address)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address.\"},\"setArbitraryStorage(address,bool)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address and overwrite any storage slots that have been previously set.\"},\"setBlockhash(uint256,bytes32)\":{\"notice\":\"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"setSeed(uint256)\":{\"notice\":\"Set RNG seed.\"},\"shuffle(uint256[])\":{\"notice\":\"Randomly shuffles an array.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signAndAttachDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction\"},\"signAndAttachDelegation(address,uint256,bool)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction, with optional cross-chain validity.\"},\"signAndAttachDelegation(address,uint256,uint64)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction for specific nonce\"},\"signCompact((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signCompact(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address.\"},\"signCompact(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"signCompact(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation\"},\"signDelegation(address,uint256,bool)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation, with optional cross-chain validity.\"},\"signDelegation(address,uint256,uint64)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation for specific nonce\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top level of a test.\"},\"skip(bool,string)\":{\"notice\":\"Marks a test as skipped with a reason. Must be called at the top level of a test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions.\"},\"snapshotGasLastCall(string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name from the callee perspective.\"},\"snapshotGasLastCall(string,string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name in a group from the callee perspective.\"},\"snapshotState()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertToState`.\"},\"snapshotValue(string,string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name in a group.\"},\"snapshotValue(string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name. The group name is derived from the contract name.\"},\"sort(uint256[])\":{\"notice\":\"Sorts an array in ascending order.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startDebugTraceRecording()\":{\"notice\":\"Records the debug trace during the run.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startPrank(address,address,bool)\":{\"notice\":\"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startPrank(address,bool)\":{\"notice\":\"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startSnapshotGas(string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name. The group name is derived from the contract name.\"},\"startSnapshotGas(string,string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name in a group.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnDebugTraceRecording()\":{\"notice\":\"Stop debug trace recording and returns the recorded debug trace.\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"stopRecord()\":{\"notice\":\"Stops recording storage reads and writes.\"},\"stopSnapshotGas()\":{\"notice\":\"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start.\"},\"stopSnapshotGas(string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start. The group name is derived from the contract name.\"},\"stopSnapshotGas(string,string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warmSlot(address,bytes32)\":{\"notice\":\"Utility cheatcode to mark specific storage slot as warm, simulating a prior read.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing. This cheatcode will create new keys if they didn't previously exist.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing. This cheatcode will create new keys if they didn't previously exist.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "accessList((address,bytes32[])[])": "743e4cb7",
                "accesses(address)": "65bc9481",
                "activeFork()": "2f103f22",
                "addr(uint256)": "ffa18649",
                "allowCheatcodes(address)": "ea060291",
                "assertApproxEqAbs(int256,int256,uint256)": "240f839d",
                "assertApproxEqAbs(int256,int256,uint256,string)": "8289e621",
                "assertApproxEqAbs(uint256,uint256,uint256)": "16d207c6",
                "assertApproxEqAbs(uint256,uint256,uint256,string)": "f710b062",
                "assertApproxEqAbsDecimal(int256,int256,uint256,uint256)": "3d5bc8bc",
                "assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)": "6a5066d4",
                "assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)": "045c55ce",
                "assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)": "60429eb2",
                "assertApproxEqRel(int256,int256,uint256)": "fea2d14f",
                "assertApproxEqRel(int256,int256,uint256,string)": "ef277d72",
                "assertApproxEqRel(uint256,uint256,uint256)": "8cf25ef4",
                "assertApproxEqRel(uint256,uint256,uint256,string)": "1ecb7d33",
                "assertApproxEqRelDecimal(int256,int256,uint256,uint256)": "abbf21cc",
                "assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)": "fccc11c4",
                "assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)": "21ed2977",
                "assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)": "82d6c8fd",
                "assertEq(address,address)": "515361f6",
                "assertEq(address,address,string)": "2f2769d1",
                "assertEq(address[],address[])": "3868ac34",
                "assertEq(address[],address[],string)": "3e9173c5",
                "assertEq(bool,bool)": "f7fe3477",
                "assertEq(bool,bool,string)": "4db19e7e",
                "assertEq(bool[],bool[])": "707df785",
                "assertEq(bool[],bool[],string)": "e48a8f8d",
                "assertEq(bytes,bytes)": "97624631",
                "assertEq(bytes,bytes,string)": "e24fed00",
                "assertEq(bytes32,bytes32)": "7c84c69b",
                "assertEq(bytes32,bytes32,string)": "c1fa1ed0",
                "assertEq(bytes32[],bytes32[])": "0cc9ee84",
                "assertEq(bytes32[],bytes32[],string)": "e03e9177",
                "assertEq(bytes[],bytes[])": "e5fb9b4a",
                "assertEq(bytes[],bytes[],string)": "f413f0b6",
                "assertEq(int256,int256)": "fe74f05b",
                "assertEq(int256,int256,string)": "714a2f13",
                "assertEq(int256[],int256[])": "711043ac",
                "assertEq(int256[],int256[],string)": "191f1b30",
                "assertEq(string,string)": "f320d963",
                "assertEq(string,string,string)": "36f656d8",
                "assertEq(string[],string[])": "cf1c049c",
                "assertEq(string[],string[],string)": "eff6b27d",
                "assertEq(uint256,uint256)": "98296c54",
                "assertEq(uint256,uint256,string)": "88b44c85",
                "assertEq(uint256[],uint256[])": "975d5a12",
                "assertEq(uint256[],uint256[],string)": "5d18c73a",
                "assertEqDecimal(int256,int256,uint256)": "48016c04",
                "assertEqDecimal(int256,int256,uint256,string)": "7e77b0c5",
                "assertEqDecimal(uint256,uint256,uint256)": "27af7d9c",
                "assertEqDecimal(uint256,uint256,uint256,string)": "d0cbbdef",
                "assertFalse(bool)": "a5982885",
                "assertFalse(bool,string)": "7ba04809",
                "assertGe(int256,int256)": "0a30b771",
                "assertGe(int256,int256,string)": "a84328dd",
                "assertGe(uint256,uint256)": "a8d4d1d9",
                "assertGe(uint256,uint256,string)": "e25242c0",
                "assertGeDecimal(int256,int256,uint256)": "dc28c0f1",
                "assertGeDecimal(int256,int256,uint256,string)": "5df93c9b",
                "assertGeDecimal(uint256,uint256,uint256)": "3d1fe08a",
                "assertGeDecimal(uint256,uint256,uint256,string)": "8bff9133",
                "assertGt(int256,int256)": "5a362d45",
                "assertGt(int256,int256,string)": "f8d33b9b",
                "assertGt(uint256,uint256)": "db07fcd2",
                "assertGt(uint256,uint256,string)": "d9a3c4d2",
                "assertGtDecimal(int256,int256,uint256)": "78611f0e",
                "assertGtDecimal(int256,int256,uint256,string)": "04a5c7ab",
                "assertGtDecimal(uint256,uint256,uint256)": "eccd2437",
                "assertGtDecimal(uint256,uint256,uint256,string)": "64949a8d",
                "assertLe(int256,int256)": "95fd154e",
                "assertLe(int256,int256,string)": "4dfe692c",
                "assertLe(uint256,uint256)": "8466f415",
                "assertLe(uint256,uint256,string)": "d17d4b0d",
                "assertLeDecimal(int256,int256,uint256)": "11d1364a",
                "assertLeDecimal(int256,int256,uint256,string)": "aa5cf788",
                "assertLeDecimal(uint256,uint256,uint256)": "c304aab7",
                "assertLeDecimal(uint256,uint256,uint256,string)": "7fefbbe0",
                "assertLt(int256,int256)": "3e914080",
                "assertLt(int256,int256,string)": "9ff531e3",
                "assertLt(uint256,uint256)": "b12fc005",
                "assertLt(uint256,uint256,string)": "65d5c135",
                "assertLtDecimal(int256,int256,uint256)": "dbe8d88b",
                "assertLtDecimal(int256,int256,uint256,string)": "40f0b4e0",
                "assertLtDecimal(uint256,uint256,uint256)": "2077337e",
                "assertLtDecimal(uint256,uint256,uint256,string)": "a972d037",
                "assertNotEq(address,address)": "b12e1694",
                "assertNotEq(address,address,string)": "8775a591",
                "assertNotEq(address[],address[])": "46d0b252",
                "assertNotEq(address[],address[],string)": "72c7e0b5",
                "assertNotEq(bool,bool)": "236e4d66",
                "assertNotEq(bool,bool,string)": "1091a261",
                "assertNotEq(bool[],bool[])": "286fafea",
                "assertNotEq(bool[],bool[],string)": "62c6f9fb",
                "assertNotEq(bytes,bytes)": "3cf78e28",
                "assertNotEq(bytes,bytes,string)": "9507540e",
                "assertNotEq(bytes32,bytes32)": "898e83fc",
                "assertNotEq(bytes32,bytes32,string)": "b2332f51",
                "assertNotEq(bytes32[],bytes32[])": "0603ea68",
                "assertNotEq(bytes32[],bytes32[],string)": "b873634c",
                "assertNotEq(bytes[],bytes[])": "edecd035",
                "assertNotEq(bytes[],bytes[],string)": "1dcd1f68",
                "assertNotEq(int256,int256)": "f4c004e3",
                "assertNotEq(int256,int256,string)": "4724c5b9",
                "assertNotEq(int256[],int256[])": "0b72f4ef",
                "assertNotEq(int256[],int256[],string)": "d3977322",
                "assertNotEq(string,string)": "6a8237b3",
                "assertNotEq(string,string,string)": "78bdcea7",
                "assertNotEq(string[],string[])": "bdfacbe8",
                "assertNotEq(string[],string[],string)": "b67187f3",
                "assertNotEq(uint256,uint256)": "b7909320",
                "assertNotEq(uint256,uint256,string)": "98f9bdbd",
                "assertNotEq(uint256[],uint256[])": "56f29cba",
                "assertNotEq(uint256[],uint256[],string)": "9a7fbd8f",
                "assertNotEqDecimal(int256,int256,uint256)": "14e75680",
                "assertNotEqDecimal(int256,int256,uint256,string)": "33949f0b",
                "assertNotEqDecimal(uint256,uint256,uint256)": "669efca7",
                "assertNotEqDecimal(uint256,uint256,uint256,string)": "f5a55558",
                "assertTrue(bool)": "0c9fd581",
                "assertTrue(bool,string)": "a34edc03",
                "assume(bool)": "4c63e562",
                "assumeNoRevert((address,bool,bytes))": "d8591eeb",
                "assumeNoRevert((address,bool,bytes)[])": "8a4592cc",
                "assumeNoRevert()": "285b366a",
                "attachBlob(bytes)": "10cb385c",
                "attachDelegation((uint8,bytes32,bytes32,uint64,address))": "14ae3519",
                "attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)": "f4460d34",
                "blobBaseFee(uint256)": "6d315d7e",
                "blobhashes(bytes32[])": "129de7eb",
                "bound(int256,int256,int256)": "8f48fc07",
                "bound(uint256,uint256,uint256)": "5a6c1eed",
                "breakpoint(string)": "f0259e92",
                "breakpoint(string,bool)": "f7d39a8d",
                "broadcast()": "afc98040",
                "broadcast(address)": "e6962cdb",
                "broadcast(uint256)": "f67a965b",
                "broadcastRawTransaction(bytes)": "8c0c72e0",
                "chainId(uint256)": "4049ddd2",
                "clearMockedCalls()": "3fdf4e15",
                "cloneAccount(address,address)": "533d61c9",
                "closeFile(string)": "48c3241f",
                "coinbase(address)": "ff483c54",
                "computeCreate2Address(bytes32,bytes32)": "890c283b",
                "computeCreate2Address(bytes32,bytes32,address)": "d323826a",
                "computeCreateAddress(address,uint256)": "74637a7a",
                "contains(string,string)": "3fb18aec",
                "cool(address)": "40ff9f21",
                "coolSlot(address,bytes32)": "8c78e654",
                "copyFile(string,string)": "a54a87d8",
                "copyStorage(address,address)": "203dac0d",
                "createDir(string,bool)": "168b64d3",
                "createFork(string)": "31ba3498",
                "createFork(string,bytes32)": "7ca29682",
                "createFork(string,uint256)": "6ba3ba2b",
                "createSelectFork(string)": "98680034",
                "createSelectFork(string,bytes32)": "84d52b7a",
                "createSelectFork(string,uint256)": "71ee464d",
                "createWallet(string)": "7404f1d2",
                "createWallet(uint256)": "7a675bb6",
                "createWallet(uint256,string)": "ed7c5462",
                "deal(address,uint256)": "c88a5e6d",
                "deleteSnapshot(uint256)": "a6368557",
                "deleteSnapshots()": "421ae469",
                "deleteStateSnapshot(uint256)": "08d6b37a",
                "deleteStateSnapshots()": "e0933c74",
                "deployCode(string)": "9a8325a0",
                "deployCode(string,bytes)": "29ce9dde",
                "deployCode(string,bytes,bytes32)": "016155bf",
                "deployCode(string,bytes,uint256)": "ff5d64e4",
                "deployCode(string,bytes,uint256,bytes32)": "3aa773ea",
                "deployCode(string,bytes32)": "17ab1d79",
                "deployCode(string,uint256)": "0af6a701",
                "deployCode(string,uint256,bytes32)": "002cb687",
                "deriveKey(string,string,uint32)": "6bcb2c1b",
                "deriveKey(string,string,uint32,string)": "29233b1f",
                "deriveKey(string,uint32)": "6229498b",
                "deriveKey(string,uint32,string)": "32c8176d",
                "difficulty(uint256)": "46cc92d9",
                "dumpState(string)": "709ecd3f",
                "eip712HashStruct(string,bytes)": "aedeaebc",
                "eip712HashStruct(string,string,bytes)": "6d06c57c",
                "eip712HashType(string)": "6792e9e2",
                "eip712HashType(string,string)": "18fb6406",
                "eip712HashTypedData(string)": "ea25e615",
                "ensNamehash(string)": "8c374c65",
                "envAddress(string)": "350d56bf",
                "envAddress(string,string)": "ad31b9fa",
                "envBool(string)": "7ed1ec7d",
                "envBool(string,string)": "aaaddeaf",
                "envBytes(string)": "4d7baf06",
                "envBytes(string,string)": "ddc2651b",
                "envBytes32(string)": "97949042",
                "envBytes32(string,string)": "5af231c1",
                "envExists(string)": "ce8365f9",
                "envInt(string)": "892a0c61",
                "envInt(string,string)": "42181150",
                "envOr(string,address)": "561fe540",
                "envOr(string,bool)": "4777f3cf",
                "envOr(string,bytes)": "b3e47705",
                "envOr(string,bytes32)": "b4a85892",
                "envOr(string,int256)": "bbcb713e",
                "envOr(string,string)": "d145736c",
                "envOr(string,string,address[])": "c74e9deb",
                "envOr(string,string,bool[])": "eb85e83b",
                "envOr(string,string,bytes32[])": "2281f367",
                "envOr(string,string,bytes[])": "64bc3e64",
                "envOr(string,string,int256[])": "4700d74b",
                "envOr(string,string,string[])": "859216bc",
                "envOr(string,string,uint256[])": "74318528",
                "envOr(string,uint256)": "5e97348f",
                "envString(string)": "f877cb19",
                "envString(string,string)": "14b02bc9",
                "envUint(string)": "c1978d1f",
                "envUint(string,string)": "f3dec099",
                "etch(address,bytes)": "b4d6c782",
                "eth_getLogs(uint256,uint256,address,bytes32[])": "35e1349b",
                "exists(string)": "261a323e",
                "expectCall(address,bytes)": "bd6af434",
                "expectCall(address,bytes,uint64)": "c1adbbff",
                "expectCall(address,uint256,bytes)": "f30c7ba3",
                "expectCall(address,uint256,bytes,uint64)": "a2b1a1ae",
                "expectCall(address,uint256,uint64,bytes)": "23361207",
                "expectCall(address,uint256,uint64,bytes,uint64)": "65b7b7cc",
                "expectCallMinGas(address,uint256,uint64,bytes)": "08e4e116",
                "expectCallMinGas(address,uint256,uint64,bytes,uint64)": "e13a1834",
                "expectCreate(bytes,address)": "73cdce36",
                "expectCreate2(bytes,address)": "ea54a472",
                "expectEmit()": "440ed10d",
                "expectEmit(address)": "86b9620d",
                "expectEmit(address,uint64)": "b43aece3",
                "expectEmit(bool,bool,bool,bool)": "491cc7c2",
                "expectEmit(bool,bool,bool,bool,address)": "81bad6f3",
                "expectEmit(bool,bool,bool,bool,address,uint64)": "c339d02c",
                "expectEmit(bool,bool,bool,bool,uint64)": "5e1d1c33",
                "expectEmit(uint64)": "4c74a335",
                "expectEmitAnonymous()": "2e5f270c",
                "expectEmitAnonymous(address)": "6fc68705",
                "expectEmitAnonymous(bool,bool,bool,bool,bool)": "c948db5e",
                "expectEmitAnonymous(bool,bool,bool,bool,bool,address)": "71c95899",
                "expectPartialRevert(bytes4)": "11fb5b9c",
                "expectPartialRevert(bytes4,address)": "51aa008a",
                "expectRevert()": "f4844814",
                "expectRevert(address)": "d814f38a",
                "expectRevert(address,uint64)": "1ff5f952",
                "expectRevert(bytes)": "f28dceb3",
                "expectRevert(bytes,address)": "61ebcf12",
                "expectRevert(bytes,address,uint64)": "d345fb1f",
                "expectRevert(bytes,uint64)": "4994c273",
                "expectRevert(bytes4)": "c31eb0e0",
                "expectRevert(bytes4,address)": "260bc5de",
                "expectRevert(bytes4,address,uint64)": "b0762d73",
                "expectRevert(bytes4,uint64)": "e45ca72d",
                "expectRevert(uint64)": "4ee38244",
                "expectSafeMemory(uint64,uint64)": "6d016688",
                "expectSafeMemoryCall(uint64,uint64)": "05838bf4",
                "fee(uint256)": "39b37ab0",
                "ffi(string[])": "89160467",
                "foundryVersionAtLeast(string)": "6248be1f",
                "foundryVersionCmp(string)": "ca7b0a09",
                "fsMetadata(string)": "af368a08",
                "getArtifactPathByCode(bytes)": "eb74848c",
                "getArtifactPathByDeployedCode(bytes)": "6d853ba5",
                "getBlobBaseFee()": "1f6d6ef7",
                "getBlobhashes()": "f56ff18b",
                "getBlockNumber()": "42cbb15c",
                "getBlockTimestamp()": "796b89b9",
                "getBroadcast(string,uint64,uint8)": "3dc90cb3",
                "getBroadcasts(string,uint64)": "f2fa4a26",
                "getBroadcasts(string,uint64,uint8)": "f7afe919",
                "getChain(string)": "4cc1c2bb",
                "getChain(uint256)": "b6791ad4",
                "getChainId()": "3408e470",
                "getCode(string)": "8d1cc925",
                "getDeployedCode(string)": "3ebf73b4",
                "getDeployment(string)": "a8091d97",
                "getDeployment(string,uint64)": "0debd5d6",
                "getDeployments(string,uint64)": "74e133dd",
                "getFoundryVersion()": "ea991bb5",
                "getLabel(address)": "28a249b0",
                "getMappingKeyAndParentOf(address,bytes32)": "876e24e6",
                "getMappingLength(address,bytes32)": "2f2fd63f",
                "getMappingSlotAt(address,bytes32,uint256)": "ebc73ab4",
                "getNonce((address,uint256,uint256,uint256))": "a5748aad",
                "getNonce(address)": "2d0335ab",
                "getRawBlockHeader(uint256)": "2c667606",
                "getRecordedLogs()": "191553a4",
                "getStateDiff()": "80df01cc",
                "getStateDiffJson()": "f54fe009",
                "getStorageAccesses()": "2899b1d0",
                "getWallets()": "db7a4605",
                "indexOf(string,string)": "8a0807b7",
                "interceptInitcode()": "838653c7",
                "isContext(uint8)": "64af255d",
                "isDir(string)": "7d15d019",
                "isFile(string)": "e0eb04d4",
                "isPersistent(address)": "d92d8efd",
                "keyExists(string,string)": "528a683c",
                "keyExistsJson(string,string)": "db4235f6",
                "keyExistsToml(string,string)": "600903ad",
                "label(address,string)": "c657c718",
                "lastCallGas()": "2b589b28",
                "load(address,bytes32)": "667f9d70",
                "loadAllocs(string)": "b3a056d7",
                "makePersistent(address)": "57e22dde",
                "makePersistent(address,address)": "4074e0a8",
                "makePersistent(address,address,address)": "efb77a75",
                "makePersistent(address[])": "1d9e269e",
                "mockCall(address,bytes,bytes)": "b96213e4",
                "mockCall(address,bytes4,bytes)": "08e0c537",
                "mockCall(address,uint256,bytes,bytes)": "81409b91",
                "mockCall(address,uint256,bytes4,bytes)": "e7b36a3d",
                "mockCallRevert(address,bytes,bytes)": "dbaad147",
                "mockCallRevert(address,bytes4,bytes)": "2dfba5df",
                "mockCallRevert(address,uint256,bytes,bytes)": "d23cd037",
                "mockCallRevert(address,uint256,bytes4,bytes)": "596c8f04",
                "mockCalls(address,bytes,bytes[])": "5c5c3de9",
                "mockCalls(address,uint256,bytes,bytes[])": "08bcbae1",
                "mockFunction(address,address,bytes)": "adf84d21",
                "noAccessList()": "238ad778",
                "parseAddress(string)": "c6ce059d",
                "parseBool(string)": "974ef924",
                "parseBytes(string)": "8f5d232d",
                "parseBytes32(string)": "087e6e81",
                "parseInt(string)": "42346c5e",
                "parseJson(string)": "6a82600a",
                "parseJson(string,string)": "85940ef1",
                "parseJsonAddress(string,string)": "1e19e657",
                "parseJsonAddressArray(string,string)": "2fce7883",
                "parseJsonBool(string,string)": "9f86dc91",
                "parseJsonBoolArray(string,string)": "91f3b94f",
                "parseJsonBytes(string,string)": "fd921be8",
                "parseJsonBytes32(string,string)": "1777e59d",
                "parseJsonBytes32Array(string,string)": "91c75bc3",
                "parseJsonBytesArray(string,string)": "6631aa99",
                "parseJsonInt(string,string)": "7b048ccd",
                "parseJsonIntArray(string,string)": "9983c28a",
                "parseJsonKeys(string,string)": "213e4198",
                "parseJsonString(string,string)": "49c4fac8",
                "parseJsonStringArray(string,string)": "498fdcf4",
                "parseJsonType(string,string)": "a9da313b",
                "parseJsonType(string,string,string)": "e3f5ae33",
                "parseJsonTypeArray(string,string,string)": "0175d535",
                "parseJsonUint(string,string)": "addde2b6",
                "parseJsonUintArray(string,string)": "522074ab",
                "parseToml(string)": "592151f0",
                "parseToml(string,string)": "37736e08",
                "parseTomlAddress(string,string)": "65e7c844",
                "parseTomlAddressArray(string,string)": "65c428e7",
                "parseTomlBool(string,string)": "d30dced6",
                "parseTomlBoolArray(string,string)": "127cfe9a",
                "parseTomlBytes(string,string)": "d77bfdb9",
                "parseTomlBytes32(string,string)": "8e214810",
                "parseTomlBytes32Array(string,string)": "3e716f81",
                "parseTomlBytesArray(string,string)": "b197c247",
                "parseTomlInt(string,string)": "c1350739",
                "parseTomlIntArray(string,string)": "d3522ae6",
                "parseTomlKeys(string,string)": "812a44b2",
                "parseTomlString(string,string)": "8bb8dd43",
                "parseTomlStringArray(string,string)": "9f629281",
                "parseTomlType(string,string)": "47fa5e11",
                "parseTomlType(string,string,string)": "f9fa5cdb",
                "parseTomlTypeArray(string,string,string)": "49be3743",
                "parseTomlUint(string,string)": "cc7b0487",
                "parseTomlUintArray(string,string)": "b5df27c8",
                "parseUint(string)": "fa91454d",
                "pauseGasMetering()": "d1a5b36f",
                "pauseTracing()": "c94d1f90",
                "prank(address)": "ca669fa7",
                "prank(address,address)": "47e50cce",
                "prank(address,address,bool)": "7d73d042",
                "prank(address,bool)": "a7f8bf5c",
                "prevrandao(bytes32)": "3b925549",
                "prevrandao(uint256)": "9cb1c0d4",
                "projectRoot()": "d930a0e6",
                "prompt(string)": "47eaf474",
                "promptAddress(string)": "62ee05f4",
                "promptSecret(string)": "1e279d41",
                "promptSecretUint(string)": "69ca02b7",
                "promptUint(string)": "652fd489",
                "publicKeyP256(uint256)": "c453949e",
                "randomAddress()": "d5bee9f5",
                "randomBool()": "cdc126bd",
                "randomBytes(uint256)": "6c5d32a9",
                "randomBytes4()": "9b7cd579",
                "randomBytes8()": "0497b0a5",
                "randomInt()": "111f1202",
                "randomInt(uint256)": "12845966",
                "randomUint()": "25124730",
                "randomUint(uint256)": "cf81e69c",
                "randomUint(uint256,uint256)": "d61b051b",
                "readCallers()": "4ad0bac9",
                "readDir(string)": "c4bc59e0",
                "readDir(string,uint64)": "1497876c",
                "readDir(string,uint64,bool)": "8102d70d",
                "readFile(string)": "60f9bb11",
                "readFileBinary(string)": "16ed7bc4",
                "readLine(string)": "70f55728",
                "readLink(string)": "9f5684a2",
                "record()": "266cf109",
                "recordLogs()": "41af2f52",
                "rememberKey(uint256)": "22100064",
                "rememberKeys(string,string,string,uint32)": "f8d58eaf",
                "rememberKeys(string,string,uint32)": "97cb9189",
                "removeDir(string,bool)": "45c62011",
                "removeFile(string)": "f1afe04d",
                "replace(string,string,string)": "e00ad03e",
                "resetGasMetering()": "be367dd3",
                "resetNonce(address)": "1c72346d",
                "resolveEnv(string)": "ddd2128d",
                "resumeGasMetering()": "2bcd50e0",
                "resumeTracing()": "72a09ccb",
                "revertTo(uint256)": "44d7f0a4",
                "revertToAndDelete(uint256)": "03e0aca9",
                "revertToState(uint256)": "c2527405",
                "revertToStateAndDelete(uint256)": "3a1985dc",
                "revokePersistent(address)": "997a0222",
                "revokePersistent(address[])": "3ce969e6",
                "roll(uint256)": "1f7b4f30",
                "rollFork(bytes32)": "0f29772b",
                "rollFork(uint256)": "d9bbf3a1",
                "rollFork(uint256,bytes32)": "f2830f7b",
                "rollFork(uint256,uint256)": "d74c83a4",
                "rpc(string,string)": "1206c8a8",
                "rpc(string,string,string)": "0199a220",
                "rpcUrl(string)": "975a6ce9",
                "rpcUrlStructs()": "9d2ad72a",
                "rpcUrls()": "a85a8418",
                "selectFork(uint256)": "9ebf6827",
                "serializeAddress(string,string,address)": "972c6062",
                "serializeAddress(string,string,address[])": "1e356e1a",
                "serializeBool(string,string,bool)": "ac22e971",
                "serializeBool(string,string,bool[])": "92925aa1",
                "serializeBytes(string,string,bytes)": "f21d52c7",
                "serializeBytes(string,string,bytes[])": "9884b232",
                "serializeBytes32(string,string,bytes32)": "2d812b44",
                "serializeBytes32(string,string,bytes32[])": "201e43e2",
                "serializeInt(string,string,int256)": "3f33db60",
                "serializeInt(string,string,int256[])": "7676e127",
                "serializeJson(string,string)": "9b3358b0",
                "serializeJsonType(string,bytes)": "6d4f96a6",
                "serializeJsonType(string,string,string,bytes)": "6f93bccb",
                "serializeString(string,string,string)": "88da6d35",
                "serializeString(string,string,string[])": "561cd6f3",
                "serializeUint(string,string,uint256)": "129e9002",
                "serializeUint(string,string,uint256[])": "fee9a469",
                "serializeUintToHex(string,string,uint256)": "ae5a2ae8",
                "setArbitraryStorage(address)": "e1631837",
                "setArbitraryStorage(address,bool)": "d3ec2a0b",
                "setBlockhash(uint256,bytes32)": "5314b54a",
                "setEnv(string,string)": "3d5923ee",
                "setNonce(address,uint64)": "f8e18b57",
                "setNonceUnsafe(address,uint64)": "9b67b21c",
                "setSeed(uint256)": "c32a50f9",
                "shuffle(uint256[])": "54f1469c",
                "sign((address,uint256,uint256,uint256),bytes32)": "b25c5a25",
                "sign(address,bytes32)": "8c1aa205",
                "sign(bytes32)": "799cd333",
                "sign(uint256,bytes32)": "e341eaa4",
                "signAndAttachDelegation(address,uint256)": "c7fa7288",
                "signAndAttachDelegation(address,uint256,bool)": "d936e146",
                "signAndAttachDelegation(address,uint256,uint64)": "cde3e5be",
                "signCompact((address,uint256,uint256,uint256),bytes32)": "3d0e292f",
                "signCompact(address,bytes32)": "8e2f97bf",
                "signCompact(bytes32)": "a282dc4b",
                "signCompact(uint256,bytes32)": "cc2a781f",
                "signDelegation(address,uint256)": "5b593c7b",
                "signDelegation(address,uint256,bool)": "cdd7563d",
                "signDelegation(address,uint256,uint64)": "ceba2ec3",
                "signP256(uint256,bytes32)": "83211b40",
                "skip(bool)": "dd82d13e",
                "skip(bool,string)": "c42a80a7",
                "sleep(uint256)": "fa9d8713",
                "snapshot()": "9711715a",
                "snapshotGasLastCall(string)": "dd9fca12",
                "snapshotGasLastCall(string,string)": "200c6772",
                "snapshotState()": "9cd23835",
                "snapshotValue(string,string,uint256)": "6d2b27d8",
                "snapshotValue(string,uint256)": "51db805a",
                "sort(uint256[])": "9ec8b026",
                "split(string,string)": "8bb75533",
                "startBroadcast()": "7fb5297f",
                "startBroadcast(address)": "7fec2a8d",
                "startBroadcast(uint256)": "ce817d47",
                "startDebugTraceRecording()": "419c8832",
                "startMappingRecording()": "3e9705c0",
                "startPrank(address)": "06447d56",
                "startPrank(address,address)": "45b56078",
                "startPrank(address,address,bool)": "4eb859b5",
                "startPrank(address,bool)": "1cc0b435",
                "startSnapshotGas(string)": "3cad9d7b",
                "startSnapshotGas(string,string)": "6cd0cc53",
                "startStateDiffRecording()": "cf22e3c9",
                "stopAndReturnDebugTraceRecording()": "ced398a2",
                "stopAndReturnStateDiff()": "aa5cf90e",
                "stopBroadcast()": "76eadd36",
                "stopExpectSafeMemory()": "0956441b",
                "stopMappingRecording()": "0d4aae9b",
                "stopPrank()": "90c5013b",
                "stopRecord()": "996be76d",
                "stopSnapshotGas()": "f6402eda",
                "stopSnapshotGas(string)": "773b2805",
                "stopSnapshotGas(string,string)": "0c9db707",
                "store(address,bytes32,bytes32)": "70ca10bb",
                "toBase64(bytes)": "a5cbfe65",
                "toBase64(string)": "3f8be2c8",
                "toBase64URL(bytes)": "c8bd0e4a",
                "toBase64URL(string)": "ae3165b3",
                "toLowercase(string)": "50bb0884",
                "toString(address)": "56ca623e",
                "toString(bool)": "71dce7da",
                "toString(bytes)": "71aad10d",
                "toString(bytes32)": "b11a19e8",
                "toString(int256)": "a322c40e",
                "toString(uint256)": "6900a3ae",
                "toUppercase(string)": "074ae3d7",
                "transact(bytes32)": "be646da1",
                "transact(uint256,bytes32)": "4d8abc4b",
                "trim(string)": "b2dad155",
                "tryFfi(string[])": "f45c1ce7",
                "txGasPrice(uint256)": "48f50c0f",
                "unixTime()": "625387dc",
                "warmSlot(address,bytes32)": "b23184cf",
                "warp(uint256)": "e5d6bf02",
                "writeFile(string,string)": "897e0a97",
                "writeFileBinary(string,bytes)": "1f21fc80",
                "writeJson(string,string)": "e23cd19f",
                "writeJson(string,string,string)": "35d6ad46",
                "writeLine(string,string)": "619d897f",
                "writeToml(string,string)": "c0865ba7",
                "writeToml(string,string,string)": "51ac6a33"
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ],
      "VmSafe": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "accesses",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "readSlots",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "writeSlots",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "addr",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "keyAddr",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertFalse",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertFalse",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertTrue",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertTrue",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assume",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assumeNoRevert",
                "inputs": [],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assumeNoRevert",
                "inputs": [
                  {
                    "name": "potentialReverts",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.PotentialRevert[]",
                    "components": [
                      {
                        "name": "reverter",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "partialMatch",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "revertData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assumeNoRevert",
                "inputs": [
                  {
                    "name": "potentialRevert",
                    "type": "tuple",
                    "internalType": "struct VmSafe.PotentialRevert",
                    "components": [
                      {
                        "name": "reverter",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "partialMatch",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "revertData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "attachBlob",
                "inputs": [
                  {
                    "name": "blob",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "attachDelegation",
                "inputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "attachDelegation",
                "inputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  },
                  {
                    "name": "crossChain",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "bound",
                "inputs": [
                  {
                    "name": "current",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "min",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "max",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "bound",
                "inputs": [
                  {
                    "name": "current",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "min",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "max",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "breakpoint",
                "inputs": [
                  {
                    "name": "char",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "breakpoint",
                "inputs": [
                  {
                    "name": "char",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "broadcast",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "broadcast",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "broadcast",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "broadcastRawTransaction",
                "inputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "closeFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "computeCreate2Address",
                "inputs": [
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "initCodeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "computeCreate2Address",
                "inputs": [
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "initCodeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "deployer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "computeCreateAddress",
                "inputs": [
                  {
                    "name": "deployer",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "nonce",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "contains",
                "inputs": [
                  {
                    "name": "subject",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "search",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "copyFile",
                "inputs": [
                  {
                    "name": "from",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "to",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "copied",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "copyStorage",
                "inputs": [
                  {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "recursive",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createWallet",
                "inputs": [
                  {
                    "name": "walletLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createWallet",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createWallet",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "walletLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "constructorArgs",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "constructorArgs",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "constructorArgs",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deployCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "constructorArgs",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "derivationPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  },
                  {
                    "name": "language",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  },
                  {
                    "name": "language",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "derivationPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "eip712HashStruct",
                "inputs": [
                  {
                    "name": "bindingsPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeName",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "typeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "eip712HashStruct",
                "inputs": [
                  {
                    "name": "typeNameOrDefinition",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "typeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "eip712HashType",
                "inputs": [
                  {
                    "name": "bindingsPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeName",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "typeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "eip712HashType",
                "inputs": [
                  {
                    "name": "typeNameOrDefinition",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "typeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "eip712HashTypedData",
                "inputs": [
                  {
                    "name": "jsonData",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "ensNamehash",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "envAddress",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envAddress",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBool",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBool",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes32",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes32",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envExists",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envInt",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envInt",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envString",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envString",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envUint",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envUint",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "eth_getLogs",
                "inputs": [
                  {
                    "name": "fromBlock",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "toBlock",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "topics",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "logs",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.EthGetLogs[]",
                    "components": [
                      {
                        "name": "emitter",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "topics",
                        "type": "bytes32[]",
                        "internalType": "bytes32[]"
                      },
                      {
                        "name": "data",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "blockHash",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "blockNumber",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "transactionHash",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "transactionIndex",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "logIndex",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "removed",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "exists",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "ffi",
                "inputs": [
                  {
                    "name": "commandInput",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "foundryVersionAtLeast",
                "inputs": [
                  {
                    "name": "version",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "foundryVersionCmp",
                "inputs": [
                  {
                    "name": "version",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "fsMetadata",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "metadata",
                    "type": "tuple",
                    "internalType": "struct VmSafe.FsMetadata",
                    "components": [
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "length",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "readOnly",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "modified",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "accessed",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "created",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getArtifactPathByCode",
                "inputs": [
                  {
                    "name": "code",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getArtifactPathByDeployedCode",
                "inputs": [
                  {
                    "name": "deployedCode",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlobBaseFee",
                "inputs": [],
                "outputs": [
                  {
                    "name": "blobBaseFee",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlockNumber",
                "inputs": [],
                "outputs": [
                  {
                    "name": "height",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlockTimestamp",
                "inputs": [],
                "outputs": [
                  {
                    "name": "timestamp",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBroadcast",
                "inputs": [
                  {
                    "name": "contractName",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "chainId",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "txType",
                    "type": "uint8",
                    "internalType": "enum VmSafe.BroadcastTxType"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct VmSafe.BroadcastTxSummary",
                    "components": [
                      {
                        "name": "txHash",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "txType",
                        "type": "uint8",
                        "internalType": "enum VmSafe.BroadcastTxType"
                      },
                      {
                        "name": "contractAddress",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "blockNumber",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBroadcasts",
                "inputs": [
                  {
                    "name": "contractName",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "chainId",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.BroadcastTxSummary[]",
                    "components": [
                      {
                        "name": "txHash",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "txType",
                        "type": "uint8",
                        "internalType": "enum VmSafe.BroadcastTxType"
                      },
                      {
                        "name": "contractAddress",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "blockNumber",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBroadcasts",
                "inputs": [
                  {
                    "name": "contractName",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "chainId",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "txType",
                    "type": "uint8",
                    "internalType": "enum VmSafe.BroadcastTxType"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.BroadcastTxSummary[]",
                    "components": [
                      {
                        "name": "txHash",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "txType",
                        "type": "uint8",
                        "internalType": "enum VmSafe.BroadcastTxType"
                      },
                      {
                        "name": "contractAddress",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "blockNumber",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getChain",
                "inputs": [
                  {
                    "name": "chainAlias",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "chain",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Chain",
                    "components": [
                      {
                        "name": "name",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "chainId",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "chainAlias",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "rpcUrl",
                        "type": "string",
                        "internalType": "string"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getChain",
                "inputs": [
                  {
                    "name": "chainId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "chain",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Chain",
                    "components": [
                      {
                        "name": "name",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "chainId",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "chainAlias",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "rpcUrl",
                        "type": "string",
                        "internalType": "string"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getChainId",
                "inputs": [],
                "outputs": [
                  {
                    "name": "blockChainId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "creationBytecode",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getDeployedCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "runtimeBytecode",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getDeployment",
                "inputs": [
                  {
                    "name": "contractName",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "chainId",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getDeployment",
                "inputs": [
                  {
                    "name": "contractName",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddress",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getDeployments",
                "inputs": [
                  {
                    "name": "contractName",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "chainId",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [
                  {
                    "name": "deployedAddresses",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getFoundryVersion",
                "inputs": [],
                "outputs": [
                  {
                    "name": "version",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getLabel",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "currentLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getMappingKeyAndParentOf",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "elementSlot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "found",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "key",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "parent",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getMappingLength",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "mappingSlot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "length",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getMappingSlotAt",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "mappingSlot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "idx",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getNonce",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "nonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getNonce",
                "inputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "nonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getRawBlockHeader",
                "inputs": [
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "rlpHeader",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getRecordedLogs",
                "inputs": [],
                "outputs": [
                  {
                    "name": "logs",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.Log[]",
                    "components": [
                      {
                        "name": "topics",
                        "type": "bytes32[]",
                        "internalType": "bytes32[]"
                      },
                      {
                        "name": "data",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "emitter",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getStateDiff",
                "inputs": [],
                "outputs": [
                  {
                    "name": "diff",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getStateDiffJson",
                "inputs": [],
                "outputs": [
                  {
                    "name": "diff",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getStorageAccesses",
                "inputs": [],
                "outputs": [
                  {
                    "name": "storageAccesses",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.StorageAccess[]",
                    "components": [
                      {
                        "name": "account",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "slot",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "isWrite",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "previousValue",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "newValue",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "reverted",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getWallets",
                "inputs": [],
                "outputs": [
                  {
                    "name": "wallets",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "indexOf",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "isContext",
                "inputs": [
                  {
                    "name": "context",
                    "type": "uint8",
                    "internalType": "enum VmSafe.ForgeContext"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "isDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "isFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "keyExists",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "keyExistsJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "keyExistsToml",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "label",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "newLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "lastCallGas",
                "inputs": [],
                "outputs": [
                  {
                    "name": "gas",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Gas",
                    "components": [
                      {
                        "name": "gasLimit",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "gasTotalUsed",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "gasMemoryUsed",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "gasRefunded",
                        "type": "int64",
                        "internalType": "int64"
                      },
                      {
                        "name": "gasRemaining",
                        "type": "uint64",
                        "internalType": "uint64"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "load",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "slot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "parseAddress",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseBool",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseBytes",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseBytes32",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseInt",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonAddress",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonAddressArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBool",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBoolArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytes",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytes32",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytes32Array",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytesArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonInt",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonIntArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonKeys",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "keys",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonString",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonStringArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonType",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonType",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonTypeArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonUint",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonUintArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseToml",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseToml",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlAddress",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlAddressArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBool",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBoolArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytes",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytes32",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytes32Array",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytesArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlInt",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlIntArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlKeys",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "keys",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlString",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlStringArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlType",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlType",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlTypeArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlUint",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlUintArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseUint",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "pauseGasMetering",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "pauseTracing",
                "inputs": [],
                "outputs": [],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "projectRoot",
                "inputs": [],
                "outputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "prompt",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptAddress",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptSecret",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptSecretUint",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptUint",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "publicKeyP256",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "publicKeyX",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "publicKeyY",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "randomAddress",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomBool",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomBytes",
                "inputs": [
                  {
                    "name": "len",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomBytes4",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomBytes8",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes8",
                    "internalType": "bytes8"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomInt",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomInt",
                "inputs": [
                  {
                    "name": "bits",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomUint",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomUint",
                "inputs": [
                  {
                    "name": "bits",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "randomUint",
                "inputs": [
                  {
                    "name": "min",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "max",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "maxDepth",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [
                  {
                    "name": "entries",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.DirEntry[]",
                    "components": [
                      {
                        "name": "errorMessage",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "path",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "maxDepth",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "followLinks",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "entries",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.DirEntry[]",
                    "components": [
                      {
                        "name": "errorMessage",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "path",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "entries",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.DirEntry[]",
                    "components": [
                      {
                        "name": "errorMessage",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "path",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readFileBinary",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readLine",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "line",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readLink",
                "inputs": [
                  {
                    "name": "linkPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "targetPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "record",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "recordLogs",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rememberKey",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "keyAddr",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rememberKeys",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "derivationPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "count",
                    "type": "uint32",
                    "internalType": "uint32"
                  }
                ],
                "outputs": [
                  {
                    "name": "keyAddrs",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rememberKeys",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "derivationPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "language",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "count",
                    "type": "uint32",
                    "internalType": "uint32"
                  }
                ],
                "outputs": [
                  {
                    "name": "keyAddrs",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "removeDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "recursive",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "removeFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "replace",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "from",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "to",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "resetGasMetering",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "resolveEnv",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "resumeGasMetering",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "resumeTracing",
                "inputs": [],
                "outputs": [],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "rpc",
                "inputs": [
                  {
                    "name": "urlOrAlias",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "method",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "params",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rpc",
                "inputs": [
                  {
                    "name": "method",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "params",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rpcUrl",
                "inputs": [
                  {
                    "name": "rpcAlias",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "rpcUrlStructs",
                "inputs": [],
                "outputs": [
                  {
                    "name": "urls",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.Rpc[]",
                    "components": [
                      {
                        "name": "key",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "url",
                        "type": "string",
                        "internalType": "string"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "rpcUrls",
                "inputs": [],
                "outputs": [
                  {
                    "name": "urls",
                    "type": "string[2][]",
                    "internalType": "string[2][]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "serializeAddress",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeAddress",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBool",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBool",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes32",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes32",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeInt",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeInt",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeJson",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeJsonType",
                "inputs": [
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "serializeJsonType",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "typeDescription",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeString",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeString",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeUint",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeUint",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeUintToHex",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setArbitraryStorage",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "overwrite",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setArbitraryStorage",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setEnv",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setSeed",
                "inputs": [
                  {
                    "name": "seed",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "shuffle",
                "inputs": [
                  {
                    "name": "array",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "signAndAttachDelegation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "signAndAttachDelegation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "nonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "signAndAttachDelegation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "crossChain",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "signCompact",
                "inputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "vs",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "signCompact",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "vs",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "signCompact",
                "inputs": [
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "vs",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "signCompact",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "vs",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "signDelegation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "signDelegation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "crossChain",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "signDelegation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "nonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [
                  {
                    "name": "signedDelegation",
                    "type": "tuple",
                    "internalType": "struct VmSafe.SignedDelegation",
                    "components": [
                      {
                        "name": "v",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "r",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "s",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "nonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "implementation",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "signP256",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "sleep",
                "inputs": [
                  {
                    "name": "duration",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "sort",
                "inputs": [
                  {
                    "name": "array",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "split",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delimiter",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "outputs",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "startBroadcast",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startBroadcast",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startBroadcast",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startDebugTraceRecording",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startMappingRecording",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startStateDiffRecording",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopAndReturnDebugTraceRecording",
                "inputs": [],
                "outputs": [
                  {
                    "name": "step",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.DebugStep[]",
                    "components": [
                      {
                        "name": "stack",
                        "type": "uint256[]",
                        "internalType": "uint256[]"
                      },
                      {
                        "name": "memoryInput",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "opcode",
                        "type": "uint8",
                        "internalType": "uint8"
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "isOutOfGas",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "contractAddr",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopAndReturnStateDiff",
                "inputs": [],
                "outputs": [
                  {
                    "name": "accountAccesses",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.AccountAccess[]",
                    "components": [
                      {
                        "name": "chainInfo",
                        "type": "tuple",
                        "internalType": "struct VmSafe.ChainInfo",
                        "components": [
                          {
                            "name": "forkId",
                            "type": "uint256",
                            "internalType": "uint256"
                          },
                          {
                            "name": "chainId",
                            "type": "uint256",
                            "internalType": "uint256"
                          }
                        ]
                      },
                      {
                        "name": "kind",
                        "type": "uint8",
                        "internalType": "enum VmSafe.AccountAccessKind"
                      },
                      {
                        "name": "account",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "accessor",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "initialized",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "oldBalance",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "newBalance",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "deployedCode",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "value",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "data",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "reverted",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "storageAccesses",
                        "type": "tuple[]",
                        "internalType": "struct VmSafe.StorageAccess[]",
                        "components": [
                          {
                            "name": "account",
                            "type": "address",
                            "internalType": "address"
                          },
                          {
                            "name": "slot",
                            "type": "bytes32",
                            "internalType": "bytes32"
                          },
                          {
                            "name": "isWrite",
                            "type": "bool",
                            "internalType": "bool"
                          },
                          {
                            "name": "previousValue",
                            "type": "bytes32",
                            "internalType": "bytes32"
                          },
                          {
                            "name": "newValue",
                            "type": "bytes32",
                            "internalType": "bytes32"
                          },
                          {
                            "name": "reverted",
                            "type": "bool",
                            "internalType": "bool"
                          }
                        ]
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "oldNonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "newNonce",
                        "type": "uint64",
                        "internalType": "uint64"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopBroadcast",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopMappingRecording",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopRecord",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "toBase64",
                "inputs": [
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toBase64",
                "inputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toBase64URL",
                "inputs": [
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toBase64URL",
                "inputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toLowercase",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toUppercase",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "trim",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "tryFfi",
                "inputs": [
                  {
                    "name": "commandInput",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "tuple",
                    "internalType": "struct VmSafe.FfiResult",
                    "components": [
                      {
                        "name": "exitCode",
                        "type": "int32",
                        "internalType": "int32"
                      },
                      {
                        "name": "stdout",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "stderr",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "unixTime",
                "inputs": [],
                "outputs": [
                  {
                    "name": "milliseconds",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "writeFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeFileBinary",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeLine",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeToml",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeToml",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert[]\",\"name\":\"potentialReverts\",\"type\":\"tuple[]\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert\",\"name\":\"potentialRevert\",\"type\":\"tuple\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"name\":\"attachBlob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"name\":\"attachDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"crossChain\",\"type\":\"bool\"}],\"name\":\"attachDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"bound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"min\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"max\",\"type\":\"int256\"}],\"name\":\"bound\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"broadcastRawTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"search\",\"type\":\"string\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"copyStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bindingsPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeName\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"name\":\"eip712HashStruct\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeNameOrDefinition\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"name\":\"eip712HashStruct\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bindingsPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeName\",\"type\":\"string\"}],\"name\":\"eip712HashType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeNameOrDefinition\",\"type\":\"string\"}],\"name\":\"eip712HashType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"jsonData\",\"type\":\"string\"}],\"name\":\"eip712HashTypedData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"foundryVersionAtLeast\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"foundryVersionCmp\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByDeployedCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcast\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"}],\"name\":\"getChain\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rpcUrl\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Chain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"getChain\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rpcUrl\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Chain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockChainId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployments\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"deployedAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFoundryVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getRawBlockHeader\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"rlpHeader\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiff\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiffJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageAccesses\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"publicKeyP256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"name\":\"randomBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes4\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes8\",\"outputs\":[{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"resolveEnv\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"overwrite\",\"type\":\"bool\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"setSeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"}],\"name\":\"shuffle\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"crossChain\",\"type\":\"bool\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"crossChain\",\"type\":\"bool\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"}],\"name\":\"sort\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDebugTraceRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnDebugTraceRecording\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"stack\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"memoryInput\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"opcode\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isOutOfGas\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.DebugStep[]\",\"name\":\"step\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"oldNonce\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"assumeNoRevert((address,bool,bytes))\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters.\"},\"assumeNoRevert((address,bool,bytes)[])\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters.\"},\"assumeNoRevert()\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverted.\"},\"attachBlob(bytes)\":{\"notice\":\"Attach an EIP-4844 blob to the next call\"},\"attachDelegation((uint8,bytes32,bytes32,uint64,address))\":{\"notice\":\"Designate the next call as an EIP-7702 transaction\"},\"attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)\":{\"notice\":\"Designate the next call as an EIP-7702 transaction, with optional cross-chain validity.\"},\"bound(int256,int256,int256)\":{\"notice\":\"Returns an int256 value bounded in given range and different from the current one.\"},\"bound(uint256,uint256,uint256)\":{\"notice\":\"Returns an uint256 value bounded in given range and different from the current one.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"broadcastRawTransaction(bytes)\":{\"notice\":\"Takes a signed transaction and broadcasts it to the network.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"contains(string,string)\":{\"notice\":\"Returns true if `search` is found in `subject`, false otherwise.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"copyStorage(address,address)\":{\"notice\":\"Utility cheatcode to copy storage of `from` contract to another `to` contract.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deployCode(string,bytes,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deployCode(string,bytes,uint256)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`.\"},\"deployCode(string,bytes,uint256,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`.\"},\"deployCode(string,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,uint256)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`.\"},\"deployCode(string,uint256,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"eip712HashStruct(string,bytes)\":{\"notice\":\"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Supports 2 different inputs: 1. Name of the type (i.e. \\\"PermitSingle\\\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \\\"Foo(Bar bar) Bar(uint256 baz)\\\"). * Note: the cheatcode will use the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces.\"},\"eip712HashStruct(string,string,bytes)\":{\"notice\":\"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \\\"PermitSingle\\\"). * `abiEncodedData`: ABI-encoded data for the struct that is being hashed.\"},\"eip712HashType(string)\":{\"notice\":\"Generates the hash of the canonical EIP-712 type representation. Supports 2 different inputs: 1. Name of the type (i.e. \\\"Transaction\\\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \\\"Foo(Bar bar) Bar(uint256 baz)\\\"). * Note: the cheatcode will output the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces.\"},\"eip712HashType(string,string)\":{\"notice\":\"Generates the hash of the canonical EIP-712 type representation. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \\\"Transaction\\\").\"},\"eip712HashTypedData(string)\":{\"notice\":\"Generates a ready-to-sign digest of human-readable typed data following the EIP-712 standard.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"foundryVersionAtLeast(string)\":{\"notice\":\"Returns true if the current Foundry version is greater than or equal to the given version. The given version string must be in the format `major.minor.patch`. This is equivalent to `foundryVersionCmp(version) >= 0`.\"},\"foundryVersionCmp(string)\":{\"notice\":\"Compares the current Foundry version with the given version string. The given version string must be in the format `major.minor.patch`. Returns: -1 if current Foundry version is less than the given version 0 if current Foundry version equals the given version 1 if current Foundry version is greater than the given version This result can then be used with a comparison operator against `0`. For example, to check if the current Foundry version is greater than or equal to `1.0.0`: `if (foundryVersionCmp(\\\"1.0.0\\\") >= 0) { ... }`\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getArtifactPathByCode(bytes)\":{\"notice\":\"Gets the artifact path from code (aka. creation code).\"},\"getArtifactPathByDeployedCode(bytes)\":{\"notice\":\"Gets the artifact path from deployed code (aka. runtime code).\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBroadcast(string,uint64,uint8)\":{\"notice\":\"Returns the most recent broadcast for the given contract on `chainId` matching `txType`. For example: The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`. The most recent call can be fetched by passing `txType` as `CALL`.\"},\"getBroadcasts(string,uint64)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getBroadcasts(string,uint64,uint8)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId` with the specified `txType`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getChain(string)\":{\"notice\":\"Returns a Chain struct for specific alias\"},\"getChain(uint256)\":{\"notice\":\"Returns a Chain struct for specific chainId\"},\"getChainId()\":{\"notice\":\"Gets the current `block.chainid` of the currently selected environment. You should use this instead of `block.chainid` if you use `vm.selectFork` or `vm.createSelectFork`, as `block.chainid` could be assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployment(string)\":{\"notice\":\"Returns the most recent deployment for the current `chainId`.\"},\"getDeployment(string,uint64)\":{\"notice\":\"Returns the most recent deployment for the given contract on `chainId`\"},\"getDeployments(string,uint64)\":{\"notice\":\"Returns all deployments for the given contract on `chainId` Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber. The most recent deployment is the first element, and the oldest is the last.\"},\"getFoundryVersion()\":{\"notice\":\"Returns the Foundry version. Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile> Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use UNIX format (e.g., >= 1700000000) to compare timestamps while ignoring minor time differences.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get the nonce of a `Wallet`.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRawBlockHeader(uint256)\":{\"notice\":\"Gets the RLP encoded block header for a given block number. Returns the block header in the same format as `cast block <block_number> --raw`.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"getStateDiff()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session.\"},\"getStateDiffJson()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session, in json format.\"},\"getStorageAccesses()\":{\"notice\":\"Returns an array of `StorageAccess` from current `vm.stateStateDiffRecording` session\"},\"getWallets()\":{\"notice\":\"Returns addresses of available unlocked wallets in the script environment.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call from the callee perspective.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlType(string,string)\":{\"notice\":\"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlType(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlTypeArray(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"pauseTracing()\":{\"notice\":\"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"publicKeyP256(uint256)\":{\"notice\":\"Derives secp256r1 public key from the provided `privateKey`.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomBool()\":{\"notice\":\"Returns a random `bool`.\"},\"randomBytes(uint256)\":{\"notice\":\"Returns a random byte array value of the given length.\"},\"randomBytes4()\":{\"notice\":\"Returns a random fixed-size byte array of length 4.\"},\"randomBytes8()\":{\"notice\":\"Returns a random fixed-size byte array of length 8.\"},\"randomInt()\":{\"notice\":\"Returns a random `int256` value.\"},\"randomInt(uint256)\":{\"notice\":\"Returns a random `int256` value of given bits.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256)\":{\"notice\":\"Returns a random `uint256` value of given bits.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uint256 value between the provided range (=min..=max).\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes. Use `accesses` to get the recorded data. Subsequent calls to `record` will clear the previous data.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"rememberKeys(string,string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"rememberKeys(string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetGasMetering()\":{\"notice\":\"Reset gas metering (i.e. gas usage is set to gas limit).\"},\"resolveEnv(string)\":{\"notice\":\"Resolves the env variable placeholders of a given input string.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"resumeTracing()\":{\"notice\":\"Unpauses collection of call traces.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setArbitraryStorage(address)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address.\"},\"setArbitraryStorage(address,bool)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address and overwrite any storage slots that have been previously set.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setSeed(uint256)\":{\"notice\":\"Set RNG seed.\"},\"shuffle(uint256[])\":{\"notice\":\"Randomly shuffles an array.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signAndAttachDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction\"},\"signAndAttachDelegation(address,uint256,bool)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction, with optional cross-chain validity.\"},\"signAndAttachDelegation(address,uint256,uint64)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction for specific nonce\"},\"signCompact((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signCompact(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address.\"},\"signCompact(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"signCompact(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation\"},\"signDelegation(address,uint256,bool)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation, with optional cross-chain validity.\"},\"signDelegation(address,uint256,uint64)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation for specific nonce\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"sort(uint256[])\":{\"notice\":\"Sorts an array in ascending order.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startDebugTraceRecording()\":{\"notice\":\"Records the debug trace during the run.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnDebugTraceRecording()\":{\"notice\":\"Stop debug trace recording and returns the recorded debug trace.\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopRecord()\":{\"notice\":\"Stops recording storage reads and writes.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing. This cheatcode will create new keys if they didn't previously exist.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing. This cheatcode will create new keys if they didn't previously exist.\"}},\"notice\":\"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may result in Script simulations differing from on-chain execution. It is recommended to only use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"VmSafe\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "accesses(address)": "65bc9481",
                "addr(uint256)": "ffa18649",
                "assertApproxEqAbs(int256,int256,uint256)": "240f839d",
                "assertApproxEqAbs(int256,int256,uint256,string)": "8289e621",
                "assertApproxEqAbs(uint256,uint256,uint256)": "16d207c6",
                "assertApproxEqAbs(uint256,uint256,uint256,string)": "f710b062",
                "assertApproxEqAbsDecimal(int256,int256,uint256,uint256)": "3d5bc8bc",
                "assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)": "6a5066d4",
                "assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)": "045c55ce",
                "assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)": "60429eb2",
                "assertApproxEqRel(int256,int256,uint256)": "fea2d14f",
                "assertApproxEqRel(int256,int256,uint256,string)": "ef277d72",
                "assertApproxEqRel(uint256,uint256,uint256)": "8cf25ef4",
                "assertApproxEqRel(uint256,uint256,uint256,string)": "1ecb7d33",
                "assertApproxEqRelDecimal(int256,int256,uint256,uint256)": "abbf21cc",
                "assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)": "fccc11c4",
                "assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)": "21ed2977",
                "assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)": "82d6c8fd",
                "assertEq(address,address)": "515361f6",
                "assertEq(address,address,string)": "2f2769d1",
                "assertEq(address[],address[])": "3868ac34",
                "assertEq(address[],address[],string)": "3e9173c5",
                "assertEq(bool,bool)": "f7fe3477",
                "assertEq(bool,bool,string)": "4db19e7e",
                "assertEq(bool[],bool[])": "707df785",
                "assertEq(bool[],bool[],string)": "e48a8f8d",
                "assertEq(bytes,bytes)": "97624631",
                "assertEq(bytes,bytes,string)": "e24fed00",
                "assertEq(bytes32,bytes32)": "7c84c69b",
                "assertEq(bytes32,bytes32,string)": "c1fa1ed0",
                "assertEq(bytes32[],bytes32[])": "0cc9ee84",
                "assertEq(bytes32[],bytes32[],string)": "e03e9177",
                "assertEq(bytes[],bytes[])": "e5fb9b4a",
                "assertEq(bytes[],bytes[],string)": "f413f0b6",
                "assertEq(int256,int256)": "fe74f05b",
                "assertEq(int256,int256,string)": "714a2f13",
                "assertEq(int256[],int256[])": "711043ac",
                "assertEq(int256[],int256[],string)": "191f1b30",
                "assertEq(string,string)": "f320d963",
                "assertEq(string,string,string)": "36f656d8",
                "assertEq(string[],string[])": "cf1c049c",
                "assertEq(string[],string[],string)": "eff6b27d",
                "assertEq(uint256,uint256)": "98296c54",
                "assertEq(uint256,uint256,string)": "88b44c85",
                "assertEq(uint256[],uint256[])": "975d5a12",
                "assertEq(uint256[],uint256[],string)": "5d18c73a",
                "assertEqDecimal(int256,int256,uint256)": "48016c04",
                "assertEqDecimal(int256,int256,uint256,string)": "7e77b0c5",
                "assertEqDecimal(uint256,uint256,uint256)": "27af7d9c",
                "assertEqDecimal(uint256,uint256,uint256,string)": "d0cbbdef",
                "assertFalse(bool)": "a5982885",
                "assertFalse(bool,string)": "7ba04809",
                "assertGe(int256,int256)": "0a30b771",
                "assertGe(int256,int256,string)": "a84328dd",
                "assertGe(uint256,uint256)": "a8d4d1d9",
                "assertGe(uint256,uint256,string)": "e25242c0",
                "assertGeDecimal(int256,int256,uint256)": "dc28c0f1",
                "assertGeDecimal(int256,int256,uint256,string)": "5df93c9b",
                "assertGeDecimal(uint256,uint256,uint256)": "3d1fe08a",
                "assertGeDecimal(uint256,uint256,uint256,string)": "8bff9133",
                "assertGt(int256,int256)": "5a362d45",
                "assertGt(int256,int256,string)": "f8d33b9b",
                "assertGt(uint256,uint256)": "db07fcd2",
                "assertGt(uint256,uint256,string)": "d9a3c4d2",
                "assertGtDecimal(int256,int256,uint256)": "78611f0e",
                "assertGtDecimal(int256,int256,uint256,string)": "04a5c7ab",
                "assertGtDecimal(uint256,uint256,uint256)": "eccd2437",
                "assertGtDecimal(uint256,uint256,uint256,string)": "64949a8d",
                "assertLe(int256,int256)": "95fd154e",
                "assertLe(int256,int256,string)": "4dfe692c",
                "assertLe(uint256,uint256)": "8466f415",
                "assertLe(uint256,uint256,string)": "d17d4b0d",
                "assertLeDecimal(int256,int256,uint256)": "11d1364a",
                "assertLeDecimal(int256,int256,uint256,string)": "aa5cf788",
                "assertLeDecimal(uint256,uint256,uint256)": "c304aab7",
                "assertLeDecimal(uint256,uint256,uint256,string)": "7fefbbe0",
                "assertLt(int256,int256)": "3e914080",
                "assertLt(int256,int256,string)": "9ff531e3",
                "assertLt(uint256,uint256)": "b12fc005",
                "assertLt(uint256,uint256,string)": "65d5c135",
                "assertLtDecimal(int256,int256,uint256)": "dbe8d88b",
                "assertLtDecimal(int256,int256,uint256,string)": "40f0b4e0",
                "assertLtDecimal(uint256,uint256,uint256)": "2077337e",
                "assertLtDecimal(uint256,uint256,uint256,string)": "a972d037",
                "assertNotEq(address,address)": "b12e1694",
                "assertNotEq(address,address,string)": "8775a591",
                "assertNotEq(address[],address[])": "46d0b252",
                "assertNotEq(address[],address[],string)": "72c7e0b5",
                "assertNotEq(bool,bool)": "236e4d66",
                "assertNotEq(bool,bool,string)": "1091a261",
                "assertNotEq(bool[],bool[])": "286fafea",
                "assertNotEq(bool[],bool[],string)": "62c6f9fb",
                "assertNotEq(bytes,bytes)": "3cf78e28",
                "assertNotEq(bytes,bytes,string)": "9507540e",
                "assertNotEq(bytes32,bytes32)": "898e83fc",
                "assertNotEq(bytes32,bytes32,string)": "b2332f51",
                "assertNotEq(bytes32[],bytes32[])": "0603ea68",
                "assertNotEq(bytes32[],bytes32[],string)": "b873634c",
                "assertNotEq(bytes[],bytes[])": "edecd035",
                "assertNotEq(bytes[],bytes[],string)": "1dcd1f68",
                "assertNotEq(int256,int256)": "f4c004e3",
                "assertNotEq(int256,int256,string)": "4724c5b9",
                "assertNotEq(int256[],int256[])": "0b72f4ef",
                "assertNotEq(int256[],int256[],string)": "d3977322",
                "assertNotEq(string,string)": "6a8237b3",
                "assertNotEq(string,string,string)": "78bdcea7",
                "assertNotEq(string[],string[])": "bdfacbe8",
                "assertNotEq(string[],string[],string)": "b67187f3",
                "assertNotEq(uint256,uint256)": "b7909320",
                "assertNotEq(uint256,uint256,string)": "98f9bdbd",
                "assertNotEq(uint256[],uint256[])": "56f29cba",
                "assertNotEq(uint256[],uint256[],string)": "9a7fbd8f",
                "assertNotEqDecimal(int256,int256,uint256)": "14e75680",
                "assertNotEqDecimal(int256,int256,uint256,string)": "33949f0b",
                "assertNotEqDecimal(uint256,uint256,uint256)": "669efca7",
                "assertNotEqDecimal(uint256,uint256,uint256,string)": "f5a55558",
                "assertTrue(bool)": "0c9fd581",
                "assertTrue(bool,string)": "a34edc03",
                "assume(bool)": "4c63e562",
                "assumeNoRevert((address,bool,bytes))": "d8591eeb",
                "assumeNoRevert((address,bool,bytes)[])": "8a4592cc",
                "assumeNoRevert()": "285b366a",
                "attachBlob(bytes)": "10cb385c",
                "attachDelegation((uint8,bytes32,bytes32,uint64,address))": "14ae3519",
                "attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)": "f4460d34",
                "bound(int256,int256,int256)": "8f48fc07",
                "bound(uint256,uint256,uint256)": "5a6c1eed",
                "breakpoint(string)": "f0259e92",
                "breakpoint(string,bool)": "f7d39a8d",
                "broadcast()": "afc98040",
                "broadcast(address)": "e6962cdb",
                "broadcast(uint256)": "f67a965b",
                "broadcastRawTransaction(bytes)": "8c0c72e0",
                "closeFile(string)": "48c3241f",
                "computeCreate2Address(bytes32,bytes32)": "890c283b",
                "computeCreate2Address(bytes32,bytes32,address)": "d323826a",
                "computeCreateAddress(address,uint256)": "74637a7a",
                "contains(string,string)": "3fb18aec",
                "copyFile(string,string)": "a54a87d8",
                "copyStorage(address,address)": "203dac0d",
                "createDir(string,bool)": "168b64d3",
                "createWallet(string)": "7404f1d2",
                "createWallet(uint256)": "7a675bb6",
                "createWallet(uint256,string)": "ed7c5462",
                "deployCode(string)": "9a8325a0",
                "deployCode(string,bytes)": "29ce9dde",
                "deployCode(string,bytes,bytes32)": "016155bf",
                "deployCode(string,bytes,uint256)": "ff5d64e4",
                "deployCode(string,bytes,uint256,bytes32)": "3aa773ea",
                "deployCode(string,bytes32)": "17ab1d79",
                "deployCode(string,uint256)": "0af6a701",
                "deployCode(string,uint256,bytes32)": "002cb687",
                "deriveKey(string,string,uint32)": "6bcb2c1b",
                "deriveKey(string,string,uint32,string)": "29233b1f",
                "deriveKey(string,uint32)": "6229498b",
                "deriveKey(string,uint32,string)": "32c8176d",
                "eip712HashStruct(string,bytes)": "aedeaebc",
                "eip712HashStruct(string,string,bytes)": "6d06c57c",
                "eip712HashType(string)": "6792e9e2",
                "eip712HashType(string,string)": "18fb6406",
                "eip712HashTypedData(string)": "ea25e615",
                "ensNamehash(string)": "8c374c65",
                "envAddress(string)": "350d56bf",
                "envAddress(string,string)": "ad31b9fa",
                "envBool(string)": "7ed1ec7d",
                "envBool(string,string)": "aaaddeaf",
                "envBytes(string)": "4d7baf06",
                "envBytes(string,string)": "ddc2651b",
                "envBytes32(string)": "97949042",
                "envBytes32(string,string)": "5af231c1",
                "envExists(string)": "ce8365f9",
                "envInt(string)": "892a0c61",
                "envInt(string,string)": "42181150",
                "envOr(string,address)": "561fe540",
                "envOr(string,bool)": "4777f3cf",
                "envOr(string,bytes)": "b3e47705",
                "envOr(string,bytes32)": "b4a85892",
                "envOr(string,int256)": "bbcb713e",
                "envOr(string,string)": "d145736c",
                "envOr(string,string,address[])": "c74e9deb",
                "envOr(string,string,bool[])": "eb85e83b",
                "envOr(string,string,bytes32[])": "2281f367",
                "envOr(string,string,bytes[])": "64bc3e64",
                "envOr(string,string,int256[])": "4700d74b",
                "envOr(string,string,string[])": "859216bc",
                "envOr(string,string,uint256[])": "74318528",
                "envOr(string,uint256)": "5e97348f",
                "envString(string)": "f877cb19",
                "envString(string,string)": "14b02bc9",
                "envUint(string)": "c1978d1f",
                "envUint(string,string)": "f3dec099",
                "eth_getLogs(uint256,uint256,address,bytes32[])": "35e1349b",
                "exists(string)": "261a323e",
                "ffi(string[])": "89160467",
                "foundryVersionAtLeast(string)": "6248be1f",
                "foundryVersionCmp(string)": "ca7b0a09",
                "fsMetadata(string)": "af368a08",
                "getArtifactPathByCode(bytes)": "eb74848c",
                "getArtifactPathByDeployedCode(bytes)": "6d853ba5",
                "getBlobBaseFee()": "1f6d6ef7",
                "getBlockNumber()": "42cbb15c",
                "getBlockTimestamp()": "796b89b9",
                "getBroadcast(string,uint64,uint8)": "3dc90cb3",
                "getBroadcasts(string,uint64)": "f2fa4a26",
                "getBroadcasts(string,uint64,uint8)": "f7afe919",
                "getChain(string)": "4cc1c2bb",
                "getChain(uint256)": "b6791ad4",
                "getChainId()": "3408e470",
                "getCode(string)": "8d1cc925",
                "getDeployedCode(string)": "3ebf73b4",
                "getDeployment(string)": "a8091d97",
                "getDeployment(string,uint64)": "0debd5d6",
                "getDeployments(string,uint64)": "74e133dd",
                "getFoundryVersion()": "ea991bb5",
                "getLabel(address)": "28a249b0",
                "getMappingKeyAndParentOf(address,bytes32)": "876e24e6",
                "getMappingLength(address,bytes32)": "2f2fd63f",
                "getMappingSlotAt(address,bytes32,uint256)": "ebc73ab4",
                "getNonce((address,uint256,uint256,uint256))": "a5748aad",
                "getNonce(address)": "2d0335ab",
                "getRawBlockHeader(uint256)": "2c667606",
                "getRecordedLogs()": "191553a4",
                "getStateDiff()": "80df01cc",
                "getStateDiffJson()": "f54fe009",
                "getStorageAccesses()": "2899b1d0",
                "getWallets()": "db7a4605",
                "indexOf(string,string)": "8a0807b7",
                "isContext(uint8)": "64af255d",
                "isDir(string)": "7d15d019",
                "isFile(string)": "e0eb04d4",
                "keyExists(string,string)": "528a683c",
                "keyExistsJson(string,string)": "db4235f6",
                "keyExistsToml(string,string)": "600903ad",
                "label(address,string)": "c657c718",
                "lastCallGas()": "2b589b28",
                "load(address,bytes32)": "667f9d70",
                "parseAddress(string)": "c6ce059d",
                "parseBool(string)": "974ef924",
                "parseBytes(string)": "8f5d232d",
                "parseBytes32(string)": "087e6e81",
                "parseInt(string)": "42346c5e",
                "parseJson(string)": "6a82600a",
                "parseJson(string,string)": "85940ef1",
                "parseJsonAddress(string,string)": "1e19e657",
                "parseJsonAddressArray(string,string)": "2fce7883",
                "parseJsonBool(string,string)": "9f86dc91",
                "parseJsonBoolArray(string,string)": "91f3b94f",
                "parseJsonBytes(string,string)": "fd921be8",
                "parseJsonBytes32(string,string)": "1777e59d",
                "parseJsonBytes32Array(string,string)": "91c75bc3",
                "parseJsonBytesArray(string,string)": "6631aa99",
                "parseJsonInt(string,string)": "7b048ccd",
                "parseJsonIntArray(string,string)": "9983c28a",
                "parseJsonKeys(string,string)": "213e4198",
                "parseJsonString(string,string)": "49c4fac8",
                "parseJsonStringArray(string,string)": "498fdcf4",
                "parseJsonType(string,string)": "a9da313b",
                "parseJsonType(string,string,string)": "e3f5ae33",
                "parseJsonTypeArray(string,string,string)": "0175d535",
                "parseJsonUint(string,string)": "addde2b6",
                "parseJsonUintArray(string,string)": "522074ab",
                "parseToml(string)": "592151f0",
                "parseToml(string,string)": "37736e08",
                "parseTomlAddress(string,string)": "65e7c844",
                "parseTomlAddressArray(string,string)": "65c428e7",
                "parseTomlBool(string,string)": "d30dced6",
                "parseTomlBoolArray(string,string)": "127cfe9a",
                "parseTomlBytes(string,string)": "d77bfdb9",
                "parseTomlBytes32(string,string)": "8e214810",
                "parseTomlBytes32Array(string,string)": "3e716f81",
                "parseTomlBytesArray(string,string)": "b197c247",
                "parseTomlInt(string,string)": "c1350739",
                "parseTomlIntArray(string,string)": "d3522ae6",
                "parseTomlKeys(string,string)": "812a44b2",
                "parseTomlString(string,string)": "8bb8dd43",
                "parseTomlStringArray(string,string)": "9f629281",
                "parseTomlType(string,string)": "47fa5e11",
                "parseTomlType(string,string,string)": "f9fa5cdb",
                "parseTomlTypeArray(string,string,string)": "49be3743",
                "parseTomlUint(string,string)": "cc7b0487",
                "parseTomlUintArray(string,string)": "b5df27c8",
                "parseUint(string)": "fa91454d",
                "pauseGasMetering()": "d1a5b36f",
                "pauseTracing()": "c94d1f90",
                "projectRoot()": "d930a0e6",
                "prompt(string)": "47eaf474",
                "promptAddress(string)": "62ee05f4",
                "promptSecret(string)": "1e279d41",
                "promptSecretUint(string)": "69ca02b7",
                "promptUint(string)": "652fd489",
                "publicKeyP256(uint256)": "c453949e",
                "randomAddress()": "d5bee9f5",
                "randomBool()": "cdc126bd",
                "randomBytes(uint256)": "6c5d32a9",
                "randomBytes4()": "9b7cd579",
                "randomBytes8()": "0497b0a5",
                "randomInt()": "111f1202",
                "randomInt(uint256)": "12845966",
                "randomUint()": "25124730",
                "randomUint(uint256)": "cf81e69c",
                "randomUint(uint256,uint256)": "d61b051b",
                "readDir(string)": "c4bc59e0",
                "readDir(string,uint64)": "1497876c",
                "readDir(string,uint64,bool)": "8102d70d",
                "readFile(string)": "60f9bb11",
                "readFileBinary(string)": "16ed7bc4",
                "readLine(string)": "70f55728",
                "readLink(string)": "9f5684a2",
                "record()": "266cf109",
                "recordLogs()": "41af2f52",
                "rememberKey(uint256)": "22100064",
                "rememberKeys(string,string,string,uint32)": "f8d58eaf",
                "rememberKeys(string,string,uint32)": "97cb9189",
                "removeDir(string,bool)": "45c62011",
                "removeFile(string)": "f1afe04d",
                "replace(string,string,string)": "e00ad03e",
                "resetGasMetering()": "be367dd3",
                "resolveEnv(string)": "ddd2128d",
                "resumeGasMetering()": "2bcd50e0",
                "resumeTracing()": "72a09ccb",
                "rpc(string,string)": "1206c8a8",
                "rpc(string,string,string)": "0199a220",
                "rpcUrl(string)": "975a6ce9",
                "rpcUrlStructs()": "9d2ad72a",
                "rpcUrls()": "a85a8418",
                "serializeAddress(string,string,address)": "972c6062",
                "serializeAddress(string,string,address[])": "1e356e1a",
                "serializeBool(string,string,bool)": "ac22e971",
                "serializeBool(string,string,bool[])": "92925aa1",
                "serializeBytes(string,string,bytes)": "f21d52c7",
                "serializeBytes(string,string,bytes[])": "9884b232",
                "serializeBytes32(string,string,bytes32)": "2d812b44",
                "serializeBytes32(string,string,bytes32[])": "201e43e2",
                "serializeInt(string,string,int256)": "3f33db60",
                "serializeInt(string,string,int256[])": "7676e127",
                "serializeJson(string,string)": "9b3358b0",
                "serializeJsonType(string,bytes)": "6d4f96a6",
                "serializeJsonType(string,string,string,bytes)": "6f93bccb",
                "serializeString(string,string,string)": "88da6d35",
                "serializeString(string,string,string[])": "561cd6f3",
                "serializeUint(string,string,uint256)": "129e9002",
                "serializeUint(string,string,uint256[])": "fee9a469",
                "serializeUintToHex(string,string,uint256)": "ae5a2ae8",
                "setArbitraryStorage(address)": "e1631837",
                "setArbitraryStorage(address,bool)": "d3ec2a0b",
                "setEnv(string,string)": "3d5923ee",
                "setSeed(uint256)": "c32a50f9",
                "shuffle(uint256[])": "54f1469c",
                "sign((address,uint256,uint256,uint256),bytes32)": "b25c5a25",
                "sign(address,bytes32)": "8c1aa205",
                "sign(bytes32)": "799cd333",
                "sign(uint256,bytes32)": "e341eaa4",
                "signAndAttachDelegation(address,uint256)": "c7fa7288",
                "signAndAttachDelegation(address,uint256,bool)": "d936e146",
                "signAndAttachDelegation(address,uint256,uint64)": "cde3e5be",
                "signCompact((address,uint256,uint256,uint256),bytes32)": "3d0e292f",
                "signCompact(address,bytes32)": "8e2f97bf",
                "signCompact(bytes32)": "a282dc4b",
                "signCompact(uint256,bytes32)": "cc2a781f",
                "signDelegation(address,uint256)": "5b593c7b",
                "signDelegation(address,uint256,bool)": "cdd7563d",
                "signDelegation(address,uint256,uint64)": "ceba2ec3",
                "signP256(uint256,bytes32)": "83211b40",
                "sleep(uint256)": "fa9d8713",
                "sort(uint256[])": "9ec8b026",
                "split(string,string)": "8bb75533",
                "startBroadcast()": "7fb5297f",
                "startBroadcast(address)": "7fec2a8d",
                "startBroadcast(uint256)": "ce817d47",
                "startDebugTraceRecording()": "419c8832",
                "startMappingRecording()": "3e9705c0",
                "startStateDiffRecording()": "cf22e3c9",
                "stopAndReturnDebugTraceRecording()": "ced398a2",
                "stopAndReturnStateDiff()": "aa5cf90e",
                "stopBroadcast()": "76eadd36",
                "stopMappingRecording()": "0d4aae9b",
                "stopRecord()": "996be76d",
                "toBase64(bytes)": "a5cbfe65",
                "toBase64(string)": "3f8be2c8",
                "toBase64URL(bytes)": "c8bd0e4a",
                "toBase64URL(string)": "ae3165b3",
                "toLowercase(string)": "50bb0884",
                "toString(address)": "56ca623e",
                "toString(bool)": "71dce7da",
                "toString(bytes)": "71aad10d",
                "toString(bytes32)": "b11a19e8",
                "toString(int256)": "a322c40e",
                "toString(uint256)": "6900a3ae",
                "toUppercase(string)": "074ae3d7",
                "trim(string)": "b2dad155",
                "tryFfi(string[])": "f45c1ce7",
                "unixTime()": "625387dc",
                "writeFile(string,string)": "897e0a97",
                "writeFileBinary(string,bytes)": "1f21fc80",
                "writeJson(string,string)": "e23cd19f",
                "writeJson(string,string,string)": "35d6ad46",
                "writeLine(string,string)": "619d897f",
                "writeToml(string,string)": "c0865ba7",
                "writeToml(string,string,string)": "51ac6a33"
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/console.sol": {
      "console": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/console.sol\":\"console\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212200495406a7669bc90efed1401d409fc15dc132e874542d75517f0fa27c594dacb64736f6c634300081e0033",
                "sourceMap": "66:69203:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212200495406a7669bc90efed1401d409fc15dc132e874542d75517f0fa27c594dacb64736f6c634300081e0033",
                "sourceMap": "66:69203:16:-:0;;;;;;;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/interfaces/IMulticall3.sol": {
      "IMulticall3": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "aggregate",
                "inputs": [
                  {
                    "name": "calls",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Call[]",
                    "components": [
                      {
                        "name": "target",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "callData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "returnData",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "aggregate3",
                "inputs": [
                  {
                    "name": "calls",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Call3[]",
                    "components": [
                      {
                        "name": "target",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "allowFailure",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "callData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "returnData",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Result[]",
                    "components": [
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "returnData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "aggregate3Value",
                "inputs": [
                  {
                    "name": "calls",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Call3Value[]",
                    "components": [
                      {
                        "name": "target",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "allowFailure",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "value",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "callData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "returnData",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Result[]",
                    "components": [
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "returnData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "blockAndAggregate",
                "inputs": [
                  {
                    "name": "calls",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Call[]",
                    "components": [
                      {
                        "name": "target",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "callData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "blockHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "returnData",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Result[]",
                    "components": [
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "returnData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "getBasefee",
                "inputs": [],
                "outputs": [
                  {
                    "name": "basefee",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlockHash",
                "inputs": [
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "blockHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlockNumber",
                "inputs": [],
                "outputs": [
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getChainId",
                "inputs": [],
                "outputs": [
                  {
                    "name": "chainid",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getCurrentBlockCoinbase",
                "inputs": [],
                "outputs": [
                  {
                    "name": "coinbase",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getCurrentBlockDifficulty",
                "inputs": [],
                "outputs": [
                  {
                    "name": "difficulty",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getCurrentBlockGasLimit",
                "inputs": [],
                "outputs": [
                  {
                    "name": "gaslimit",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getCurrentBlockTimestamp",
                "inputs": [],
                "outputs": [
                  {
                    "name": "timestamp",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getEthBalance",
                "inputs": [
                  {
                    "name": "addr",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "balance",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getLastBlockHash",
                "inputs": [],
                "outputs": [
                  {
                    "name": "blockHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "tryAggregate",
                "inputs": [
                  {
                    "name": "requireSuccess",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "calls",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Call[]",
                    "components": [
                      {
                        "name": "target",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "callData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "returnData",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Result[]",
                    "components": [
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "returnData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "tryBlockAndAggregate",
                "inputs": [
                  {
                    "name": "requireSuccess",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "calls",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Call[]",
                    "components": [
                      {
                        "name": "target",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "callData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "blockHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "returnData",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Result[]",
                    "components": [
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "returnData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "stateMutability": "payable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Call3[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate3\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Call3Value[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate3Value\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"blockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBasefee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"basefee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockCoinbase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"coinbase\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gaslimit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"tryAggregate\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"tryBlockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/interfaces/IMulticall3.sol\":\"IMulticall3\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "aggregate((address,bytes)[])": "252dba42",
                "aggregate3((address,bool,bytes)[])": "82ad56cb",
                "aggregate3Value((address,bool,uint256,bytes)[])": "174dea71",
                "blockAndAggregate((address,bytes)[])": "c3077fa9",
                "getBasefee()": "3e64a696",
                "getBlockHash(uint256)": "ee82ac5e",
                "getBlockNumber()": "42cbb15c",
                "getChainId()": "3408e470",
                "getCurrentBlockCoinbase()": "a8b0574e",
                "getCurrentBlockDifficulty()": "72425d9d",
                "getCurrentBlockGasLimit()": "86d516e8",
                "getCurrentBlockTimestamp()": "0f28c97d",
                "getEthBalance(address)": "4d2301cc",
                "getLastBlockHash()": "27e86d6e",
                "tryAggregate(bool,(address,bytes)[])": "bce38bd7",
                "tryBlockAndAggregate(bool,(address,bytes)[])": "399542e9"
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/lib/forge-std/src/safeconsole.sol": {
      "safeconsole": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"philogy <https://github.com/philogy>\",\"details\":\"Code generated automatically by script.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/safeconsole.sol\":\"safeconsole\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab\",\"dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220790ca200db6c5d6bdc13cca60374903530e86bb324eb5f1926ca559a7278033664736f6c634300081e0033",
                "sourceMap": "163:427371:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220790ca200db6c5d6bdc13cca60374903530e86bb324eb5f1926ca559a7278033664736f6c634300081e0033",
                "sourceMap": "163:427371:19:-:0;;;;;;;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/script/DeploySkillSBT.s.sol": {
      "DeploySkillSBT": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "IS_SCRIPT",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "run",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "contract SkillSBT"
                  }
                ],
                "stateMutability": "nonpayable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[{\"internalType\":\"contract SkillSBT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/DeploySkillSBT.s.sol\":\"DeploySkillSBT\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4b2a5a85e045dcf6a082700c7252e43854c2eed88f860aaa18ec1e85218ae2bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98d060ed5be569a92d908fc358149039dc8f833d61973aa1b9d1d8235676bf6d\",\"dweb:/ipfs/QmaWQpn5dJmbMS5skwmPPMeUWZG35BLkignPpcA3zyagEs\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0xc942e27c7baae499beb01afbbae99f24d42af9a6e4aae675bc6901b704aa8e9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0456008adf68947247f358b62863af4a8e349549d2260f2ff9569ff0e3cf5c98\",\"dweb:/ipfs/QmdviSUj2i7o3TPN5vd2xocqGMFVqjUzaiJTZRYyPxyHPx\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xae394f477769a38276d98d4854bc865fc8d281edbd4e72167507adb8236812aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34a0e609a4ec617b5c349f5e89a3352810cc5e4d3adaf939b32a27e4a5e46de2\",\"dweb:/ipfs/QmPfjimWAGGb6rzDjNMtLeZ93JJbCJJMov5gaNKyTy1doe\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0fa6ec03602648b62cce41aab2096e6b7e052f2846075d967b6958dd586db746\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd84e2ca9c1eaed6b76768cc12bb8c1af8289170ea8b7706f58d516460d79c41\",\"dweb:/ipfs/QmQ7BK7co6DE4eWUqMyv11s5eHYkS1tyx8tDSZGZVtf2aK\"]},\"lib/forge-std/src/StdConstants.sol\":{\"keccak256\":\"0x319ccdabfa2c0b2428301445873270ffea20f0e039d4fd5e6eeba65158e4e534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b633f9d3a719e1d035ce7daa6cc051ddf89a72d34200d14cec37728e245cdabc\",\"dweb:/ipfs/QmRP7HQJpHMx1CsFrY8tXVVx1DQmi2dcb2BoGfiWaA923r\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974\",\"dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x04102de0a79398e4bdea57b7a4818655b4cc66d6f81d1cff08bf428cd0b384cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53edc6c8f7f67cafc0129f039637c77d979880f7f1947defea31e8f0c05095bc\",\"dweb:/ipfs/QmUKXJd1vFCkxxrkXNLURdXrx2apoyWQFrFb5UqNkjdHVi\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xb2469a902a326074034c4f7081d868113db0edbb7cf48b86528af2d6b07295f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1430a81c4978be875e2a3b31a8bfa4e1438fecd327f23771b690d64db63c020a\",\"dweb:/ipfs/QmW6aB2u1LNaRgGQFwjV7L7UbxsRg63iJ7AuujPouEa4cT\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab\",\"dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3\"]},\"script/DeploySkillSBT.s.sol\":{\"keccak256\":\"0xd1ffeaa6d9b53ccf2694e3dce0148e98bfba1f2103c3f0682e5d02b44fc84e6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://521215c9d64f466059581f32dfacdb0cceffee388f830d86c977248fea37f344\",\"dweb:/ipfs/QmcrEcYZBM8ePSKY4EFbYJod791N5Ex47a2entD6sQYvL7\"]},\"src/ERC721SBT/ERC721SBT.sol\":{\"keccak256\":\"0xa0ced970722cedf73a0ef0f67a9cce0bce097fc373948f12408f21394c6aeec9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6bbb527667ba5c3348a52ffd4b35232390cfd81ea6df44143fe21440a16d602\",\"dweb:/ipfs/QmdrNkwLybSadttLDosptV8JoSURxSNdDtfDsRMc8jXPZR\"]},\"src/SkillSBT.sol\":{\"keccak256\":\"0x7d4d0a02bee70fc29bd63075464e8ead4a81084d8cf1ab584248682978c962b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a24b534895a27a8838332378c2dd2ffb0d621a3283743c86ea939189557ab86\",\"dweb:/ipfs/QmQciQFFuX9ojXdRnLiXyVeH2vxfYDLPt7gH5ttU7jjFCd\"]},\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0xafc7f5a5e7e4f3e8a0d54fcd3495bac94305db4fa802d79493239876734e691b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de03704f92a517dd165ba187eb4bdc680fece2e0af5ce7127890978e4c3882bf\",\"dweb:/ipfs/QmP93oZG4JVAq7JXZBAVFcKj6eR3JdiiE93SNCkQRS9LY1\"]},\"src/interfaces/IERC721.sol\":{\"keccak256\":\"0x3d67570df2935f2eea40b42e4a9c9335bfb13d4f317a3f0ad552d1b40c345ea6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94c5e1b2ea9e0a3597ee924511d18935714cb4667a7f332eb02d2f3ae7e3da91\",\"dweb:/ipfs/QmaX8UTwwmoXt51PmQjqgxJxbo3pzrxvRS6gxPUs8P4ydw\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "60806040526001600c5f6101000a81548160ff0219169083151502179055506001600c60026101000a81548160ff0219169083151502179055503480156043575f5ffd5b50612093806100515f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063c040622614610038578063f8ccbf4714610056575b5f5ffd5b610040610074565b60405161004d9190610228565b60405180910390f35b61005e61018e565b60405161006b919061025b565b60405180910390f35b5f5f737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff16637fb5297f6040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156100cf575f5ffd5b505af11580156100e1573d5f5f3e3d5ffd5b50505050336040516100f2906101a1565b6100fc9190610294565b604051809103905ff080158015610115573d5f5f3e3d5ffd5b509050737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff166376eadd366040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610171575f5ffd5b505af1158015610183573d5f5f3e3d5ffd5b505050508091505090565b600c60029054906101000a900460ff1681565b611db0806102ae83390190565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6101f06101eb6101e6846101ae565b6101cd565b6101ae565b9050919050565b5f610201826101d6565b9050919050565b5f610212826101f7565b9050919050565b61022281610208565b82525050565b5f60208201905061023b5f830184610219565b92915050565b5f8115159050919050565b61025581610241565b82525050565b5f60208201905061026e5f83018461024c565b92915050565b5f61027e826101ae565b9050919050565b61028e81610274565b82525050565b5f6020820190506102a75f830184610285565b9291505056fe608060405234801561000f575f5ffd5b50604051611db0380380611db083398181016040528101906100319190610144565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610097906101c9565b60405180910390fd5b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101e7565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610113826100ea565b9050919050565b61012381610109565b811461012d575f5ffd5b50565b5f8151905061013e8161011a565b92915050565b5f60208284031215610159576101586100e6565b5b5f61016684828501610130565b91505092915050565b5f82825260208201905092915050565b7f7665726966696572203d207a65726f20616464726573730000000000000000005f82015250565b5f6101b360178361016f565b91506101be8261017f565b602082019050919050565b5f6020820190508181035f8301526101e0816101a7565b9050919050565b611bbc806101f45f395ff3fe608060405234801561000f575f5ffd5b50600436106100b2575f3560e01c80638aa0fdad1161006f5780638aa0fdad146101c25780638df72b5a146101f2578063a49062d414610222578063afaf611a14610240578063e43252d714610270578063f851a4401461028c576100b2565b806301ffc9a7146100b65780631675f455146100e65780636352211e146101165780636f9170f61461014657806370a08231146101765780637d2564b6146101a6575b5f5ffd5b6100d060048036038101906100cb9190610f6b565b6102aa565b6040516100dd9190610fb0565b60405180910390f35b61010060048036038101906100fb9190610ffc565b61037b565b60405161010d9190611097565b60405180910390f35b610130600480360381019061012b9190610ffc565b61041c565b60405161013d91906110f6565b60405180910390f35b610160600480360381019061015b9190611139565b6104c3565b60405161016d9190610fb0565b60405180910390f35b610190600480360381019061018b9190611139565b610515565b60405161019d9190611173565b60405180910390f35b6101c060048036038101906101bb91906112b8565b6105d8565b005b6101dc60048036038101906101d791906112ff565b6105e4565b6040516101e99190611173565b60405180910390f35b61020c600480360381019061020791906112b8565b6106b2565b6040516102199190611390565b60405180910390f35b61022a6107cc565b6040516102379190611390565b60405180910390f35b61025a600480360381019061025591906113dc565b6107d1565b6040516102679190611390565b60405180910390f35b61028a60048036038101906102859190611139565b6107fb565b005b610294610924565b6040516102a191906110f6565b60405180910390f35b5f7f13f2a32f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061037457507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b606060035f8381526020019081526020015f20805461039990611447565b80601f01602080910402602001604051908101604052809291908181526020018280546103c590611447565b80156104105780601f106103e757610100808354040283529160200191610410565b820191905f5260205f20905b8154815290600101906020018083116103f357829003601f168201915b50505050509050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b5906114c1565b60405180910390fd5b919050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b90611529565b60405180910390fd5b60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff169050919050565b6105e181610948565b50565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590611591565b60405180910390fd5b60065f815480929190610680906115dc565b91905055505f60065490506106953382610c0c565b61069e83610948565b6106a88185610eaa565b8091505092915050565b5f5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1611610741576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107389061166d565b60405180910390fd5b5f8260405160200161075391906116c5565b60405160208183030381529060405280519060200120905060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8281526020019081526020015f205f9054906101000a900460ff16915050919050565b600281565b6001602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610889576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088090611725565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd7cf613dd0392c9170696a1b7ca820f2e07f8b54e99259edc95cc407ede57d7960405160405180910390a250565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c890611591565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1611610a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a569061166d565b60405180910390fd5b5f81604051602001610a7191906116c5565b6040516020818303038152906040528051906020012090505f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f9054906101000a900460ff169050600260ff168160ff1610610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b259061178d565b60405180910390fd5b600181610b3b91906117ab565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f6101000a81548160ff021916908360ff160217905550600181610bab91906117ab565b60ff1683604051610bbc91906116c5565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167ffb52386a76af79290662c032bf53cadd370d02eb37ad699d27d581eeb7878c8860405160405180910390a4505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7190611829565b60405180910390fd5b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1614610d08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cff90611891565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9d906118f9565b60405180910390fd5b600160055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908360ff1602179055508160045f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b8060035f8481526020019081526020015f209081610ec89190611ab7565b50817fda84ca2183491f179a603e877b2cb058e42195041c2b9c53d746427e519a34df82604051610ef99190611097565b60405180910390a25050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f4a81610f16565b8114610f54575f5ffd5b50565b5f81359050610f6581610f41565b92915050565b5f60208284031215610f8057610f7f610f0e565b5b5f610f8d84828501610f57565b91505092915050565b5f8115159050919050565b610faa81610f96565b82525050565b5f602082019050610fc35f830184610fa1565b92915050565b5f819050919050565b610fdb81610fc9565b8114610fe5575f5ffd5b50565b5f81359050610ff681610fd2565b92915050565b5f6020828403121561101157611010610f0e565b5b5f61101e84828501610fe8565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61106982611027565b6110738185611031565b9350611083818560208601611041565b61108c8161104f565b840191505092915050565b5f6020820190508181035f8301526110af818461105f565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110e0826110b7565b9050919050565b6110f0816110d6565b82525050565b5f6020820190506111095f8301846110e7565b92915050565b611118816110d6565b8114611122575f5ffd5b50565b5f813590506111338161110f565b92915050565b5f6020828403121561114e5761114d610f0e565b5b5f61115b84828501611125565b91505092915050565b61116d81610fc9565b82525050565b5f6020820190506111865f830184611164565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6111ca8261104f565b810181811067ffffffffffffffff821117156111e9576111e8611194565b5b80604052505050565b5f6111fb610f05565b905061120782826111c1565b919050565b5f67ffffffffffffffff82111561122657611225611194565b5b61122f8261104f565b9050602081019050919050565b828183375f83830152505050565b5f61125c6112578461120c565b6111f2565b90508281526020810184848401111561127857611277611190565b5b61128384828561123c565b509392505050565b5f82601f83011261129f5761129e61118c565b5b81356112af84826020860161124a565b91505092915050565b5f602082840312156112cd576112cc610f0e565b5b5f82013567ffffffffffffffff8111156112ea576112e9610f12565b5b6112f68482850161128b565b91505092915050565b5f5f6040838503121561131557611314610f0e565b5b5f83013567ffffffffffffffff81111561133257611331610f12565b5b61133e8582860161128b565b925050602083013567ffffffffffffffff81111561135f5761135e610f12565b5b61136b8582860161128b565b9150509250929050565b5f60ff82169050919050565b61138a81611375565b82525050565b5f6020820190506113a35f830184611381565b92915050565b5f819050919050565b6113bb816113a9565b81146113c5575f5ffd5b50565b5f813590506113d6816113b2565b92915050565b5f5f604083850312156113f2576113f1610f0e565b5b5f6113ff85828601611125565b9250506020611410858286016113c8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061145e57607f821691505b6020821081036114715761147061141a565b5b50919050565b7f746f6b656e20646f65736e2774206578697374000000000000000000000000005f82015250565b5f6114ab601383611031565b91506114b682611477565b602082019050919050565b5f6020820190508181035f8301526114d88161149f565b9050919050565b7f6f776e6572203d207a65726f20616464726573730000000000000000000000005f82015250565b5f611513601483611031565b915061151e826114df565b602082019050919050565b5f6020820190508181035f83015261154081611507565b9050919050565b7f6e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f61157b600f83611031565b915061158682611547565b602082019050919050565b5f6020820190508181035f8301526115a88161156f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115e682610fc9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611618576116176115af565b5b600182019050919050565b7f6d696e74205342542066697273740000000000000000000000000000000000005f82015250565b5f611657600e83611031565b915061166282611623565b602082019050919050565b5f6020820190508181035f8301526116848161164b565b9050919050565b5f81905092915050565b5f61169f82611027565b6116a9818561168b565b93506116b9818560208601611041565b80840191505092915050565b5f6116d08284611695565b915081905092915050565b7f796f7520617265206e6f742061646d696e0000000000000000000000000000005f82015250565b5f61170f601183611031565b915061171a826116db565b602082019050919050565b5f6020820190508181035f83015261173c81611703565b9050919050565b7f4d6178206c6576656c20726561636865640000000000000000000000000000005f82015250565b5f611777601183611031565b915061178282611743565b602082019050919050565b5f6020820190508181035f8301526117a48161176b565b9050919050565b5f6117b582611375565b91506117c083611375565b9250828201905060ff8111156117d9576117d86115af565b5b92915050565b7f6d696e7420746f207a65726f20616464726573730000000000000000000000005f82015250565b5f611813601483611031565b915061181e826117df565b602082019050919050565b5f6020820190508181035f83015261184081611807565b9050919050565b7f7573657220616c72656164792068617320616e205342540000000000000000005f82015250565b5f61187b601783611031565b915061188682611847565b602082019050919050565b5f6020820190508181035f8301526118a88161186f565b9050919050565b7f746f6b656e20616c7265616479206d696e7465640000000000000000000000005f82015250565b5f6118e3601483611031565b91506118ee826118af565b602082019050919050565b5f6020820190508181035f830152611910816118d7565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026119737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611938565b61197d8683611938565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6119b86119b36119ae84610fc9565b611995565b610fc9565b9050919050565b5f819050919050565b6119d18361199e565b6119e56119dd826119bf565b848454611944565b825550505050565b5f5f905090565b6119fc6119ed565b611a078184846119c8565b505050565b5b81811015611a2a57611a1f5f826119f4565b600181019050611a0d565b5050565b601f821115611a6f57611a4081611917565b611a4984611929565b81016020851015611a58578190505b611a6c611a6485611929565b830182611a0c565b50505b505050565b5f82821c905092915050565b5f611a8f5f1984600802611a74565b1980831691505092915050565b5f611aa78383611a80565b9150826002028217905092915050565b611ac082611027565b67ffffffffffffffff811115611ad957611ad8611194565b5b611ae38254611447565b611aee828285611a2e565b5f60209050601f831160018114611b1f575f8415611b0d578287015190505b611b178582611a9c565b865550611b7e565b601f198416611b2d86611917565b5f5b82811015611b5457848901518255600182019150602085019450602081019050611b2f565b86831015611b715784890151611b6d601f891682611a80565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220994cdbb222be3f9ef21f391d3ea69ebf47579b33812f062aa6f8a290ab7f4bfd64736f6c634300081e0033a2646970667358221220123a064db153235e94673ab451f4d8fbe397de6b4002fa6ce1f6670245ab1abe64736f6c634300081e0033",
                "sourceMap": "149:246:20:-:0;;;3200:4:3;3160:44;;;;;;;;;;;;;;;;;;;;873:4:1;849:28;;;;;;;;;;;;;;;;;;;;149:246:20;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063c040622614610038578063f8ccbf4714610056575b5f5ffd5b610040610074565b60405161004d9190610228565b60405180910390f35b61005e61018e565b60405161006b919061025b565b60405180910390f35b5f5f737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff16637fb5297f6040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156100cf575f5ffd5b505af11580156100e1573d5f5f3e3d5ffd5b50505050336040516100f2906101a1565b6100fc9190610294565b604051809103905ff080158015610115573d5f5f3e3d5ffd5b509050737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff166376eadd366040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610171575f5ffd5b505af1158015610183573d5f5f3e3d5ffd5b505050508091505090565b600c60029054906101000a900460ff1681565b611db0806102ae83390190565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6101f06101eb6101e6846101ae565b6101cd565b6101ae565b9050919050565b5f610201826101d6565b9050919050565b5f610212826101f7565b9050919050565b61022281610208565b82525050565b5f60208201905061023b5f830184610219565b92915050565b5f8115159050919050565b61025581610241565b82525050565b5f60208201905061026e5f83018461024c565b92915050565b5f61027e826101ae565b9050919050565b61028e81610274565b82525050565b5f6020820190506102a75f830184610285565b9291505056fe608060405234801561000f575f5ffd5b50604051611db0380380611db083398181016040528101906100319190610144565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610097906101c9565b60405180910390fd5b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101e7565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610113826100ea565b9050919050565b61012381610109565b811461012d575f5ffd5b50565b5f8151905061013e8161011a565b92915050565b5f60208284031215610159576101586100e6565b5b5f61016684828501610130565b91505092915050565b5f82825260208201905092915050565b7f7665726966696572203d207a65726f20616464726573730000000000000000005f82015250565b5f6101b360178361016f565b91506101be8261017f565b602082019050919050565b5f6020820190508181035f8301526101e0816101a7565b9050919050565b611bbc806101f45f395ff3fe608060405234801561000f575f5ffd5b50600436106100b2575f3560e01c80638aa0fdad1161006f5780638aa0fdad146101c25780638df72b5a146101f2578063a49062d414610222578063afaf611a14610240578063e43252d714610270578063f851a4401461028c576100b2565b806301ffc9a7146100b65780631675f455146100e65780636352211e146101165780636f9170f61461014657806370a08231146101765780637d2564b6146101a6575b5f5ffd5b6100d060048036038101906100cb9190610f6b565b6102aa565b6040516100dd9190610fb0565b60405180910390f35b61010060048036038101906100fb9190610ffc565b61037b565b60405161010d9190611097565b60405180910390f35b610130600480360381019061012b9190610ffc565b61041c565b60405161013d91906110f6565b60405180910390f35b610160600480360381019061015b9190611139565b6104c3565b60405161016d9190610fb0565b60405180910390f35b610190600480360381019061018b9190611139565b610515565b60405161019d9190611173565b60405180910390f35b6101c060048036038101906101bb91906112b8565b6105d8565b005b6101dc60048036038101906101d791906112ff565b6105e4565b6040516101e99190611173565b60405180910390f35b61020c600480360381019061020791906112b8565b6106b2565b6040516102199190611390565b60405180910390f35b61022a6107cc565b6040516102379190611390565b60405180910390f35b61025a600480360381019061025591906113dc565b6107d1565b6040516102679190611390565b60405180910390f35b61028a60048036038101906102859190611139565b6107fb565b005b610294610924565b6040516102a191906110f6565b60405180910390f35b5f7f13f2a32f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061037457507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b606060035f8381526020019081526020015f20805461039990611447565b80601f01602080910402602001604051908101604052809291908181526020018280546103c590611447565b80156104105780601f106103e757610100808354040283529160200191610410565b820191905f5260205f20905b8154815290600101906020018083116103f357829003601f168201915b50505050509050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b5906114c1565b60405180910390fd5b919050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b90611529565b60405180910390fd5b60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff169050919050565b6105e181610948565b50565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590611591565b60405180910390fd5b60065f815480929190610680906115dc565b91905055505f60065490506106953382610c0c565b61069e83610948565b6106a88185610eaa565b8091505092915050565b5f5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1611610741576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107389061166d565b60405180910390fd5b5f8260405160200161075391906116c5565b60405160208183030381529060405280519060200120905060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8281526020019081526020015f205f9054906101000a900460ff16915050919050565b600281565b6001602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610889576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088090611725565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd7cf613dd0392c9170696a1b7ca820f2e07f8b54e99259edc95cc407ede57d7960405160405180910390a250565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c890611591565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1611610a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a569061166d565b60405180910390fd5b5f81604051602001610a7191906116c5565b6040516020818303038152906040528051906020012090505f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f9054906101000a900460ff169050600260ff168160ff1610610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b259061178d565b60405180910390fd5b600181610b3b91906117ab565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f6101000a81548160ff021916908360ff160217905550600181610bab91906117ab565b60ff1683604051610bbc91906116c5565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167ffb52386a76af79290662c032bf53cadd370d02eb37ad699d27d581eeb7878c8860405160405180910390a4505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7190611829565b60405180910390fd5b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1614610d08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cff90611891565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9d906118f9565b60405180910390fd5b600160055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908360ff1602179055508160045f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b8060035f8481526020019081526020015f209081610ec89190611ab7565b50817fda84ca2183491f179a603e877b2cb058e42195041c2b9c53d746427e519a34df82604051610ef99190611097565b60405180910390a25050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f4a81610f16565b8114610f54575f5ffd5b50565b5f81359050610f6581610f41565b92915050565b5f60208284031215610f8057610f7f610f0e565b5b5f610f8d84828501610f57565b91505092915050565b5f8115159050919050565b610faa81610f96565b82525050565b5f602082019050610fc35f830184610fa1565b92915050565b5f819050919050565b610fdb81610fc9565b8114610fe5575f5ffd5b50565b5f81359050610ff681610fd2565b92915050565b5f6020828403121561101157611010610f0e565b5b5f61101e84828501610fe8565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61106982611027565b6110738185611031565b9350611083818560208601611041565b61108c8161104f565b840191505092915050565b5f6020820190508181035f8301526110af818461105f565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110e0826110b7565b9050919050565b6110f0816110d6565b82525050565b5f6020820190506111095f8301846110e7565b92915050565b611118816110d6565b8114611122575f5ffd5b50565b5f813590506111338161110f565b92915050565b5f6020828403121561114e5761114d610f0e565b5b5f61115b84828501611125565b91505092915050565b61116d81610fc9565b82525050565b5f6020820190506111865f830184611164565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6111ca8261104f565b810181811067ffffffffffffffff821117156111e9576111e8611194565b5b80604052505050565b5f6111fb610f05565b905061120782826111c1565b919050565b5f67ffffffffffffffff82111561122657611225611194565b5b61122f8261104f565b9050602081019050919050565b828183375f83830152505050565b5f61125c6112578461120c565b6111f2565b90508281526020810184848401111561127857611277611190565b5b61128384828561123c565b509392505050565b5f82601f83011261129f5761129e61118c565b5b81356112af84826020860161124a565b91505092915050565b5f602082840312156112cd576112cc610f0e565b5b5f82013567ffffffffffffffff8111156112ea576112e9610f12565b5b6112f68482850161128b565b91505092915050565b5f5f6040838503121561131557611314610f0e565b5b5f83013567ffffffffffffffff81111561133257611331610f12565b5b61133e8582860161128b565b925050602083013567ffffffffffffffff81111561135f5761135e610f12565b5b61136b8582860161128b565b9150509250929050565b5f60ff82169050919050565b61138a81611375565b82525050565b5f6020820190506113a35f830184611381565b92915050565b5f819050919050565b6113bb816113a9565b81146113c5575f5ffd5b50565b5f813590506113d6816113b2565b92915050565b5f5f604083850312156113f2576113f1610f0e565b5b5f6113ff85828601611125565b9250506020611410858286016113c8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061145e57607f821691505b6020821081036114715761147061141a565b5b50919050565b7f746f6b656e20646f65736e2774206578697374000000000000000000000000005f82015250565b5f6114ab601383611031565b91506114b682611477565b602082019050919050565b5f6020820190508181035f8301526114d88161149f565b9050919050565b7f6f776e6572203d207a65726f20616464726573730000000000000000000000005f82015250565b5f611513601483611031565b915061151e826114df565b602082019050919050565b5f6020820190508181035f83015261154081611507565b9050919050565b7f6e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f61157b600f83611031565b915061158682611547565b602082019050919050565b5f6020820190508181035f8301526115a88161156f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115e682610fc9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611618576116176115af565b5b600182019050919050565b7f6d696e74205342542066697273740000000000000000000000000000000000005f82015250565b5f611657600e83611031565b915061166282611623565b602082019050919050565b5f6020820190508181035f8301526116848161164b565b9050919050565b5f81905092915050565b5f61169f82611027565b6116a9818561168b565b93506116b9818560208601611041565b80840191505092915050565b5f6116d08284611695565b915081905092915050565b7f796f7520617265206e6f742061646d696e0000000000000000000000000000005f82015250565b5f61170f601183611031565b915061171a826116db565b602082019050919050565b5f6020820190508181035f83015261173c81611703565b9050919050565b7f4d6178206c6576656c20726561636865640000000000000000000000000000005f82015250565b5f611777601183611031565b915061178282611743565b602082019050919050565b5f6020820190508181035f8301526117a48161176b565b9050919050565b5f6117b582611375565b91506117c083611375565b9250828201905060ff8111156117d9576117d86115af565b5b92915050565b7f6d696e7420746f207a65726f20616464726573730000000000000000000000005f82015250565b5f611813601483611031565b915061181e826117df565b602082019050919050565b5f6020820190508181035f83015261184081611807565b9050919050565b7f7573657220616c72656164792068617320616e205342540000000000000000005f82015250565b5f61187b601783611031565b915061188682611847565b602082019050919050565b5f6020820190508181035f8301526118a88161186f565b9050919050565b7f746f6b656e20616c7265616479206d696e7465640000000000000000000000005f82015250565b5f6118e3601483611031565b91506118ee826118af565b602082019050919050565b5f6020820190508181035f830152611910816118d7565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026119737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611938565b61197d8683611938565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6119b86119b36119ae84610fc9565b611995565b610fc9565b9050919050565b5f819050919050565b6119d18361199e565b6119e56119dd826119bf565b848454611944565b825550505050565b5f5f905090565b6119fc6119ed565b611a078184846119c8565b505050565b5b81811015611a2a57611a1f5f826119f4565b600181019050611a0d565b5050565b601f821115611a6f57611a4081611917565b611a4984611929565b81016020851015611a58578190505b611a6c611a6485611929565b830182611a0c565b50505b505050565b5f82821c905092915050565b5f611a8f5f1984600802611a74565b1980831691505092915050565b5f611aa78383611a80565b9150826002028217905092915050565b611ac082611027565b67ffffffffffffffff811115611ad957611ad8611194565b5b611ae38254611447565b611aee828285611a2e565b5f60209050601f831160018114611b1f575f8415611b0d578287015190505b611b178582611a9c565b865550611b7e565b601f198416611b2d86611917565b5f5b82811015611b5457848901518255600182019150602085019450602081019050611b2f565b86831015611b715784890151611b6d601f891682611a80565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220994cdbb222be3f9ef21f391d3ea69ebf47579b33812f062aa6f8a290ab7f4bfd64736f6c634300081e0033a2646970667358221220123a064db153235e94673ab451f4d8fbe397de6b4002fa6ce1f6670245ab1abe64736f6c634300081e0033",
                "sourceMap": "149:246:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;189:204;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;849:28:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;189:204:20;222:8;242:17;336:42:0;269:17:20;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;322:10;309:24;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;298:35;;336:42:0;343:16:20;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;378:8;371:15;;;189:204;:::o;849:28:1:-;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:126:26:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:144::-;553:9;586:37;617:5;586:37;:::i;:::-;573:50;;485:144;;;:::o;635:167::-;740:55;789:5;740:55;:::i;:::-;735:3;728:68;635:167;;:::o;808:258::-;919:4;957:2;946:9;942:18;934:26;;970:89;1056:1;1045:9;1041:17;1032:6;970:89;:::i;:::-;808:258;;;;:::o;1072:90::-;1106:7;1149:5;1142:13;1135:21;1124:32;;1072:90;;;:::o;1168:109::-;1249:21;1264:5;1249:21;:::i;:::-;1244:3;1237:34;1168:109;;:::o;1283:210::-;1370:4;1408:2;1397:9;1393:18;1385:26;;1421:65;1483:1;1472:9;1468:17;1459:6;1421:65;:::i;:::-;1283:210;;;;:::o;1499:96::-;1536:7;1565:24;1583:5;1565:24;:::i;:::-;1554:35;;1499:96;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "IS_SCRIPT()": "f8ccbf47",
                "run()": "c0406226"
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/src/ERC721SBT/ERC721SBT.sol": {
      "ERC721SBT": [
        {
          "contract": {
            "abi": [
              {
                "type": "constructor",
                "inputs": [
                  {
                    "name": "_admin",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "MAX_LEVEL",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "_skillLevels",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "addToWhitelist",
                "inputs": [
                  {
                    "name": "userAddr",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "admin",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "balanceOf",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "isWhiteListed",
                "inputs": [
                  {
                    "name": "userAddr",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "ownerOf",
                "inputs": [
                  {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "skillLevels",
                "inputs": [
                  {
                    "name": "skillName",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "supportsInterface",
                "inputs": [
                  {
                    "name": "interfaceId",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "event",
                "name": "SkillUpdated",
                "inputs": [
                  {
                    "name": "userAddr",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "skillName",
                    "type": "string",
                    "indexed": true,
                    "internalType": "string"
                  },
                  {
                    "name": "level",
                    "type": "uint8",
                    "indexed": true,
                    "internalType": "uint8"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "TokenURISet",
                "inputs": [
                  {
                    "name": "tokenId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                  },
                  {
                    "name": "uri",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Transfer",
                "inputs": [
                  {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "id",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "addedToWhitelist",
                "inputs": [
                  {
                    "name": "userAddr",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"skillName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"}],\"name\":\"SkillUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"TokenURISet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"}],\"name\":\"addedToWhitelist\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_LEVEL\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"_skillLevels\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"}],\"name\":\"isWhiteListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"skillName\",\"type\":\"string\"}],\"name\":\"skillLevels\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC721SBT/ERC721SBT.sol\":\"ERC721SBT\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/ERC721SBT/ERC721SBT.sol\":{\"keccak256\":\"0xa0ced970722cedf73a0ef0f67a9cce0bce097fc373948f12408f21394c6aeec9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6bbb527667ba5c3348a52ffd4b35232390cfd81ea6df44143fe21440a16d602\",\"dweb:/ipfs/QmdrNkwLybSadttLDosptV8JoSURxSNdDtfDsRMc8jXPZR\"]},\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0xafc7f5a5e7e4f3e8a0d54fcd3495bac94305db4fa802d79493239876734e691b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de03704f92a517dd165ba187eb4bdc680fece2e0af5ce7127890978e4c3882bf\",\"dweb:/ipfs/QmP93oZG4JVAq7JXZBAVFcKj6eR3JdiiE93SNCkQRS9LY1\"]},\"src/interfaces/IERC721.sol\":{\"keccak256\":\"0x3d67570df2935f2eea40b42e4a9c9335bfb13d4f317a3f0ad552d1b40c345ea6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94c5e1b2ea9e0a3597ee924511d18935714cb4667a7f332eb02d2f3ae7e3da91\",\"dweb:/ipfs/QmaX8UTwwmoXt51PmQjqgxJxbo3pzrxvRS6gxPUs8P4ydw\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "608060405234801561000f575f5ffd5b50604051610f8f380380610f8f83398181016040528101906100319190610142565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361009f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610096906101c7565b60405180910390fd5b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101e5565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610111826100e8565b9050919050565b61012181610107565b811461012b575f5ffd5b50565b5f8151905061013c81610118565b92915050565b5f60208284031215610157576101566100e4565b5b5f6101648482850161012e565b91505092915050565b5f82825260208201905092915050565b7f7665726966696572203d207a65726f20616464726573730000000000000000005f82015250565b5f6101b160178361016d565b91506101bc8261017d565b602082019050919050565b5f6020820190508181035f8301526101de816101a5565b9050919050565b610d9d806101f25f395ff3fe608060405234801561000f575f5ffd5b5060043610610091575f3560e01c80638df72b5a116100645780638df72b5a14610155578063a49062d414610185578063afaf611a146101a3578063e43252d7146101d3578063f851a440146101ef57610091565b806301ffc9a7146100955780636352211e146100c55780636f9170f6146100f557806370a0823114610125575b5f5ffd5b6100af60048036038101906100aa9190610796565b61020d565b6040516100bc91906107db565b60405180910390f35b6100df60048036038101906100da9190610827565b6102de565b6040516100ec9190610891565b60405180910390f35b61010f600480360381019061010a91906108d4565b610385565b60405161011c91906107db565b60405180910390f35b61013f600480360381019061013a91906108d4565b6103d7565b60405161014c919061090e565b60405180910390f35b61016f600480360381019061016a9190610a63565b61049a565b60405161017c9190610ac5565b60405180910390f35b61018d6105b4565b60405161019a9190610ac5565b60405180910390f35b6101bd60048036038101906101b89190610b11565b6105b9565b6040516101ca9190610ac5565b60405180910390f35b6101ed60048036038101906101e891906108d4565b6105e3565b005b6101f761070c565b6040516102049190610891565b60405180910390f35b5f7f13f2a32f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102d757507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037790610ba9565b60405180910390fd5b919050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043d90610c11565b60405180910390fd5b60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff169050919050565b5f5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1611610529576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052090610c79565b60405180910390fd5b5f8260405160200161053b9190610ce9565b60405160208183030381529060405280519060200120905060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8281526020019081526020015f205f9054906101000a900460ff16915050919050565b600281565b6001602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610671576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066890610d49565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd7cf613dd0392c9170696a1b7ca820f2e07f8b54e99259edc95cc407ede57d7960405160405180910390a250565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61077581610741565b811461077f575f5ffd5b50565b5f813590506107908161076c565b92915050565b5f602082840312156107ab576107aa610739565b5b5f6107b884828501610782565b91505092915050565b5f8115159050919050565b6107d5816107c1565b82525050565b5f6020820190506107ee5f8301846107cc565b92915050565b5f819050919050565b610806816107f4565b8114610810575f5ffd5b50565b5f81359050610821816107fd565b92915050565b5f6020828403121561083c5761083b610739565b5b5f61084984828501610813565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61087b82610852565b9050919050565b61088b81610871565b82525050565b5f6020820190506108a45f830184610882565b92915050565b6108b381610871565b81146108bd575f5ffd5b50565b5f813590506108ce816108aa565b92915050565b5f602082840312156108e9576108e8610739565b5b5f6108f6848285016108c0565b91505092915050565b610908816107f4565b82525050565b5f6020820190506109215f8301846108ff565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6109758261092f565b810181811067ffffffffffffffff821117156109945761099361093f565b5b80604052505050565b5f6109a6610730565b90506109b2828261096c565b919050565b5f67ffffffffffffffff8211156109d1576109d061093f565b5b6109da8261092f565b9050602081019050919050565b828183375f83830152505050565b5f610a07610a02846109b7565b61099d565b905082815260208101848484011115610a2357610a2261092b565b5b610a2e8482856109e7565b509392505050565b5f82601f830112610a4a57610a49610927565b5b8135610a5a8482602086016109f5565b91505092915050565b5f60208284031215610a7857610a77610739565b5b5f82013567ffffffffffffffff811115610a9557610a9461073d565b5b610aa184828501610a36565b91505092915050565b5f60ff82169050919050565b610abf81610aaa565b82525050565b5f602082019050610ad85f830184610ab6565b92915050565b5f819050919050565b610af081610ade565b8114610afa575f5ffd5b50565b5f81359050610b0b81610ae7565b92915050565b5f5f60408385031215610b2757610b26610739565b5b5f610b34858286016108c0565b9250506020610b4585828601610afd565b9150509250929050565b5f82825260208201905092915050565b7f746f6b656e20646f65736e2774206578697374000000000000000000000000005f82015250565b5f610b93601383610b4f565b9150610b9e82610b5f565b602082019050919050565b5f6020820190508181035f830152610bc081610b87565b9050919050565b7f6f776e6572203d207a65726f20616464726573730000000000000000000000005f82015250565b5f610bfb601483610b4f565b9150610c0682610bc7565b602082019050919050565b5f6020820190508181035f830152610c2881610bef565b9050919050565b7f6d696e74205342542066697273740000000000000000000000000000000000005f82015250565b5f610c63600e83610b4f565b9150610c6e82610c2f565b602082019050919050565b5f6020820190508181035f830152610c9081610c57565b9050919050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610cc382610c97565b610ccd8185610ca1565b9350610cdd818560208601610cab565b80840191505092915050565b5f610cf48284610cb9565b915081905092915050565b7f796f7520617265206e6f742061646d696e0000000000000000000000000000005f82015250565b5f610d33601183610b4f565b9150610d3e82610cff565b602082019050919050565b5f6020820190508181035f830152610d6081610d27565b905091905056fea26469706673582212209c2ee6850513184675a5d0bbe115fd6a8ed0d105bbb3d8084b1a0a4ceca5746964736f6c634300081e0033",
                "sourceMap": "161:3180:21:-:0;;;901:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;965:1;947:20;;:6;:20;;;939:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1013:6;1005:5;;:14;;;;;;;;;;;;;;;;;;901:125;161:3180;;88:117:26;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:173::-;1517:25;1513:1;1505:6;1501:14;1494:49;1377:173;:::o;1556:366::-;1698:3;1719:67;1783:2;1778:3;1719:67;:::i;:::-;1712:74;;1795:93;1884:3;1795:93;:::i;:::-;1913:2;1908:3;1904:12;1897:19;;1556:366;;;:::o;1928:419::-;2094:4;2132:2;2121:9;2117:18;2109:26;;2181:9;2175:4;2171:20;2167:1;2156:9;2152:17;2145:47;2209:131;2335:4;2209:131;:::i;:::-;2201:139;;1928:419;;;:::o;161:3180:21:-;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "608060405234801561000f575f5ffd5b5060043610610091575f3560e01c80638df72b5a116100645780638df72b5a14610155578063a49062d414610185578063afaf611a146101a3578063e43252d7146101d3578063f851a440146101ef57610091565b806301ffc9a7146100955780636352211e146100c55780636f9170f6146100f557806370a0823114610125575b5f5ffd5b6100af60048036038101906100aa9190610796565b61020d565b6040516100bc91906107db565b60405180910390f35b6100df60048036038101906100da9190610827565b6102de565b6040516100ec9190610891565b60405180910390f35b61010f600480360381019061010a91906108d4565b610385565b60405161011c91906107db565b60405180910390f35b61013f600480360381019061013a91906108d4565b6103d7565b60405161014c919061090e565b60405180910390f35b61016f600480360381019061016a9190610a63565b61049a565b60405161017c9190610ac5565b60405180910390f35b61018d6105b4565b60405161019a9190610ac5565b60405180910390f35b6101bd60048036038101906101b89190610b11565b6105b9565b6040516101ca9190610ac5565b60405180910390f35b6101ed60048036038101906101e891906108d4565b6105e3565b005b6101f761070c565b6040516102049190610891565b60405180910390f35b5f7f13f2a32f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102d757507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037790610ba9565b60405180910390fd5b919050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043d90610c11565b60405180910390fd5b60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff169050919050565b5f5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1611610529576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052090610c79565b60405180910390fd5b5f8260405160200161053b9190610ce9565b60405160208183030381529060405280519060200120905060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8281526020019081526020015f205f9054906101000a900460ff16915050919050565b600281565b6001602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610671576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066890610d49565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd7cf613dd0392c9170696a1b7ca820f2e07f8b54e99259edc95cc407ede57d7960405160405180910390a250565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61077581610741565b811461077f575f5ffd5b50565b5f813590506107908161076c565b92915050565b5f602082840312156107ab576107aa610739565b5b5f6107b884828501610782565b91505092915050565b5f8115159050919050565b6107d5816107c1565b82525050565b5f6020820190506107ee5f8301846107cc565b92915050565b5f819050919050565b610806816107f4565b8114610810575f5ffd5b50565b5f81359050610821816107fd565b92915050565b5f6020828403121561083c5761083b610739565b5b5f61084984828501610813565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61087b82610852565b9050919050565b61088b81610871565b82525050565b5f6020820190506108a45f830184610882565b92915050565b6108b381610871565b81146108bd575f5ffd5b50565b5f813590506108ce816108aa565b92915050565b5f602082840312156108e9576108e8610739565b5b5f6108f6848285016108c0565b91505092915050565b610908816107f4565b82525050565b5f6020820190506109215f8301846108ff565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6109758261092f565b810181811067ffffffffffffffff821117156109945761099361093f565b5b80604052505050565b5f6109a6610730565b90506109b2828261096c565b919050565b5f67ffffffffffffffff8211156109d1576109d061093f565b5b6109da8261092f565b9050602081019050919050565b828183375f83830152505050565b5f610a07610a02846109b7565b61099d565b905082815260208101848484011115610a2357610a2261092b565b5b610a2e8482856109e7565b509392505050565b5f82601f830112610a4a57610a49610927565b5b8135610a5a8482602086016109f5565b91505092915050565b5f60208284031215610a7857610a77610739565b5b5f82013567ffffffffffffffff811115610a9557610a9461073d565b5b610aa184828501610a36565b91505092915050565b5f60ff82169050919050565b610abf81610aaa565b82525050565b5f602082019050610ad85f830184610ab6565b92915050565b5f819050919050565b610af081610ade565b8114610afa575f5ffd5b50565b5f81359050610b0b81610ae7565b92915050565b5f5f60408385031215610b2757610b26610739565b5b5f610b34858286016108c0565b9250506020610b4585828601610afd565b9150509250929050565b5f82825260208201905092915050565b7f746f6b656e20646f65736e2774206578697374000000000000000000000000005f82015250565b5f610b93601383610b4f565b9150610b9e82610b5f565b602082019050919050565b5f6020820190508181035f830152610bc081610b87565b9050919050565b7f6f776e6572203d207a65726f20616464726573730000000000000000000000005f82015250565b5f610bfb601483610b4f565b9150610c0682610bc7565b602082019050919050565b5f6020820190508181035f830152610c2881610bef565b9050919050565b7f6d696e74205342542066697273740000000000000000000000000000000000005f82015250565b5f610c63600e83610b4f565b9150610c6e82610c2f565b602082019050919050565b5f6020820190508181035f830152610c9081610c57565b9050919050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f610cc382610c97565b610ccd8185610ca1565b9350610cdd818560208601610cab565b80840191505092915050565b5f610cf48284610cb9565b915081905092915050565b7f796f7520617265206e6f742061646d696e0000000000000000000000000000005f82015250565b5f610d33601183610b4f565b9150610d3e82610cff565b602082019050919050565b5f6020820190508181035f830152610d6081610d27565b905091905056fea26469706673582212209c2ee6850513184675a5d0bbe115fd6a8ed0d105bbb3d8084b1a0a4ceca5746964736f6c634300081e0033",
                "sourceMap": "161:3180:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1247:222;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1475:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1821:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1646:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2093:278;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;580:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;622:65;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1941:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;553:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1247:222;1331:4;1381:25;1366:40;;;:11;:40;;;;:96;;;;1437:25;1422:40;;;:11;:40;;;;1366:96;1347:115;;1247:222;;;:::o;1475:165::-;1527:13;1560:8;:12;1569:2;1560:12;;;;;;;;;;;;;;;;;;;;;1552:20;;1607:1;1590:19;;:5;:19;;;1582:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1475:165;;;:::o;1821:114::-;1885:4;1908:10;:20;1919:8;1908:20;;;;;;;;;;;;;;;;;;;;;;;;;1901:27;;1821:114;;;:::o;1646:169::-;1703:7;1747:1;1730:19;;:5;:19;;;1722:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1791:10;:17;1802:5;1791:17;;;;;;;;;;;;;;;;;;;;;;;;;1784:24;;;;1646:169;;;:::o;2093:278::-;2176:5;2226:1;2201:10;:22;2212:10;2201:22;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;2193:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2256:16;2302:9;2285:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;2275:38;;;;;;2256:57;;2330:12;:24;2343:10;2330:24;;;;;;;;;;;;;;;:34;2355:8;2330:34;;;;;;;;;;;;;;;;;;;;;2323:41;;;2093:278;;;:::o;580:35::-;614:1;580:35;:::o;622:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1941:146::-;1085:5;;;;;;;;;;;1071:19;;:10;:19;;;1063:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2035:4:::1;2012:10;:20;2023:8;2012:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2071:8;2054:26;;;;;;;;;;;;1941:146:::0;:::o;553:20::-;;;;;;;;;;;;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:126::-;2246:7;2286:42;2279:5;2275:54;2264:65;;2209:126;;;:::o;2341:96::-;2378:7;2407:24;2425:5;2407:24;:::i;:::-;2396:35;;2341:96;;;:::o;2443:118::-;2530:24;2548:5;2530:24;:::i;:::-;2525:3;2518:37;2443:118;;:::o;2567:222::-;2660:4;2698:2;2687:9;2683:18;2675:26;;2711:71;2779:1;2768:9;2764:17;2755:6;2711:71;:::i;:::-;2567:222;;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:329::-;3127:6;3176:2;3164:9;3155:7;3151:23;3147:32;3144:119;;;3182:79;;:::i;:::-;3144:119;3302:1;3327:53;3372:7;3363:6;3352:9;3348:22;3327:53;:::i;:::-;3317:63;;3273:117;3068:329;;;;:::o;3403:118::-;3490:24;3508:5;3490:24;:::i;:::-;3485:3;3478:37;3403:118;;:::o;3527:222::-;3620:4;3658:2;3647:9;3643:18;3635:26;;3671:71;3739:1;3728:9;3724:17;3715:6;3671:71;:::i;:::-;3527:222;;;;:::o;3755:117::-;3864:1;3861;3854:12;3878:117;3987:1;3984;3977:12;4001:102;4042:6;4093:2;4089:7;4084:2;4077:5;4073:14;4069:28;4059:38;;4001:102;;;:::o;4109:180::-;4157:77;4154:1;4147:88;4254:4;4251:1;4244:15;4278:4;4275:1;4268:15;4295:281;4378:27;4400:4;4378:27;:::i;:::-;4370:6;4366:40;4508:6;4496:10;4493:22;4472:18;4460:10;4457:34;4454:62;4451:88;;;4519:18;;:::i;:::-;4451:88;4559:10;4555:2;4548:22;4338:238;4295:281;;:::o;4582:129::-;4616:6;4643:20;;:::i;:::-;4633:30;;4672:33;4700:4;4692:6;4672:33;:::i;:::-;4582:129;;;:::o;4717:308::-;4779:4;4869:18;4861:6;4858:30;4855:56;;;4891:18;;:::i;:::-;4855:56;4929:29;4951:6;4929:29;:::i;:::-;4921:37;;5013:4;5007;5003:15;4995:23;;4717:308;;;:::o;5031:148::-;5129:6;5124:3;5119;5106:30;5170:1;5161:6;5156:3;5152:16;5145:27;5031:148;;;:::o;5185:425::-;5263:5;5288:66;5304:49;5346:6;5304:49;:::i;:::-;5288:66;:::i;:::-;5279:75;;5377:6;5370:5;5363:21;5415:4;5408:5;5404:16;5453:3;5444:6;5439:3;5435:16;5432:25;5429:112;;;5460:79;;:::i;:::-;5429:112;5550:54;5597:6;5592:3;5587;5550:54;:::i;:::-;5269:341;5185:425;;;;;:::o;5630:340::-;5686:5;5735:3;5728:4;5720:6;5716:17;5712:27;5702:122;;5743:79;;:::i;:::-;5702:122;5860:6;5847:20;5885:79;5960:3;5952:6;5945:4;5937:6;5933:17;5885:79;:::i;:::-;5876:88;;5692:278;5630:340;;;;:::o;5976:509::-;6045:6;6094:2;6082:9;6073:7;6069:23;6065:32;6062:119;;;6100:79;;:::i;:::-;6062:119;6248:1;6237:9;6233:17;6220:31;6278:18;6270:6;6267:30;6264:117;;;6300:79;;:::i;:::-;6264:117;6405:63;6460:7;6451:6;6440:9;6436:22;6405:63;:::i;:::-;6395:73;;6191:287;5976:509;;;;:::o;6491:86::-;6526:7;6566:4;6559:5;6555:16;6544:27;;6491:86;;;:::o;6583:112::-;6666:22;6682:5;6666:22;:::i;:::-;6661:3;6654:35;6583:112;;:::o;6701:214::-;6790:4;6828:2;6817:9;6813:18;6805:26;;6841:67;6905:1;6894:9;6890:17;6881:6;6841:67;:::i;:::-;6701:214;;;;:::o;6921:77::-;6958:7;6987:5;6976:16;;6921:77;;;:::o;7004:122::-;7077:24;7095:5;7077:24;:::i;:::-;7070:5;7067:35;7057:63;;7116:1;7113;7106:12;7057:63;7004:122;:::o;7132:139::-;7178:5;7216:6;7203:20;7194:29;;7232:33;7259:5;7232:33;:::i;:::-;7132:139;;;;:::o;7277:474::-;7345:6;7353;7402:2;7390:9;7381:7;7377:23;7373:32;7370:119;;;7408:79;;:::i;:::-;7370:119;7528:1;7553:53;7598:7;7589:6;7578:9;7574:22;7553:53;:::i;:::-;7543:63;;7499:117;7655:2;7681:53;7726:7;7717:6;7706:9;7702:22;7681:53;:::i;:::-;7671:63;;7626:118;7277:474;;;;;:::o;7757:169::-;7841:11;7875:6;7870:3;7863:19;7915:4;7910:3;7906:14;7891:29;;7757:169;;;;:::o;7932:::-;8072:21;8068:1;8060:6;8056:14;8049:45;7932:169;:::o;8107:366::-;8249:3;8270:67;8334:2;8329:3;8270:67;:::i;:::-;8263:74;;8346:93;8435:3;8346:93;:::i;:::-;8464:2;8459:3;8455:12;8448:19;;8107:366;;;:::o;8479:419::-;8645:4;8683:2;8672:9;8668:18;8660:26;;8732:9;8726:4;8722:20;8718:1;8707:9;8703:17;8696:47;8760:131;8886:4;8760:131;:::i;:::-;8752:139;;8479:419;;;:::o;8904:170::-;9044:22;9040:1;9032:6;9028:14;9021:46;8904:170;:::o;9080:366::-;9222:3;9243:67;9307:2;9302:3;9243:67;:::i;:::-;9236:74;;9319:93;9408:3;9319:93;:::i;:::-;9437:2;9432:3;9428:12;9421:19;;9080:366;;;:::o;9452:419::-;9618:4;9656:2;9645:9;9641:18;9633:26;;9705:9;9699:4;9695:20;9691:1;9680:9;9676:17;9669:47;9733:131;9859:4;9733:131;:::i;:::-;9725:139;;9452:419;;;:::o;9877:164::-;10017:16;10013:1;10005:6;10001:14;9994:40;9877:164;:::o;10047:366::-;10189:3;10210:67;10274:2;10269:3;10210:67;:::i;:::-;10203:74;;10286:93;10375:3;10286:93;:::i;:::-;10404:2;10399:3;10395:12;10388:19;;10047:366;;;:::o;10419:419::-;10585:4;10623:2;10612:9;10608:18;10600:26;;10672:9;10666:4;10662:20;10658:1;10647:9;10643:17;10636:47;10700:131;10826:4;10700:131;:::i;:::-;10692:139;;10419:419;;;:::o;10844:99::-;10896:6;10930:5;10924:12;10914:22;;10844:99;;;:::o;10949:148::-;11051:11;11088:3;11073:18;;10949:148;;;;:::o;11103:139::-;11192:6;11187:3;11182;11176:23;11233:1;11224:6;11219:3;11215:16;11208:27;11103:139;;;:::o;11248:390::-;11354:3;11382:39;11415:5;11382:39;:::i;:::-;11437:89;11519:6;11514:3;11437:89;:::i;:::-;11430:96;;11535:65;11593:6;11588:3;11581:4;11574:5;11570:16;11535:65;:::i;:::-;11625:6;11620:3;11616:16;11609:23;;11358:280;11248:390;;;;:::o;11644:275::-;11776:3;11798:95;11889:3;11880:6;11798:95;:::i;:::-;11791:102;;11910:3;11903:10;;11644:275;;;;:::o;11925:167::-;12065:19;12061:1;12053:6;12049:14;12042:43;11925:167;:::o;12098:366::-;12240:3;12261:67;12325:2;12320:3;12261:67;:::i;:::-;12254:74;;12337:93;12426:3;12337:93;:::i;:::-;12455:2;12450:3;12446:12;12439:19;;12098:366;;;:::o;12470:419::-;12636:4;12674:2;12663:9;12659:18;12651:26;;12723:9;12717:4;12713:20;12709:1;12698:9;12694:17;12687:47;12751:131;12877:4;12751:131;:::i;:::-;12743:139;;12470:419;;;:::o",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "MAX_LEVEL()": "a49062d4",
                "_skillLevels(address,bytes32)": "afaf611a",
                "addToWhitelist(address)": "e43252d7",
                "admin()": "f851a440",
                "balanceOf(address)": "70a08231",
                "isWhiteListed(address)": "6f9170f6",
                "ownerOf(uint256)": "6352211e",
                "skillLevels(string)": "8df72b5a",
                "supportsInterface(bytes4)": "01ffc9a7"
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/src/SkillSBT.sol": {
      "SkillSBT": [
        {
          "contract": {
            "abi": [
              {
                "type": "constructor",
                "inputs": [
                  {
                    "name": "_admin",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "MAX_LEVEL",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "_skillLevels",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "addToWhitelist",
                "inputs": [
                  {
                    "name": "userAddr",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "admin",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "balanceOf",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "isWhiteListed",
                "inputs": [
                  {
                    "name": "userAddr",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "mint",
                "inputs": [
                  {
                    "name": "uri",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "skillName",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "ownerOf",
                "inputs": [
                  {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "skillLevels",
                "inputs": [
                  {
                    "name": "skillName",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "supportsInterface",
                "inputs": [
                  {
                    "name": "interfaceId",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "tokenUri",
                "inputs": [
                  {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "updateSkill",
                "inputs": [
                  {
                    "name": "skillName",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "event",
                "name": "SkillUpdated",
                "inputs": [
                  {
                    "name": "userAddr",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "skillName",
                    "type": "string",
                    "indexed": true,
                    "internalType": "string"
                  },
                  {
                    "name": "level",
                    "type": "uint8",
                    "indexed": true,
                    "internalType": "uint8"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "TokenURISet",
                "inputs": [
                  {
                    "name": "tokenId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                  },
                  {
                    "name": "uri",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Transfer",
                "inputs": [
                  {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "id",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "addedToWhitelist",
                "inputs": [
                  {
                    "name": "userAddr",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"skillName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"}],\"name\":\"SkillUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"TokenURISet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"}],\"name\":\"addedToWhitelist\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_LEVEL\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"_skillLevels\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"}],\"name\":\"isWhiteListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"skillName\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"skillName\",\"type\":\"string\"}],\"name\":\"skillLevels\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenUri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"skillName\",\"type\":\"string\"}],\"name\":\"updateSkill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SkillSBT.sol\":\"SkillSBT\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/ERC721SBT/ERC721SBT.sol\":{\"keccak256\":\"0xa0ced970722cedf73a0ef0f67a9cce0bce097fc373948f12408f21394c6aeec9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6bbb527667ba5c3348a52ffd4b35232390cfd81ea6df44143fe21440a16d602\",\"dweb:/ipfs/QmdrNkwLybSadttLDosptV8JoSURxSNdDtfDsRMc8jXPZR\"]},\"src/SkillSBT.sol\":{\"keccak256\":\"0x7d4d0a02bee70fc29bd63075464e8ead4a81084d8cf1ab584248682978c962b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a24b534895a27a8838332378c2dd2ffb0d621a3283743c86ea939189557ab86\",\"dweb:/ipfs/QmQciQFFuX9ojXdRnLiXyVeH2vxfYDLPt7gH5ttU7jjFCd\"]},\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0xafc7f5a5e7e4f3e8a0d54fcd3495bac94305db4fa802d79493239876734e691b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de03704f92a517dd165ba187eb4bdc680fece2e0af5ce7127890978e4c3882bf\",\"dweb:/ipfs/QmP93oZG4JVAq7JXZBAVFcKj6eR3JdiiE93SNCkQRS9LY1\"]},\"src/interfaces/IERC721.sol\":{\"keccak256\":\"0x3d67570df2935f2eea40b42e4a9c9335bfb13d4f317a3f0ad552d1b40c345ea6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94c5e1b2ea9e0a3597ee924511d18935714cb4667a7f332eb02d2f3ae7e3da91\",\"dweb:/ipfs/QmaX8UTwwmoXt51PmQjqgxJxbo3pzrxvRS6gxPUs8P4ydw\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "608060405234801561000f575f5ffd5b50604051611db0380380611db083398181016040528101906100319190610144565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610097906101c9565b60405180910390fd5b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101e7565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610113826100ea565b9050919050565b61012381610109565b811461012d575f5ffd5b50565b5f8151905061013e8161011a565b92915050565b5f60208284031215610159576101586100e6565b5b5f61016684828501610130565b91505092915050565b5f82825260208201905092915050565b7f7665726966696572203d207a65726f20616464726573730000000000000000005f82015250565b5f6101b360178361016f565b91506101be8261017f565b602082019050919050565b5f6020820190508181035f8301526101e0816101a7565b9050919050565b611bbc806101f45f395ff3fe608060405234801561000f575f5ffd5b50600436106100b2575f3560e01c80638aa0fdad1161006f5780638aa0fdad146101c25780638df72b5a146101f2578063a49062d414610222578063afaf611a14610240578063e43252d714610270578063f851a4401461028c576100b2565b806301ffc9a7146100b65780631675f455146100e65780636352211e146101165780636f9170f61461014657806370a08231146101765780637d2564b6146101a6575b5f5ffd5b6100d060048036038101906100cb9190610f6b565b6102aa565b6040516100dd9190610fb0565b60405180910390f35b61010060048036038101906100fb9190610ffc565b61037b565b60405161010d9190611097565b60405180910390f35b610130600480360381019061012b9190610ffc565b61041c565b60405161013d91906110f6565b60405180910390f35b610160600480360381019061015b9190611139565b6104c3565b60405161016d9190610fb0565b60405180910390f35b610190600480360381019061018b9190611139565b610515565b60405161019d9190611173565b60405180910390f35b6101c060048036038101906101bb91906112b8565b6105d8565b005b6101dc60048036038101906101d791906112ff565b6105e4565b6040516101e99190611173565b60405180910390f35b61020c600480360381019061020791906112b8565b6106b2565b6040516102199190611390565b60405180910390f35b61022a6107cc565b6040516102379190611390565b60405180910390f35b61025a600480360381019061025591906113dc565b6107d1565b6040516102679190611390565b60405180910390f35b61028a60048036038101906102859190611139565b6107fb565b005b610294610924565b6040516102a191906110f6565b60405180910390f35b5f7f13f2a32f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061037457507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b606060035f8381526020019081526020015f20805461039990611447565b80601f01602080910402602001604051908101604052809291908181526020018280546103c590611447565b80156104105780601f106103e757610100808354040283529160200191610410565b820191905f5260205f20905b8154815290600101906020018083116103f357829003601f168201915b50505050509050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b5906114c1565b60405180910390fd5b919050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b90611529565b60405180910390fd5b60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff169050919050565b6105e181610948565b50565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590611591565b60405180910390fd5b60065f815480929190610680906115dc565b91905055505f60065490506106953382610c0c565b61069e83610948565b6106a88185610eaa565b8091505092915050565b5f5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1611610741576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107389061166d565b60405180910390fd5b5f8260405160200161075391906116c5565b60405160208183030381529060405280519060200120905060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8281526020019081526020015f205f9054906101000a900460ff16915050919050565b600281565b6001602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610889576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088090611725565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd7cf613dd0392c9170696a1b7ca820f2e07f8b54e99259edc95cc407ede57d7960405160405180910390a250565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c890611591565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1611610a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a569061166d565b60405180910390fd5b5f81604051602001610a7191906116c5565b6040516020818303038152906040528051906020012090505f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f9054906101000a900460ff169050600260ff168160ff1610610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b259061178d565b60405180910390fd5b600181610b3b91906117ab565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f6101000a81548160ff021916908360ff160217905550600181610bab91906117ab565b60ff1683604051610bbc91906116c5565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167ffb52386a76af79290662c032bf53cadd370d02eb37ad699d27d581eeb7878c8860405160405180910390a4505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7190611829565b60405180910390fd5b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1614610d08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cff90611891565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9d906118f9565b60405180910390fd5b600160055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908360ff1602179055508160045f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b8060035f8481526020019081526020015f209081610ec89190611ab7565b50817fda84ca2183491f179a603e877b2cb058e42195041c2b9c53d746427e519a34df82604051610ef99190611097565b60405180910390a25050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f4a81610f16565b8114610f54575f5ffd5b50565b5f81359050610f6581610f41565b92915050565b5f60208284031215610f8057610f7f610f0e565b5b5f610f8d84828501610f57565b91505092915050565b5f8115159050919050565b610faa81610f96565b82525050565b5f602082019050610fc35f830184610fa1565b92915050565b5f819050919050565b610fdb81610fc9565b8114610fe5575f5ffd5b50565b5f81359050610ff681610fd2565b92915050565b5f6020828403121561101157611010610f0e565b5b5f61101e84828501610fe8565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61106982611027565b6110738185611031565b9350611083818560208601611041565b61108c8161104f565b840191505092915050565b5f6020820190508181035f8301526110af818461105f565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110e0826110b7565b9050919050565b6110f0816110d6565b82525050565b5f6020820190506111095f8301846110e7565b92915050565b611118816110d6565b8114611122575f5ffd5b50565b5f813590506111338161110f565b92915050565b5f6020828403121561114e5761114d610f0e565b5b5f61115b84828501611125565b91505092915050565b61116d81610fc9565b82525050565b5f6020820190506111865f830184611164565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6111ca8261104f565b810181811067ffffffffffffffff821117156111e9576111e8611194565b5b80604052505050565b5f6111fb610f05565b905061120782826111c1565b919050565b5f67ffffffffffffffff82111561122657611225611194565b5b61122f8261104f565b9050602081019050919050565b828183375f83830152505050565b5f61125c6112578461120c565b6111f2565b90508281526020810184848401111561127857611277611190565b5b61128384828561123c565b509392505050565b5f82601f83011261129f5761129e61118c565b5b81356112af84826020860161124a565b91505092915050565b5f602082840312156112cd576112cc610f0e565b5b5f82013567ffffffffffffffff8111156112ea576112e9610f12565b5b6112f68482850161128b565b91505092915050565b5f5f6040838503121561131557611314610f0e565b5b5f83013567ffffffffffffffff81111561133257611331610f12565b5b61133e8582860161128b565b925050602083013567ffffffffffffffff81111561135f5761135e610f12565b5b61136b8582860161128b565b9150509250929050565b5f60ff82169050919050565b61138a81611375565b82525050565b5f6020820190506113a35f830184611381565b92915050565b5f819050919050565b6113bb816113a9565b81146113c5575f5ffd5b50565b5f813590506113d6816113b2565b92915050565b5f5f604083850312156113f2576113f1610f0e565b5b5f6113ff85828601611125565b9250506020611410858286016113c8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061145e57607f821691505b6020821081036114715761147061141a565b5b50919050565b7f746f6b656e20646f65736e2774206578697374000000000000000000000000005f82015250565b5f6114ab601383611031565b91506114b682611477565b602082019050919050565b5f6020820190508181035f8301526114d88161149f565b9050919050565b7f6f776e6572203d207a65726f20616464726573730000000000000000000000005f82015250565b5f611513601483611031565b915061151e826114df565b602082019050919050565b5f6020820190508181035f83015261154081611507565b9050919050565b7f6e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f61157b600f83611031565b915061158682611547565b602082019050919050565b5f6020820190508181035f8301526115a88161156f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115e682610fc9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611618576116176115af565b5b600182019050919050565b7f6d696e74205342542066697273740000000000000000000000000000000000005f82015250565b5f611657600e83611031565b915061166282611623565b602082019050919050565b5f6020820190508181035f8301526116848161164b565b9050919050565b5f81905092915050565b5f61169f82611027565b6116a9818561168b565b93506116b9818560208601611041565b80840191505092915050565b5f6116d08284611695565b915081905092915050565b7f796f7520617265206e6f742061646d696e0000000000000000000000000000005f82015250565b5f61170f601183611031565b915061171a826116db565b602082019050919050565b5f6020820190508181035f83015261173c81611703565b9050919050565b7f4d6178206c6576656c20726561636865640000000000000000000000000000005f82015250565b5f611777601183611031565b915061178282611743565b602082019050919050565b5f6020820190508181035f8301526117a48161176b565b9050919050565b5f6117b582611375565b91506117c083611375565b9250828201905060ff8111156117d9576117d86115af565b5b92915050565b7f6d696e7420746f207a65726f20616464726573730000000000000000000000005f82015250565b5f611813601483611031565b915061181e826117df565b602082019050919050565b5f6020820190508181035f83015261184081611807565b9050919050565b7f7573657220616c72656164792068617320616e205342540000000000000000005f82015250565b5f61187b601783611031565b915061188682611847565b602082019050919050565b5f6020820190508181035f8301526118a88161186f565b9050919050565b7f746f6b656e20616c7265616479206d696e7465640000000000000000000000005f82015250565b5f6118e3601483611031565b91506118ee826118af565b602082019050919050565b5f6020820190508181035f830152611910816118d7565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026119737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611938565b61197d8683611938565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6119b86119b36119ae84610fc9565b611995565b610fc9565b9050919050565b5f819050919050565b6119d18361199e565b6119e56119dd826119bf565b848454611944565b825550505050565b5f5f905090565b6119fc6119ed565b611a078184846119c8565b505050565b5b81811015611a2a57611a1f5f826119f4565b600181019050611a0d565b5050565b601f821115611a6f57611a4081611917565b611a4984611929565b81016020851015611a58578190505b611a6c611a6485611929565b830182611a0c565b50505b505050565b5f82821c905092915050565b5f611a8f5f1984600802611a74565b1980831691505092915050565b5f611aa78383611a80565b9150826002028217905092915050565b611ac082611027565b67ffffffffffffffff811115611ad957611ad8611194565b5b611ae38254611447565b611aee828285611a2e565b5f60209050601f831160018114611b1f575f8415611b0d578287015190505b611b178582611a9c565b865550611b7e565b601f198416611b2d86611917565b5f5b82811015611b5457848901518255600182019150602085019450602081019050611b2f565b86831015611b715784890151611b6d601f891682611a80565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220994cdbb222be3f9ef21f391d3ea69ebf47579b33812f062aa6f8a290ab7f4bfd64736f6c634300081e0033",
                "sourceMap": "112:718:22:-:0;;;215:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;267:6;965:1:21;947:20;;:6;:20;;;939:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1013:6;1005:5;;:14;;;;;;;;;;;;;;;;;;901:125;215:62:22;112:718;;88:117:26;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:173::-;1517:25;1513:1;1505:6;1501:14;1494:49;1377:173;:::o;1556:366::-;1698:3;1719:67;1783:2;1778:3;1719:67;:::i;:::-;1712:74;;1795:93;1884:3;1795:93;:::i;:::-;1913:2;1908:3;1904:12;1897:19;;1556:366;;;:::o;1928:419::-;2094:4;2132:2;2121:9;2117:18;2109:26;;2181:9;2175:4;2171:20;2167:1;2156:9;2152:17;2145:47;2209:131;2335:4;2209:131;:::i;:::-;2201:139;;1928:419;;;:::o;112:718:22:-;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "608060405234801561000f575f5ffd5b50600436106100b2575f3560e01c80638aa0fdad1161006f5780638aa0fdad146101c25780638df72b5a146101f2578063a49062d414610222578063afaf611a14610240578063e43252d714610270578063f851a4401461028c576100b2565b806301ffc9a7146100b65780631675f455146100e65780636352211e146101165780636f9170f61461014657806370a08231146101765780637d2564b6146101a6575b5f5ffd5b6100d060048036038101906100cb9190610f6b565b6102aa565b6040516100dd9190610fb0565b60405180910390f35b61010060048036038101906100fb9190610ffc565b61037b565b60405161010d9190611097565b60405180910390f35b610130600480360381019061012b9190610ffc565b61041c565b60405161013d91906110f6565b60405180910390f35b610160600480360381019061015b9190611139565b6104c3565b60405161016d9190610fb0565b60405180910390f35b610190600480360381019061018b9190611139565b610515565b60405161019d9190611173565b60405180910390f35b6101c060048036038101906101bb91906112b8565b6105d8565b005b6101dc60048036038101906101d791906112ff565b6105e4565b6040516101e99190611173565b60405180910390f35b61020c600480360381019061020791906112b8565b6106b2565b6040516102199190611390565b60405180910390f35b61022a6107cc565b6040516102379190611390565b60405180910390f35b61025a600480360381019061025591906113dc565b6107d1565b6040516102679190611390565b60405180910390f35b61028a60048036038101906102859190611139565b6107fb565b005b610294610924565b6040516102a191906110f6565b60405180910390f35b5f7f13f2a32f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061037457507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b606060035f8381526020019081526020015f20805461039990611447565b80601f01602080910402602001604051908101604052809291908181526020018280546103c590611447565b80156104105780601f106103e757610100808354040283529160200191610410565b820191905f5260205f20905b8154815290600101906020018083116103f357829003601f168201915b50505050509050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b5906114c1565b60405180910390fd5b919050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b90611529565b60405180910390fd5b60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff169050919050565b6105e181610948565b50565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590611591565b60405180910390fd5b60065f815480929190610680906115dc565b91905055505f60065490506106953382610c0c565b61069e83610948565b6106a88185610eaa565b8091505092915050565b5f5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1611610741576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107389061166d565b60405180910390fd5b5f8260405160200161075391906116c5565b60405160208183030381529060405280519060200120905060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8281526020019081526020015f205f9054906101000a900460ff16915050919050565b600281565b6001602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610889576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088090611725565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd7cf613dd0392c9170696a1b7ca820f2e07f8b54e99259edc95cc407ede57d7960405160405180910390a250565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c890611591565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1611610a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a569061166d565b60405180910390fd5b5f81604051602001610a7191906116c5565b6040516020818303038152906040528051906020012090505f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f9054906101000a900460ff169050600260ff168160ff1610610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b259061178d565b60405180910390fd5b600181610b3b91906117ab565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f6101000a81548160ff021916908360ff160217905550600181610bab91906117ab565b60ff1683604051610bbc91906116c5565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167ffb52386a76af79290662c032bf53cadd370d02eb37ad699d27d581eeb7878c8860405160405180910390a4505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7190611829565b60405180910390fd5b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1614610d08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cff90611891565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9d906118f9565b60405180910390fd5b600160055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908360ff1602179055508160045f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b8060035f8481526020019081526020015f209081610ec89190611ab7565b50817fda84ca2183491f179a603e877b2cb058e42195041c2b9c53d746427e519a34df82604051610ef99190611097565b60405180910390a25050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f4a81610f16565b8114610f54575f5ffd5b50565b5f81359050610f6581610f41565b92915050565b5f60208284031215610f8057610f7f610f0e565b5b5f610f8d84828501610f57565b91505092915050565b5f8115159050919050565b610faa81610f96565b82525050565b5f602082019050610fc35f830184610fa1565b92915050565b5f819050919050565b610fdb81610fc9565b8114610fe5575f5ffd5b50565b5f81359050610ff681610fd2565b92915050565b5f6020828403121561101157611010610f0e565b5b5f61101e84828501610fe8565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61106982611027565b6110738185611031565b9350611083818560208601611041565b61108c8161104f565b840191505092915050565b5f6020820190508181035f8301526110af818461105f565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110e0826110b7565b9050919050565b6110f0816110d6565b82525050565b5f6020820190506111095f8301846110e7565b92915050565b611118816110d6565b8114611122575f5ffd5b50565b5f813590506111338161110f565b92915050565b5f6020828403121561114e5761114d610f0e565b5b5f61115b84828501611125565b91505092915050565b61116d81610fc9565b82525050565b5f6020820190506111865f830184611164565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6111ca8261104f565b810181811067ffffffffffffffff821117156111e9576111e8611194565b5b80604052505050565b5f6111fb610f05565b905061120782826111c1565b919050565b5f67ffffffffffffffff82111561122657611225611194565b5b61122f8261104f565b9050602081019050919050565b828183375f83830152505050565b5f61125c6112578461120c565b6111f2565b90508281526020810184848401111561127857611277611190565b5b61128384828561123c565b509392505050565b5f82601f83011261129f5761129e61118c565b5b81356112af84826020860161124a565b91505092915050565b5f602082840312156112cd576112cc610f0e565b5b5f82013567ffffffffffffffff8111156112ea576112e9610f12565b5b6112f68482850161128b565b91505092915050565b5f5f6040838503121561131557611314610f0e565b5b5f83013567ffffffffffffffff81111561133257611331610f12565b5b61133e8582860161128b565b925050602083013567ffffffffffffffff81111561135f5761135e610f12565b5b61136b8582860161128b565b9150509250929050565b5f60ff82169050919050565b61138a81611375565b82525050565b5f6020820190506113a35f830184611381565b92915050565b5f819050919050565b6113bb816113a9565b81146113c5575f5ffd5b50565b5f813590506113d6816113b2565b92915050565b5f5f604083850312156113f2576113f1610f0e565b5b5f6113ff85828601611125565b9250506020611410858286016113c8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061145e57607f821691505b6020821081036114715761147061141a565b5b50919050565b7f746f6b656e20646f65736e2774206578697374000000000000000000000000005f82015250565b5f6114ab601383611031565b91506114b682611477565b602082019050919050565b5f6020820190508181035f8301526114d88161149f565b9050919050565b7f6f776e6572203d207a65726f20616464726573730000000000000000000000005f82015250565b5f611513601483611031565b915061151e826114df565b602082019050919050565b5f6020820190508181035f83015261154081611507565b9050919050565b7f6e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f61157b600f83611031565b915061158682611547565b602082019050919050565b5f6020820190508181035f8301526115a88161156f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115e682610fc9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611618576116176115af565b5b600182019050919050565b7f6d696e74205342542066697273740000000000000000000000000000000000005f82015250565b5f611657600e83611031565b915061166282611623565b602082019050919050565b5f6020820190508181035f8301526116848161164b565b9050919050565b5f81905092915050565b5f61169f82611027565b6116a9818561168b565b93506116b9818560208601611041565b80840191505092915050565b5f6116d08284611695565b915081905092915050565b7f796f7520617265206e6f742061646d696e0000000000000000000000000000005f82015250565b5f61170f601183611031565b915061171a826116db565b602082019050919050565b5f6020820190508181035f83015261173c81611703565b9050919050565b7f4d6178206c6576656c20726561636865640000000000000000000000000000005f82015250565b5f611777601183611031565b915061178282611743565b602082019050919050565b5f6020820190508181035f8301526117a48161176b565b9050919050565b5f6117b582611375565b91506117c083611375565b9250828201905060ff8111156117d9576117d86115af565b5b92915050565b7f6d696e7420746f207a65726f20616464726573730000000000000000000000005f82015250565b5f611813601483611031565b915061181e826117df565b602082019050919050565b5f6020820190508181035f83015261184081611807565b9050919050565b7f7573657220616c72656164792068617320616e205342540000000000000000005f82015250565b5f61187b601783611031565b915061188682611847565b602082019050919050565b5f6020820190508181035f8301526118a88161186f565b9050919050565b7f746f6b656e20616c7265616479206d696e7465640000000000000000000000005f82015250565b5f6118e3601483611031565b91506118ee826118af565b602082019050919050565b5f6020820190508181035f830152611910816118d7565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026119737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611938565b61197d8683611938565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6119b86119b36119ae84610fc9565b611995565b610fc9565b9050919050565b5f819050919050565b6119d18361199e565b6119e56119dd826119bf565b848454611944565b825550505050565b5f5f905090565b6119fc6119ed565b611a078184846119c8565b505050565b5b81811015611a2a57611a1f5f826119f4565b600181019050611a0d565b5050565b601f821115611a6f57611a4081611917565b611a4984611929565b81016020851015611a58578190505b611a6c611a6485611929565b830182611a0c565b50505b505050565b5f82821c905092915050565b5f611a8f5f1984600802611a74565b1980831691505092915050565b5f611aa78383611a80565b9150826002028217905092915050565b611ac082611027565b67ffffffffffffffff811115611ad957611ad8611194565b5b611ae38254611447565b611aee828285611a2e565b5f60209050601f831160018114611b1f575f8415611b0d578287015190505b611b178582611a9c565b865550611b7e565b601f198416611b2d86611917565b5f5b82811015611b5457848901518255600182019150602085019450602081019050611b2f565b86831015611b715784890151611b6d601f891682611a80565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220994cdbb222be3f9ef21f391d3ea69ebf47579b33812f062aa6f8a290ab7f4bfd64736f6c634300081e0033",
                "sourceMap": "112:718:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1247:222:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;723:105:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1475:165:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1821:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1646:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;622:95:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;283:333;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2093:278:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;580:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;622:65;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1941:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;553:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1247:222;1331:4;1381:25;1366:40;;;:11;:40;;;;:96;;;;1437:25;1422:40;;;:11;:40;;;;1366:96;1347:115;;1247:222;;;:::o;723:105:22:-;776:13;808:9;:13;818:2;808:13;;;;;;;;;;;801:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:105;;;:::o;1475:165:21:-;1527:13;1560:8;:12;1569:2;1560:12;;;;;;;;;;;;;;;;;;;;;1552:20;;1607:1;1590:19;;:5;:19;;;1582:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1475:165;;;:::o;1821:114::-;1885:4;1908:10;:20;1919:8;1908:20;;;;;;;;;;;;;;;;;;;;;;;;;1901:27;;1821:114;;;:::o;1646:169::-;1703:7;1747:1;1730:19;;:5;:19;;;1722:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1791:10;:17;1802:5;1791:17;;;;;;;;;;;;;;;;;;;;;;;;;1784:24;;;;1646:169;;;:::o;622:95:22:-;687:23;700:9;687:12;:23::i;:::-;622:95;:::o;283:333::-;389:7;1181:10:21;:22;1192:10;1181:22;;;;;;;;;;;;;;;;;;;;;;;;;1173:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;408:15:22::1;;:17;;;;;;;;;:::i;:::-;;;;;;435:18;456:15;;435:36;;481:29;487:10;499;481:5;:29::i;:::-;520:23;533:9;520:12;:23::i;:::-;553:29;566:10;578:3;553:12;:29::i;:::-;599:10;592:17;;;283:333:::0;;;;:::o;2093:278:21:-;2176:5;2226:1;2201:10;:22;2212:10;2201:22;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;2193:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2256:16;2302:9;2285:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;2275:38;;;;;;2256:57;;2330:12;:24;2343:10;2330:24;;;;;;;;;;;;;;;:34;2355:8;2330:34;;;;;;;;;;;;;;;;;;;;;2323:41;;;2093:278;;;:::o;580:35::-;614:1;580:35;:::o;622:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1941:146::-;1085:5;;;;;;;;;;;1071:19;;:10;:19;;;1063:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2035:4:::1;2012:10;:20;2023:8;2012:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2071:8;2054:26;;;;;;;;;;;;1941:146:::0;:::o;553:20::-;;;;;;;;;;;;;:::o;2377:470::-;1181:10;:22;1192:10;1181:22;;;;;;;;;;;;;;;;;;;;;;;;;1173:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2492:1:::1;2467:10;:22;2478:10;2467:22;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;2459:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2522:16;2568:9;2551:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;2541:38;;;;;;2522:57;;2589:18;2610:12;:24;2623:10;2610:24;;;;;;;;;;;;;;;:34;2635:8;2610:34;;;;;;;;;;;;;;;;;;;;;2589:55;;614:1;2662:24;;:12;:24;;;2654:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2771:1;2756:12;:16;;;;:::i;:::-;2719:12;:24;2732:10;2719:24;;;;;;;;;;;;;;;:34;2744:8;2719:34;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;2838:1;2823:12;:16;;;;:::i;:::-;2787:53;;2812:9;2787:53;;;;;;:::i;:::-;;;;;;;;2800:10;2787:53;;;;;;;;;;;;2449:398;;2377:470:::0;:::o;2853:347::-;2933:1;2919:16;;:2;:16;;;2911:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2996:1;2978:10;:14;2989:2;2978:14;;;;;;;;;;;;;;;;;;;;;;;;;:19;;;2970:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3067:1;3043:26;;:8;:12;3052:2;3043:12;;;;;;;;;;;;;;;;;;;;;:26;;;3035:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3122:1;3105:10;:14;3116:2;3105:14;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;3148:2;3133:8;:12;3142:2;3133:12;;;;;;;;;;;;:17;;;;;;;;;;;;;;;;;;3190:2;3186;3165:28;;3182:1;3165:28;;;;;;;;;;;;2853:347;;:::o;3206:133::-;3294:3;3278:9;:13;3288:2;3278:13;;;;;;;;;;;:19;;;;;;:::i;:::-;;3324:2;3312:20;3328:3;3312:20;;;;;;:::i;:::-;;;;;;;;3206:133;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:99::-;2261:6;2295:5;2289:12;2279:22;;2209:99;;;:::o;2314:169::-;2398:11;2432:6;2427:3;2420:19;2472:4;2467:3;2463:14;2448:29;;2314:169;;;;:::o;2489:139::-;2578:6;2573:3;2568;2562:23;2619:1;2610:6;2605:3;2601:16;2594:27;2489:139;;;:::o;2634:102::-;2675:6;2726:2;2722:7;2717:2;2710:5;2706:14;2702:28;2692:38;;2634:102;;;:::o;2742:377::-;2830:3;2858:39;2891:5;2858:39;:::i;:::-;2913:71;2977:6;2972:3;2913:71;:::i;:::-;2906:78;;2993:65;3051:6;3046:3;3039:4;3032:5;3028:16;2993:65;:::i;:::-;3083:29;3105:6;3083:29;:::i;:::-;3078:3;3074:39;3067:46;;2834:285;2742:377;;;;:::o;3125:313::-;3238:4;3276:2;3265:9;3261:18;3253:26;;3325:9;3319:4;3315:20;3311:1;3300:9;3296:17;3289:47;3353:78;3426:4;3417:6;3353:78;:::i;:::-;3345:86;;3125:313;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:329::-;4362:6;4411:2;4399:9;4390:7;4386:23;4382:32;4379:119;;;4417:79;;:::i;:::-;4379:119;4537:1;4562:53;4607:7;4598:6;4587:9;4583:22;4562:53;:::i;:::-;4552:63;;4508:117;4303:329;;;;:::o;4638:118::-;4725:24;4743:5;4725:24;:::i;:::-;4720:3;4713:37;4638:118;;:::o;4762:222::-;4855:4;4893:2;4882:9;4878:18;4870:26;;4906:71;4974:1;4963:9;4959:17;4950:6;4906:71;:::i;:::-;4762:222;;;;:::o;4990:117::-;5099:1;5096;5089:12;5113:117;5222:1;5219;5212:12;5236:180;5284:77;5281:1;5274:88;5381:4;5378:1;5371:15;5405:4;5402:1;5395:15;5422:281;5505:27;5527:4;5505:27;:::i;:::-;5497:6;5493:40;5635:6;5623:10;5620:22;5599:18;5587:10;5584:34;5581:62;5578:88;;;5646:18;;:::i;:::-;5578:88;5686:10;5682:2;5675:22;5465:238;5422:281;;:::o;5709:129::-;5743:6;5770:20;;:::i;:::-;5760:30;;5799:33;5827:4;5819:6;5799:33;:::i;:::-;5709:129;;;:::o;5844:308::-;5906:4;5996:18;5988:6;5985:30;5982:56;;;6018:18;;:::i;:::-;5982:56;6056:29;6078:6;6056:29;:::i;:::-;6048:37;;6140:4;6134;6130:15;6122:23;;5844:308;;;:::o;6158:148::-;6256:6;6251:3;6246;6233:30;6297:1;6288:6;6283:3;6279:16;6272:27;6158:148;;;:::o;6312:425::-;6390:5;6415:66;6431:49;6473:6;6431:49;:::i;:::-;6415:66;:::i;:::-;6406:75;;6504:6;6497:5;6490:21;6542:4;6535:5;6531:16;6580:3;6571:6;6566:3;6562:16;6559:25;6556:112;;;6587:79;;:::i;:::-;6556:112;6677:54;6724:6;6719:3;6714;6677:54;:::i;:::-;6396:341;6312:425;;;;;:::o;6757:340::-;6813:5;6862:3;6855:4;6847:6;6843:17;6839:27;6829:122;;6870:79;;:::i;:::-;6829:122;6987:6;6974:20;7012:79;7087:3;7079:6;7072:4;7064:6;7060:17;7012:79;:::i;:::-;7003:88;;6819:278;6757:340;;;;:::o;7103:509::-;7172:6;7221:2;7209:9;7200:7;7196:23;7192:32;7189:119;;;7227:79;;:::i;:::-;7189:119;7375:1;7364:9;7360:17;7347:31;7405:18;7397:6;7394:30;7391:117;;;7427:79;;:::i;:::-;7391:117;7532:63;7587:7;7578:6;7567:9;7563:22;7532:63;:::i;:::-;7522:73;;7318:287;7103:509;;;;:::o;7618:834::-;7706:6;7714;7763:2;7751:9;7742:7;7738:23;7734:32;7731:119;;;7769:79;;:::i;:::-;7731:119;7917:1;7906:9;7902:17;7889:31;7947:18;7939:6;7936:30;7933:117;;;7969:79;;:::i;:::-;7933:117;8074:63;8129:7;8120:6;8109:9;8105:22;8074:63;:::i;:::-;8064:73;;7860:287;8214:2;8203:9;8199:18;8186:32;8245:18;8237:6;8234:30;8231:117;;;8267:79;;:::i;:::-;8231:117;8372:63;8427:7;8418:6;8407:9;8403:22;8372:63;:::i;:::-;8362:73;;8157:288;7618:834;;;;;:::o;8458:86::-;8493:7;8533:4;8526:5;8522:16;8511:27;;8458:86;;;:::o;8550:112::-;8633:22;8649:5;8633:22;:::i;:::-;8628:3;8621:35;8550:112;;:::o;8668:214::-;8757:4;8795:2;8784:9;8780:18;8772:26;;8808:67;8872:1;8861:9;8857:17;8848:6;8808:67;:::i;:::-;8668:214;;;;:::o;8888:77::-;8925:7;8954:5;8943:16;;8888:77;;;:::o;8971:122::-;9044:24;9062:5;9044:24;:::i;:::-;9037:5;9034:35;9024:63;;9083:1;9080;9073:12;9024:63;8971:122;:::o;9099:139::-;9145:5;9183:6;9170:20;9161:29;;9199:33;9226:5;9199:33;:::i;:::-;9099:139;;;;:::o;9244:474::-;9312:6;9320;9369:2;9357:9;9348:7;9344:23;9340:32;9337:119;;;9375:79;;:::i;:::-;9337:119;9495:1;9520:53;9565:7;9556:6;9545:9;9541:22;9520:53;:::i;:::-;9510:63;;9466:117;9622:2;9648:53;9693:7;9684:6;9673:9;9669:22;9648:53;:::i;:::-;9638:63;;9593:118;9244:474;;;;;:::o;9724:180::-;9772:77;9769:1;9762:88;9869:4;9866:1;9859:15;9893:4;9890:1;9883:15;9910:320;9954:6;9991:1;9985:4;9981:12;9971:22;;10038:1;10032:4;10028:12;10059:18;10049:81;;10115:4;10107:6;10103:17;10093:27;;10049:81;10177:2;10169:6;10166:14;10146:18;10143:38;10140:84;;10196:18;;:::i;:::-;10140:84;9961:269;9910:320;;;:::o;10236:169::-;10376:21;10372:1;10364:6;10360:14;10353:45;10236:169;:::o;10411:366::-;10553:3;10574:67;10638:2;10633:3;10574:67;:::i;:::-;10567:74;;10650:93;10739:3;10650:93;:::i;:::-;10768:2;10763:3;10759:12;10752:19;;10411:366;;;:::o;10783:419::-;10949:4;10987:2;10976:9;10972:18;10964:26;;11036:9;11030:4;11026:20;11022:1;11011:9;11007:17;11000:47;11064:131;11190:4;11064:131;:::i;:::-;11056:139;;10783:419;;;:::o;11208:170::-;11348:22;11344:1;11336:6;11332:14;11325:46;11208:170;:::o;11384:366::-;11526:3;11547:67;11611:2;11606:3;11547:67;:::i;:::-;11540:74;;11623:93;11712:3;11623:93;:::i;:::-;11741:2;11736:3;11732:12;11725:19;;11384:366;;;:::o;11756:419::-;11922:4;11960:2;11949:9;11945:18;11937:26;;12009:9;12003:4;11999:20;11995:1;11984:9;11980:17;11973:47;12037:131;12163:4;12037:131;:::i;:::-;12029:139;;11756:419;;;:::o;12181:165::-;12321:17;12317:1;12309:6;12305:14;12298:41;12181:165;:::o;12352:366::-;12494:3;12515:67;12579:2;12574:3;12515:67;:::i;:::-;12508:74;;12591:93;12680:3;12591:93;:::i;:::-;12709:2;12704:3;12700:12;12693:19;;12352:366;;;:::o;12724:419::-;12890:4;12928:2;12917:9;12913:18;12905:26;;12977:9;12971:4;12967:20;12963:1;12952:9;12948:17;12941:47;13005:131;13131:4;13005:131;:::i;:::-;12997:139;;12724:419;;;:::o;13149:180::-;13197:77;13194:1;13187:88;13294:4;13291:1;13284:15;13318:4;13315:1;13308:15;13335:233;13374:3;13397:24;13415:5;13397:24;:::i;:::-;13388:33;;13443:66;13436:5;13433:77;13430:103;;13513:18;;:::i;:::-;13430:103;13560:1;13553:5;13549:13;13542:20;;13335:233;;;:::o;13574:164::-;13714:16;13710:1;13702:6;13698:14;13691:40;13574:164;:::o;13744:366::-;13886:3;13907:67;13971:2;13966:3;13907:67;:::i;:::-;13900:74;;13983:93;14072:3;13983:93;:::i;:::-;14101:2;14096:3;14092:12;14085:19;;13744:366;;;:::o;14116:419::-;14282:4;14320:2;14309:9;14305:18;14297:26;;14369:9;14363:4;14359:20;14355:1;14344:9;14340:17;14333:47;14397:131;14523:4;14397:131;:::i;:::-;14389:139;;14116:419;;;:::o;14541:148::-;14643:11;14680:3;14665:18;;14541:148;;;;:::o;14695:390::-;14801:3;14829:39;14862:5;14829:39;:::i;:::-;14884:89;14966:6;14961:3;14884:89;:::i;:::-;14877:96;;14982:65;15040:6;15035:3;15028:4;15021:5;15017:16;14982:65;:::i;:::-;15072:6;15067:3;15063:16;15056:23;;14805:280;14695:390;;;;:::o;15091:275::-;15223:3;15245:95;15336:3;15327:6;15245:95;:::i;:::-;15238:102;;15357:3;15350:10;;15091:275;;;;:::o;15372:167::-;15512:19;15508:1;15500:6;15496:14;15489:43;15372:167;:::o;15545:366::-;15687:3;15708:67;15772:2;15767:3;15708:67;:::i;:::-;15701:74;;15784:93;15873:3;15784:93;:::i;:::-;15902:2;15897:3;15893:12;15886:19;;15545:366;;;:::o;15917:419::-;16083:4;16121:2;16110:9;16106:18;16098:26;;16170:9;16164:4;16160:20;16156:1;16145:9;16141:17;16134:47;16198:131;16324:4;16198:131;:::i;:::-;16190:139;;15917:419;;;:::o;16342:167::-;16482:19;16478:1;16470:6;16466:14;16459:43;16342:167;:::o;16515:366::-;16657:3;16678:67;16742:2;16737:3;16678:67;:::i;:::-;16671:74;;16754:93;16843:3;16754:93;:::i;:::-;16872:2;16867:3;16863:12;16856:19;;16515:366;;;:::o;16887:419::-;17053:4;17091:2;17080:9;17076:18;17068:26;;17140:9;17134:4;17130:20;17126:1;17115:9;17111:17;17104:47;17168:131;17294:4;17168:131;:::i;:::-;17160:139;;16887:419;;;:::o;17312:188::-;17350:3;17369:18;17385:1;17369:18;:::i;:::-;17364:23;;17401:18;17417:1;17401:18;:::i;:::-;17396:23;;17442:1;17439;17435:9;17428:16;;17465:4;17460:3;17457:13;17454:39;;;17473:18;;:::i;:::-;17454:39;17312:188;;;;:::o;17506:170::-;17646:22;17642:1;17634:6;17630:14;17623:46;17506:170;:::o;17682:366::-;17824:3;17845:67;17909:2;17904:3;17845:67;:::i;:::-;17838:74;;17921:93;18010:3;17921:93;:::i;:::-;18039:2;18034:3;18030:12;18023:19;;17682:366;;;:::o;18054:419::-;18220:4;18258:2;18247:9;18243:18;18235:26;;18307:9;18301:4;18297:20;18293:1;18282:9;18278:17;18271:47;18335:131;18461:4;18335:131;:::i;:::-;18327:139;;18054:419;;;:::o;18479:173::-;18619:25;18615:1;18607:6;18603:14;18596:49;18479:173;:::o;18658:366::-;18800:3;18821:67;18885:2;18880:3;18821:67;:::i;:::-;18814:74;;18897:93;18986:3;18897:93;:::i;:::-;19015:2;19010:3;19006:12;18999:19;;18658:366;;;:::o;19030:419::-;19196:4;19234:2;19223:9;19219:18;19211:26;;19283:9;19277:4;19273:20;19269:1;19258:9;19254:17;19247:47;19311:131;19437:4;19311:131;:::i;:::-;19303:139;;19030:419;;;:::o;19455:170::-;19595:22;19591:1;19583:6;19579:14;19572:46;19455:170;:::o;19631:366::-;19773:3;19794:67;19858:2;19853:3;19794:67;:::i;:::-;19787:74;;19870:93;19959:3;19870:93;:::i;:::-;19988:2;19983:3;19979:12;19972:19;;19631:366;;;:::o;20003:419::-;20169:4;20207:2;20196:9;20192:18;20184:26;;20256:9;20250:4;20246:20;20242:1;20231:9;20227:17;20220:47;20284:131;20410:4;20284:131;:::i;:::-;20276:139;;20003:419;;;:::o;20428:141::-;20477:4;20500:3;20492:11;;20523:3;20520:1;20513:14;20557:4;20554:1;20544:18;20536:26;;20428:141;;;:::o;20575:93::-;20612:6;20659:2;20654;20647:5;20643:14;20639:23;20629:33;;20575:93;;;:::o;20674:107::-;20718:8;20768:5;20762:4;20758:16;20737:37;;20674:107;;;;:::o;20787:393::-;20856:6;20906:1;20894:10;20890:18;20929:97;20959:66;20948:9;20929:97;:::i;:::-;21047:39;21077:8;21066:9;21047:39;:::i;:::-;21035:51;;21119:4;21115:9;21108:5;21104:21;21095:30;;21168:4;21158:8;21154:19;21147:5;21144:30;21134:40;;20863:317;;20787:393;;;;;:::o;21186:60::-;21214:3;21235:5;21228:12;;21186:60;;;:::o;21252:142::-;21302:9;21335:53;21353:34;21362:24;21380:5;21362:24;:::i;:::-;21353:34;:::i;:::-;21335:53;:::i;:::-;21322:66;;21252:142;;;:::o;21400:75::-;21443:3;21464:5;21457:12;;21400:75;;;:::o;21481:269::-;21591:39;21622:7;21591:39;:::i;:::-;21652:91;21701:41;21725:16;21701:41;:::i;:::-;21693:6;21686:4;21680:11;21652:91;:::i;:::-;21646:4;21639:105;21557:193;21481:269;;;:::o;21756:73::-;21801:3;21822:1;21815:8;;21756:73;:::o;21835:189::-;21912:32;;:::i;:::-;21953:65;22011:6;22003;21997:4;21953:65;:::i;:::-;21888:136;21835:189;;:::o;22030:186::-;22090:120;22107:3;22100:5;22097:14;22090:120;;;22161:39;22198:1;22191:5;22161:39;:::i;:::-;22134:1;22127:5;22123:13;22114:22;;22090:120;;;22030:186;;:::o;22222:543::-;22323:2;22318:3;22315:11;22312:446;;;22357:38;22389:5;22357:38;:::i;:::-;22441:29;22459:10;22441:29;:::i;:::-;22431:8;22427:44;22624:2;22612:10;22609:18;22606:49;;;22645:8;22630:23;;22606:49;22668:80;22724:22;22742:3;22724:22;:::i;:::-;22714:8;22710:37;22697:11;22668:80;:::i;:::-;22327:431;;22312:446;22222:543;;;:::o;22771:117::-;22825:8;22875:5;22869:4;22865:16;22844:37;;22771:117;;;;:::o;22894:169::-;22938:6;22971:51;23019:1;23015:6;23007:5;23004:1;23000:13;22971:51;:::i;:::-;22967:56;23052:4;23046;23042:15;23032:25;;22945:118;22894:169;;;;:::o;23068:295::-;23144:4;23290:29;23315:3;23309:4;23290:29;:::i;:::-;23282:37;;23352:3;23349:1;23345:11;23339:4;23336:21;23328:29;;23068:295;;;;:::o;23368:1395::-;23485:37;23518:3;23485:37;:::i;:::-;23587:18;23579:6;23576:30;23573:56;;;23609:18;;:::i;:::-;23573:56;23653:38;23685:4;23679:11;23653:38;:::i;:::-;23738:67;23798:6;23790;23784:4;23738:67;:::i;:::-;23832:1;23856:4;23843:17;;23888:2;23880:6;23877:14;23905:1;23900:618;;;;24562:1;24579:6;24576:77;;;24628:9;24623:3;24619:19;24613:26;24604:35;;24576:77;24679:67;24739:6;24732:5;24679:67;:::i;:::-;24673:4;24666:81;24535:222;23870:887;;23900:618;23952:4;23948:9;23940:6;23936:22;23986:37;24018:4;23986:37;:::i;:::-;24045:1;24059:208;24073:7;24070:1;24067:14;24059:208;;;24152:9;24147:3;24143:19;24137:26;24129:6;24122:42;24203:1;24195:6;24191:14;24181:24;;24250:2;24239:9;24235:18;24222:31;;24096:4;24093:1;24089:12;24084:17;;24059:208;;;24295:6;24286:7;24283:19;24280:179;;;24353:9;24348:3;24344:19;24338:26;24396:48;24438:4;24430:6;24426:17;24415:9;24396:48;:::i;:::-;24388:6;24381:64;24303:156;24280:179;24505:1;24501;24493:6;24489:14;24485:22;24479:4;24472:36;23907:611;;;23870:887;;23460:1303;;;23368:1395;;:::o",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "MAX_LEVEL()": "a49062d4",
                "_skillLevels(address,bytes32)": "afaf611a",
                "addToWhitelist(address)": "e43252d7",
                "admin()": "f851a440",
                "balanceOf(address)": "70a08231",
                "isWhiteListed(address)": "6f9170f6",
                "mint(string,string)": "8aa0fdad",
                "ownerOf(uint256)": "6352211e",
                "skillLevels(string)": "8df72b5a",
                "supportsInterface(bytes4)": "01ffc9a7",
                "tokenUri(uint256)": "1675f455",
                "updateSkill(string)": "7d2564b6"
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/src/interfaces/IERC165.sol": {
      "IERC165": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "supportsInterface",
                "inputs": [
                  {
                    "name": "interfaceId",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0xafc7f5a5e7e4f3e8a0d54fcd3495bac94305db4fa802d79493239876734e691b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de03704f92a517dd165ba187eb4bdc680fece2e0af5ce7127890978e4c3882bf\",\"dweb:/ipfs/QmP93oZG4JVAq7JXZBAVFcKj6eR3JdiiE93SNCkQRS9LY1\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "supportsInterface(bytes4)": "01ffc9a7"
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/src/interfaces/IERC721.sol": {
      "IERC721": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "balanceOf",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "balance",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "ownerOf",
                "inputs": [
                  {
                    "name": "tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "supportsInterface",
                "inputs": [
                  {
                    "name": "interfaceId",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0xafc7f5a5e7e4f3e8a0d54fcd3495bac94305db4fa802d79493239876734e691b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de03704f92a517dd165ba187eb4bdc680fece2e0af5ce7127890978e4c3882bf\",\"dweb:/ipfs/QmP93oZG4JVAq7JXZBAVFcKj6eR3JdiiE93SNCkQRS9LY1\"]},\"src/interfaces/IERC721.sol\":{\"keccak256\":\"0x3d67570df2935f2eea40b42e4a9c9335bfb13d4f317a3f0ad552d1b40c345ea6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94c5e1b2ea9e0a3597ee924511d18935714cb4667a7f332eb02d2f3ae7e3da91\",\"dweb:/ipfs/QmaX8UTwwmoXt51PmQjqgxJxbo3pzrxvRS6gxPUs8P4ydw\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "balanceOf(address)": "70a08231",
                "ownerOf(uint256)": "6352211e",
                "supportsInterface(bytes4)": "01ffc9a7"
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    },
    "/home/suraj/Documents/NeuroGuild-Network/Contracts/SBTs/test/MySkillTest.t.sol": {
      "MySkillTest": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "IS_TEST",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "failed",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "setUp",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "targetArtifactSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifactSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
                    "components": [
                      {
                        "name": "artifact",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetInterfaces",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedInterfaces_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzInterface[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "artifacts",
                        "type": "string[]",
                        "internalType": "string[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "testMint",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "testMintWithPrank",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "testOwner",
                "inputs": [],
                "outputs": [],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "testUpdate",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "test_RevertIfMintNotWhitelisted",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "event",
                "name": "log",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_address",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes32",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_int",
                "inputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_address",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes32",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_string",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_string",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_uint",
                "inputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "logs",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMintWithPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwner\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_RevertIfMintNotWhitelisted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/MySkillTest.t.sol\":\"MySkillTest\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4b2a5a85e045dcf6a082700c7252e43854c2eed88f860aaa18ec1e85218ae2bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98d060ed5be569a92d908fc358149039dc8f833d61973aa1b9d1d8235676bf6d\",\"dweb:/ipfs/QmaWQpn5dJmbMS5skwmPPMeUWZG35BLkignPpcA3zyagEs\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0xc942e27c7baae499beb01afbbae99f24d42af9a6e4aae675bc6901b704aa8e9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0456008adf68947247f358b62863af4a8e349549d2260f2ff9569ff0e3cf5c98\",\"dweb:/ipfs/QmdviSUj2i7o3TPN5vd2xocqGMFVqjUzaiJTZRYyPxyHPx\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xd8eec16034b53b52c90a3d720e121ce7d30d64cc57d854db7d817d5b382dda43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://612780755e32668c7e3b747d94d16c7291101144e084dd9ee563f071711e99e3\",\"dweb:/ipfs/QmQgtFJXEmDtSHT7tZQTMbb6PCDpq5UDYFvrBnWk1Xo2SY\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xae394f477769a38276d98d4854bc865fc8d281edbd4e72167507adb8236812aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34a0e609a4ec617b5c349f5e89a3352810cc5e4d3adaf939b32a27e4a5e46de2\",\"dweb:/ipfs/QmPfjimWAGGb6rzDjNMtLeZ93JJbCJJMov5gaNKyTy1doe\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0fa6ec03602648b62cce41aab2096e6b7e052f2846075d967b6958dd586db746\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd84e2ca9c1eaed6b76768cc12bb8c1af8289170ea8b7706f58d516460d79c41\",\"dweb:/ipfs/QmQ7BK7co6DE4eWUqMyv11s5eHYkS1tyx8tDSZGZVtf2aK\"]},\"lib/forge-std/src/StdConstants.sol\":{\"keccak256\":\"0x319ccdabfa2c0b2428301445873270ffea20f0e039d4fd5e6eeba65158e4e534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b633f9d3a719e1d035ce7daa6cc051ddf89a72d34200d14cec37728e245cdabc\",\"dweb:/ipfs/QmRP7HQJpHMx1CsFrY8tXVVx1DQmi2dcb2BoGfiWaA923r\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974\",\"dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x04102de0a79398e4bdea57b7a4818655b4cc66d6f81d1cff08bf428cd0b384cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53edc6c8f7f67cafc0129f039637c77d979880f7f1947defea31e8f0c05095bc\",\"dweb:/ipfs/QmUKXJd1vFCkxxrkXNLURdXrx2apoyWQFrFb5UqNkjdHVi\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3\",\"dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xb2469a902a326074034c4f7081d868113db0edbb7cf48b86528af2d6b07295f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1430a81c4978be875e2a3b31a8bfa4e1438fecd327f23771b690d64db63c020a\",\"dweb:/ipfs/QmW6aB2u1LNaRgGQFwjV7L7UbxsRg63iJ7AuujPouEa4cT\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3dda6083a83dfa3e8526e97bcc28e862ee2442dd58fe94d5c426d65b8e38f73c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33f8c02e4dabdab86a6825125856446a8657eacd712318b51b7818e4a6f6e3f4\",\"dweb:/ipfs/QmRKSjVnrk54yr8wTK2e6QxRjiuba2H8HJSKunHAkdo7RG\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x6f235e293b4406784ff3bd89b2e4d51d0922918cf6825e7a7a09413606932e39\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://afc4fceb24a18596a239e82eb354c41d9a4e28d3fc56fcce04146af2c692b1b9\",\"dweb:/ipfs/QmQCHSAb5k9KQW9kEzeoPdirSknkWso4q4t5CSVFLNnMLB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab\",\"dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3\"]},\"script/DeploySkillSBT.s.sol\":{\"keccak256\":\"0xd1ffeaa6d9b53ccf2694e3dce0148e98bfba1f2103c3f0682e5d02b44fc84e6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://521215c9d64f466059581f32dfacdb0cceffee388f830d86c977248fea37f344\",\"dweb:/ipfs/QmcrEcYZBM8ePSKY4EFbYJod791N5Ex47a2entD6sQYvL7\"]},\"src/ERC721SBT/ERC721SBT.sol\":{\"keccak256\":\"0xa0ced970722cedf73a0ef0f67a9cce0bce097fc373948f12408f21394c6aeec9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6bbb527667ba5c3348a52ffd4b35232390cfd81ea6df44143fe21440a16d602\",\"dweb:/ipfs/QmdrNkwLybSadttLDosptV8JoSURxSNdDtfDsRMc8jXPZR\"]},\"src/SkillSBT.sol\":{\"keccak256\":\"0x7d4d0a02bee70fc29bd63075464e8ead4a81084d8cf1ab584248682978c962b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a24b534895a27a8838332378c2dd2ffb0d621a3283743c86ea939189557ab86\",\"dweb:/ipfs/QmQciQFFuX9ojXdRnLiXyVeH2vxfYDLPt7gH5ttU7jjFCd\"]},\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0xafc7f5a5e7e4f3e8a0d54fcd3495bac94305db4fa802d79493239876734e691b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de03704f92a517dd165ba187eb4bdc680fece2e0af5ce7127890978e4c3882bf\",\"dweb:/ipfs/QmP93oZG4JVAq7JXZBAVFcKj6eR3JdiiE93SNCkQRS9LY1\"]},\"src/interfaces/IERC721.sol\":{\"keccak256\":\"0x3d67570df2935f2eea40b42e4a9c9335bfb13d4f317a3f0ad552d1b40c345ea6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94c5e1b2ea9e0a3597ee924511d18935714cb4667a7f332eb02d2f3ae7e3da91\",\"dweb:/ipfs/QmaX8UTwwmoXt51PmQjqgxJxbo3pzrxvRS6gxPUs8P4ydw\"]},\"test/MySkillTest.t.sol\":{\"keccak256\":\"0x5da49c732b4e0594d86daf6d1ed38c2c2f35fe4e7fe839159bad68478e61024e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a8c51d491919f7861e744462943a27ddb935eb809da10953a44b03d57b09079\",\"dweb:/ipfs/QmQPy3hXwEwsZa7E4ABfWJWG8f82Chki6bgBzAV25ybZnc\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "60806040526001600c5f6101000a81548160ff0219169083151502179055506001601f5f6101000a81548160ff021916908315150217905550600160215f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280600a81526020017f3332333433323432323400000000000000000000000000000000000000000000815250602290816100bd919061030c565b503480156100c9575f5ffd5b506103db565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061014a57607f821691505b60208210810361015d5761015c610106565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101bf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610184565b6101c98683610184565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61020d610208610203846101e1565b6101ea565b6101e1565b9050919050565b5f819050919050565b610226836101f3565b61023a61023282610214565b848454610190565b825550505050565b5f5f905090565b610251610242565b61025c81848461021d565b505050565b5b8181101561027f576102745f82610249565b600181019050610262565b5050565b601f8211156102c45761029581610163565b61029e84610175565b810160208510156102ad578190505b6102c16102b985610175565b830182610261565b50505b505050565b5f82821c905092915050565b5f6102e45f19846008026102c9565b1980831691505092915050565b5f6102fc83836102d5565b9150826002028217905092915050565b610315826100cf565b67ffffffffffffffff81111561032e5761032d6100d9565b5b6103388254610133565b610343828285610283565b5f60209050601f831160018114610374575f8415610362578287015190505b61036c85826102f1565b8655506103d3565b601f19841661038286610163565b5f5b828110156103a957848901518255600182019150602085019450602081019050610384565b868310156103c657848901516103c2601f8916826102d5565b8355505b6001600288020188555050505b505050505050565b614e76806103e85f395ff3fe608060405234801561000f575f5ffd5b5060043610610114575f3560e01c8063916a17c6116100a0578063b5508aa91161006f578063b5508aa91461023a578063ba414fa614610258578063e20c9f7114610276578063f5d9a1c914610294578063fa7626d41461029e57610114565b8063916a17c6146101ea5780639642ddaf146102085780639e535c6914610212578063b0464fdc1461021c57610114565b80632ade3880116100e75780632ade3880146101545780633e5e3c23146101725780633f7286f41461019057806366d9a9a0146101ae57806385226c81146101cc57610114565b8063039849d0146101185780630a9254e4146101225780631ed7831c1461012c5780632152bf7c1461014a575b5f5ffd5b6101206102bc565b005b61012a61086b565b005b6101346109a1565b6040516101419190611f75565b60405180910390f35b610152610a2c565b005b61015c610b40565b60405161016991906121b5565b60405180910390f35b61017a610cc4565b6040516101879190611f75565b60405180910390f35b610198610d4f565b6040516101a59190611f75565b60405180910390f35b6101b6610dda565b6040516101c391906123b3565b60405180910390f35b6101d4610f5c565b6040516101e19190612456565b60405180910390f35b6101f2611030565b6040516101ff919061256b565b60405180910390f35b610210611177565b005b61021a6114b9565b005b610224611553565b604051610231919061256b565b60405180910390f35b61024261169a565b60405161024f9190612456565b60405180910390f35b61026061176e565b60405161026d91906125a5565b60405180910390f35b61027e611875565b60405161028b9190611f75565b60405180910390f35b61029c611900565b005b6102a6611c8c565b6040516102b391906125a5565b60405180910390f35b5f600290505f6040518060400160405280600a81526020017f4a617661736372697074000000000000000000000000000000000000000000008152509050737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663ca669fa7601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa158015610395573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103b991906125f9565b6040518263ffffffff1660e01b81526004016103d59190612633565b5f604051808303815f87803b1580156103ec575f5ffd5b505af11580156103fe573d5f5f3e3d5ffd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e43252d7836040518263ffffffff1660e01b815260040161045d9190612633565b5f604051808303815f87803b158015610474575f5ffd5b505af1158015610486573d5f5f3e3d5ffd5b50505050737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663ca669fa7836040518263ffffffff1660e01b81526004016104d79190612633565b5f604051808303815f87803b1580156104ee575f5ffd5b505af1158015610500573d5f5f3e3d5ffd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638aa0fdad826040518263ffffffff1660e01b815260040161055f91906126de565b6020604051808303815f875af115801561057b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061059f9190612744565b50610644601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016105fe9190612633565b602060405180830381865afa158015610619573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061063d9190612744565b6001611c9e565b737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663ca669fa7836040518263ffffffff1660e01b81526004016106919190612633565b5f604051808303815f87803b1580156106a8575f5ffd5b505af11580156106ba573d5f5f3e3d5ffd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637d2564b6826040518263ffffffff1660e01b8152600401610719919061276f565b5f604051808303815f87803b158015610730575f5ffd5b505af1158015610742573d5f5f3e3d5ffd5b50505050737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663ca669fa7836040518263ffffffff1660e01b81526004016107939190612633565b5f604051808303815f87803b1580156107aa575f5ffd5b505af11580156107bc573d5f5f3e3d5ffd5b50505050610867601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638df72b5a836040518263ffffffff1660e01b815260040161081e919061276f565b602060405180830381865afa158015610839573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061085d91906127c5565b60ff166002611c9e565b5050565b60405161087790611e81565b604051809103905ff080158015610890573d5f5f3e3d5ffd5b5060205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04062266040518163ffffffff1660e01b81526004016020604051808303815f875af115801561093b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061095f919061282b565b601f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60606016805480602002602001604051908101604052809291908181526020018280548015610a2257602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109d9575b5050505050905090565b737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663f28dceb36040518163ffffffff1660e01b8152600401610a77906128b0565b5f604051808303815f87803b158015610a8e575f5ffd5b505af1158015610aa0573d5f5f3e3d5ffd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638aa0fdad6040518163ffffffff1660e01b8152600401610afd90612962565b6020604051808303815f875af1158015610b19573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b3d9190612744565b50565b6060601e805480602002602001604051908101604052809291908181526020015f905b82821015610cbb578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020015f905b82821015610ca4578382905f5260205f20018054610c19906129c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610c45906129c0565b8015610c905780601f10610c6757610100808354040283529160200191610c90565b820191905f5260205f20905b815481529060010190602001808311610c7357829003601f168201915b505050505081526020019060010190610bfc565b505050508152505081526020019060010190610b63565b50505050905090565b60606018805480602002602001604051908101604052809291908181526020018280548015610d4557602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610cfc575b5050505050905090565b60606017805480602002602001604051908101604052809291908181526020018280548015610dd057602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d87575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020015f905b82821015610f53578382905f5260205f2090600202016040518060400160405290815f82018054610e2d906129c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610e59906129c0565b8015610ea45780601f10610e7b57610100808354040283529160200191610ea4565b820191905f5260205f20905b815481529060010190602001808311610e8757829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610f3b57602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610ee85790505b50505050508152505081526020019060010190610dfd565b50505050905090565b6060601a805480602002602001604051908101604052809291908181526020015f905b82821015611027578382905f5260205f20018054610f9c906129c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610fc8906129c0565b80156110135780601f10610fea57610100808354040283529160200191611013565b820191905f5260205f20905b815481529060010190602001808311610ff657829003601f168201915b505050505081526020019060010190610f7f565b50505050905090565b6060601d805480602002602001604051908101604052809291908181526020015f905b8282101561116e578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180548060200260200160405190810160405280929190818152602001828054801561115657602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116111035790505b50505050508152505081526020019060010190611053565b50505050905090565b601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e43252d7306040518263ffffffff1660e01b81526004016111d29190612633565b5f604051808303815f87803b1580156111e9575f5ffd5b505af11580156111fb573d5f5f3e3d5ffd5b505050505f6040518060400160405280600a81526020017f4a6176617363726970740000000000000000000000000000000000000000000081525090505f601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638aa0fdad6022846040518363ffffffff1660e01b8152600401611297929190612a83565b6020604051808303815f875af11580156112b3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112d79190612744565b90505f601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631675f455836040518263ffffffff1660e01b81526004016113359190612ac7565b5f60405180830381865afa15801561134f573d5f5f3e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906113779190612bfe565b905061140b60228054611389906129c0565b80601f01602080910402602001604051908101604052809291908181526020018280546113b5906129c0565b80156114005780601f106113d757610100808354040283529160200191611400565b820191905f5260205f20905b8154815290600101906020018083116113e357829003601f168201915b505050505082611d33565b5f601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114679190612633565b602060405180830381865afa158015611482573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114a69190612744565b90506114b3816001611c9e565b50505050565b61155130601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa158015611528573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061154c91906125f9565b611dc0565b565b6060601c805480602002602001604051908101604052809291908181526020015f905b82821015611691578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180548060200260200160405190810160405280929190818152602001828054801561167957602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116116265790505b50505050508152505081526020019060010190611576565b50505050905090565b60606019805480602002602001604051908101604052809291908181526020015f905b82821015611765578382905f5260205f200180546116da906129c0565b80601f0160208091040260200160405190810160405280929190818152602001828054611706906129c0565b80156117515780601f1061172857610100808354040283529160200191611751565b820191905f5260205f20905b81548152906001019060200180831161173457829003601f168201915b5050505050815260200190600101906116bd565b50505050905090565b5f60085f9054906101000a900460ff161561178c5760019050611872565b5f5f1b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d707f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c7f6661696c656400000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161182e929190612c5d565b602060405180830381865afa158015611849573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061186d9190612cae565b141590505b90565b606060158054806020026020016040519081016040528092919081815260200182805480156118f657602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116118ad575b5050505050905090565b5f60029050737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663ca669fa7601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119a0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119c491906125f9565b6040518263ffffffff1660e01b81526004016119e09190612633565b5f604051808303815f87803b1580156119f7575f5ffd5b505af1158015611a09573d5f5f3e3d5ffd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e43252d7826040518263ffffffff1660e01b8152600401611a689190612633565b5f604051808303815f87803b158015611a7f575f5ffd5b505af1158015611a91573d5f5f3e3d5ffd5b505050505f6040518060400160405280600a81526020017f4a617661736372697074000000000000000000000000000000000000000000008152509050737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663ca669fa7836040518263ffffffff1660e01b8152600401611b1b9190612633565b5f604051808303815f87803b158015611b32575f5ffd5b505af1158015611b44573d5f5f3e3d5ffd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638aa0fdad826040518263ffffffff1660e01b8152600401611ba391906126de565b6020604051808303815f875af1158015611bbf573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611be39190612744565b50611c88601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401611c429190612633565b602060405180830381865afa158015611c5d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c819190612744565b6001611c9e565b5050565b601f5f9054906101000a900460ff1681565b808214611d2f577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166398296c5483836040518363ffffffff1660e01b8152600401611d02929190612cd9565b5f6040518083038186803b158015611d18575f5ffd5b505afa158015611d2a573d5f5f3e3d5ffd5b505050505b5050565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663f320d96383836040518363ffffffff1660e01b8152600401611d90929190612d00565b5f6040518083038186803b158015611da6575f5ffd5b505afa158015611db8573d5f5f3e3d5ffd5b505050505050565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611e7d577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663515361f683836040518363ffffffff1660e01b8152600401611e50929190612d35565b5f6040518083038186803b158015611e66575f5ffd5b505afa158015611e78573d5f5f3e3d5ffd5b505050505b5050565b6120e480612d5d83390190565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ee082611eb7565b9050919050565b611ef081611ed6565b82525050565b5f611f018383611ee7565b60208301905092915050565b5f602082019050919050565b5f611f2382611e8e565b611f2d8185611e98565b9350611f3883611ea8565b805f5b83811015611f68578151611f4f8882611ef6565b9750611f5a83611f0d565b925050600181019050611f3b565b5085935050505092915050565b5f6020820190508181035f830152611f8d8184611f19565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61202982611fe7565b6120338185611ff1565b9350612043818560208601612001565b61204c8161200f565b840191505092915050565b5f612062838361201f565b905092915050565b5f602082019050919050565b5f61208082611fbe565b61208a8185611fc8565b93508360208202850161209c85611fd8565b805f5b858110156120d757848403895281516120b88582612057565b94506120c38361206a565b925060208a0199505060018101905061209f565b50829750879550505050505092915050565b5f604083015f8301516120fe5f860182611ee7565b50602083015184820360208601526121168282612076565b9150508091505092915050565b5f61212e83836120e9565b905092915050565b5f602082019050919050565b5f61214c82611f95565b6121568185611f9f565b93508360208202850161216885611faf565b805f5b858110156121a357848403895281516121848582612123565b945061218f83612136565b925060208a0199505060018101905061216b565b50829750879550505050505092915050565b5f6020820190508181035f8301526121cd8184612142565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61225b81612227565b82525050565b5f61226c8383612252565b60208301905092915050565b5f602082019050919050565b5f61228e826121fe565b6122988185612208565b93506122a383612218565b805f5b838110156122d35781516122ba8882612261565b97506122c583612278565b9250506001810190506122a6565b5085935050505092915050565b5f604083015f8301518482035f8601526122fa828261201f565b915050602083015184820360208601526123148282612284565b9150508091505092915050565b5f61232c83836122e0565b905092915050565b5f602082019050919050565b5f61234a826121d5565b61235481856121df565b935083602082028501612366856121ef565b805f5b858110156123a157848403895281516123828582612321565b945061238d83612334565b925060208a01995050600181019050612369565b50829750879550505050505092915050565b5f6020820190508181035f8301526123cb8184612340565b905092915050565b5f82825260208201905092915050565b5f6123ed82611fbe565b6123f781856123d3565b93508360208202850161240985611fd8565b805f5b8581101561244457848403895281516124258582612057565b94506124308361206a565b925060208a0199505060018101905061240c565b50829750879550505050505092915050565b5f6020820190508181035f83015261246e81846123e3565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f604083015f8301516124b45f860182611ee7565b50602083015184820360208601526124cc8282612284565b9150508091505092915050565b5f6124e4838361249f565b905092915050565b5f602082019050919050565b5f61250282612476565b61250c8185612480565b93508360208202850161251e85612490565b805f5b85811015612559578484038952815161253a85826124d9565b9450612545836124ec565b925060208a01995050600181019050612521565b50829750879550505050505092915050565b5f6020820190508181035f83015261258381846124f8565b905092915050565b5f8115159050919050565b61259f8161258b565b82525050565b5f6020820190506125b85f830184612596565b92915050565b5f604051905090565b5f5ffd5b5f5ffd5b6125d881611ed6565b81146125e2575f5ffd5b50565b5f815190506125f3816125cf565b92915050565b5f6020828403121561260e5761260d6125c7565b5b5f61261b848285016125e5565b91505092915050565b61262d81611ed6565b82525050565b5f6020820190506126465f830184612624565b92915050565b5f82825260208201905092915050565b7f736b696c6c5552490000000000000000000000000000000000000000000000005f82015250565b5f61269060088361264c565b915061269b8261265c565b602082019050919050565b5f6126b082611fe7565b6126ba818561264c565b93506126ca818560208601612001565b6126d38161200f565b840191505092915050565b5f6040820190508181035f8301526126f581612684565b9050818103602083015261270981846126a6565b905092915050565b5f819050919050565b61272381612711565b811461272d575f5ffd5b50565b5f8151905061273e8161271a565b92915050565b5f60208284031215612759576127586125c7565b5b5f61276684828501612730565b91505092915050565b5f6020820190508181035f83015261278781846126a6565b905092915050565b5f60ff82169050919050565b6127a48161278f565b81146127ae575f5ffd5b50565b5f815190506127bf8161279b565b92915050565b5f602082840312156127da576127d96125c7565b5b5f6127e7848285016127b1565b91505092915050565b5f6127fa82611ed6565b9050919050565b61280a816127f0565b8114612814575f5ffd5b50565b5f8151905061282581612801565b92915050565b5f602082840312156128405761283f6125c7565b5b5f61284d84828501612817565b91505092915050565b5f82825260208201905092915050565b7f6e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f61289a600f83612856565b91506128a582612866565b602082019050919050565b5f6020820190508181035f8301526128c78161288e565b9050919050565b7f75726900000000000000000000000000000000000000000000000000000000005f82015250565b5f61290260038361264c565b915061290d826128ce565b602082019050919050565b7f4a617661736372697074000000000000000000000000000000000000000000005f82015250565b5f61294c600a8361264c565b915061295782612918565b602082019050919050565b5f6040820190508181035f830152612979816128f6565b9050818103602083015261298c81612940565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806129d757607f821691505b6020821081036129ea576129e9612993565b5b50919050565b5f819050815f5260205f209050919050565b5f8154612a0e816129c0565b612a18818661264c565b9450600182165f8114612a325760018114612a4857612a7a565b60ff198316865281151560200286019350612a7a565b612a51856129f0565b5f5b83811015612a7257815481890152600182019150602081019050612a53565b808801955050505b50505092915050565b5f6040820190508181035f830152612a9b8185612a02565b90508181036020830152612aaf81846126a6565b90509392505050565b612ac181612711565b82525050565b5f602082019050612ada5f830184612ab8565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612b1e8261200f565b810181811067ffffffffffffffff82111715612b3d57612b3c612ae8565b5b80604052505050565b5f612b4f6125be565b9050612b5b8282612b15565b919050565b5f67ffffffffffffffff821115612b7a57612b79612ae8565b5b612b838261200f565b9050602081019050919050565b5f612ba2612b9d84612b60565b612b46565b905082815260208101848484011115612bbe57612bbd612ae4565b5b612bc9848285612001565b509392505050565b5f82601f830112612be557612be4612ae0565b5b8151612bf5848260208601612b90565b91505092915050565b5f60208284031215612c1357612c126125c7565b5b5f82015167ffffffffffffffff811115612c3057612c2f6125cb565b5b612c3c84828501612bd1565b91505092915050565b5f819050919050565b612c5781612c45565b82525050565b5f604082019050612c705f830185612624565b612c7d6020830184612c4e565b9392505050565b612c8d81612c45565b8114612c97575f5ffd5b50565b5f81519050612ca881612c84565b92915050565b5f60208284031215612cc357612cc26125c7565b5b5f612cd084828501612c9a565b91505092915050565b5f604082019050612cec5f830185612ab8565b612cf96020830184612ab8565b9392505050565b5f6040820190508181035f830152612d1881856126a6565b90508181036020830152612d2c81846126a6565b90509392505050565b5f604082019050612d485f830185612624565b612d556020830184612624565b939250505056fe60806040526001600c5f6101000a81548160ff0219169083151502179055506001600c60026101000a81548160ff0219169083151502179055503480156043575f5ffd5b50612093806100515f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063c040622614610038578063f8ccbf4714610056575b5f5ffd5b610040610074565b60405161004d9190610228565b60405180910390f35b61005e61018e565b60405161006b919061025b565b60405180910390f35b5f5f737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff16637fb5297f6040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156100cf575f5ffd5b505af11580156100e1573d5f5f3e3d5ffd5b50505050336040516100f2906101a1565b6100fc9190610294565b604051809103905ff080158015610115573d5f5f3e3d5ffd5b509050737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff166376eadd366040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610171575f5ffd5b505af1158015610183573d5f5f3e3d5ffd5b505050508091505090565b600c60029054906101000a900460ff1681565b611db0806102ae83390190565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6101f06101eb6101e6846101ae565b6101cd565b6101ae565b9050919050565b5f610201826101d6565b9050919050565b5f610212826101f7565b9050919050565b61022281610208565b82525050565b5f60208201905061023b5f830184610219565b92915050565b5f8115159050919050565b61025581610241565b82525050565b5f60208201905061026e5f83018461024c565b92915050565b5f61027e826101ae565b9050919050565b61028e81610274565b82525050565b5f6020820190506102a75f830184610285565b9291505056fe608060405234801561000f575f5ffd5b50604051611db0380380611db083398181016040528101906100319190610144565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610097906101c9565b60405180910390fd5b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101e7565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610113826100ea565b9050919050565b61012381610109565b811461012d575f5ffd5b50565b5f8151905061013e8161011a565b92915050565b5f60208284031215610159576101586100e6565b5b5f61016684828501610130565b91505092915050565b5f82825260208201905092915050565b7f7665726966696572203d207a65726f20616464726573730000000000000000005f82015250565b5f6101b360178361016f565b91506101be8261017f565b602082019050919050565b5f6020820190508181035f8301526101e0816101a7565b9050919050565b611bbc806101f45f395ff3fe608060405234801561000f575f5ffd5b50600436106100b2575f3560e01c80638aa0fdad1161006f5780638aa0fdad146101c25780638df72b5a146101f2578063a49062d414610222578063afaf611a14610240578063e43252d714610270578063f851a4401461028c576100b2565b806301ffc9a7146100b65780631675f455146100e65780636352211e146101165780636f9170f61461014657806370a08231146101765780637d2564b6146101a6575b5f5ffd5b6100d060048036038101906100cb9190610f6b565b6102aa565b6040516100dd9190610fb0565b60405180910390f35b61010060048036038101906100fb9190610ffc565b61037b565b60405161010d9190611097565b60405180910390f35b610130600480360381019061012b9190610ffc565b61041c565b60405161013d91906110f6565b60405180910390f35b610160600480360381019061015b9190611139565b6104c3565b60405161016d9190610fb0565b60405180910390f35b610190600480360381019061018b9190611139565b610515565b60405161019d9190611173565b60405180910390f35b6101c060048036038101906101bb91906112b8565b6105d8565b005b6101dc60048036038101906101d791906112ff565b6105e4565b6040516101e99190611173565b60405180910390f35b61020c600480360381019061020791906112b8565b6106b2565b6040516102199190611390565b60405180910390f35b61022a6107cc565b6040516102379190611390565b60405180910390f35b61025a600480360381019061025591906113dc565b6107d1565b6040516102679190611390565b60405180910390f35b61028a60048036038101906102859190611139565b6107fb565b005b610294610924565b6040516102a191906110f6565b60405180910390f35b5f7f13f2a32f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061037457507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b606060035f8381526020019081526020015f20805461039990611447565b80601f01602080910402602001604051908101604052809291908181526020018280546103c590611447565b80156104105780601f106103e757610100808354040283529160200191610410565b820191905f5260205f20905b8154815290600101906020018083116103f357829003601f168201915b50505050509050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b5906114c1565b60405180910390fd5b919050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b90611529565b60405180910390fd5b60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff169050919050565b6105e181610948565b50565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590611591565b60405180910390fd5b60065f815480929190610680906115dc565b91905055505f60065490506106953382610c0c565b61069e83610948565b6106a88185610eaa565b8091505092915050565b5f5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1611610741576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107389061166d565b60405180910390fd5b5f8260405160200161075391906116c5565b60405160208183030381529060405280519060200120905060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8281526020019081526020015f205f9054906101000a900460ff16915050919050565b600281565b6001602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610889576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088090611725565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd7cf613dd0392c9170696a1b7ca820f2e07f8b54e99259edc95cc407ede57d7960405160405180910390a250565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c890611591565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1611610a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a569061166d565b60405180910390fd5b5f81604051602001610a7191906116c5565b6040516020818303038152906040528051906020012090505f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f9054906101000a900460ff169050600260ff168160ff1610610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b259061178d565b60405180910390fd5b600181610b3b91906117ab565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f6101000a81548160ff021916908360ff160217905550600181610bab91906117ab565b60ff1683604051610bbc91906116c5565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167ffb52386a76af79290662c032bf53cadd370d02eb37ad699d27d581eeb7878c8860405160405180910390a4505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7190611829565b60405180910390fd5b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1614610d08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cff90611891565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9d906118f9565b60405180910390fd5b600160055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908360ff1602179055508160045f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b8060035f8481526020019081526020015f209081610ec89190611ab7565b50817fda84ca2183491f179a603e877b2cb058e42195041c2b9c53d746427e519a34df82604051610ef99190611097565b60405180910390a25050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f4a81610f16565b8114610f54575f5ffd5b50565b5f81359050610f6581610f41565b92915050565b5f60208284031215610f8057610f7f610f0e565b5b5f610f8d84828501610f57565b91505092915050565b5f8115159050919050565b610faa81610f96565b82525050565b5f602082019050610fc35f830184610fa1565b92915050565b5f819050919050565b610fdb81610fc9565b8114610fe5575f5ffd5b50565b5f81359050610ff681610fd2565b92915050565b5f6020828403121561101157611010610f0e565b5b5f61101e84828501610fe8565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61106982611027565b6110738185611031565b9350611083818560208601611041565b61108c8161104f565b840191505092915050565b5f6020820190508181035f8301526110af818461105f565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110e0826110b7565b9050919050565b6110f0816110d6565b82525050565b5f6020820190506111095f8301846110e7565b92915050565b611118816110d6565b8114611122575f5ffd5b50565b5f813590506111338161110f565b92915050565b5f6020828403121561114e5761114d610f0e565b5b5f61115b84828501611125565b91505092915050565b61116d81610fc9565b82525050565b5f6020820190506111865f830184611164565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6111ca8261104f565b810181811067ffffffffffffffff821117156111e9576111e8611194565b5b80604052505050565b5f6111fb610f05565b905061120782826111c1565b919050565b5f67ffffffffffffffff82111561122657611225611194565b5b61122f8261104f565b9050602081019050919050565b828183375f83830152505050565b5f61125c6112578461120c565b6111f2565b90508281526020810184848401111561127857611277611190565b5b61128384828561123c565b509392505050565b5f82601f83011261129f5761129e61118c565b5b81356112af84826020860161124a565b91505092915050565b5f602082840312156112cd576112cc610f0e565b5b5f82013567ffffffffffffffff8111156112ea576112e9610f12565b5b6112f68482850161128b565b91505092915050565b5f5f6040838503121561131557611314610f0e565b5b5f83013567ffffffffffffffff81111561133257611331610f12565b5b61133e8582860161128b565b925050602083013567ffffffffffffffff81111561135f5761135e610f12565b5b61136b8582860161128b565b9150509250929050565b5f60ff82169050919050565b61138a81611375565b82525050565b5f6020820190506113a35f830184611381565b92915050565b5f819050919050565b6113bb816113a9565b81146113c5575f5ffd5b50565b5f813590506113d6816113b2565b92915050565b5f5f604083850312156113f2576113f1610f0e565b5b5f6113ff85828601611125565b9250506020611410858286016113c8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061145e57607f821691505b6020821081036114715761147061141a565b5b50919050565b7f746f6b656e20646f65736e2774206578697374000000000000000000000000005f82015250565b5f6114ab601383611031565b91506114b682611477565b602082019050919050565b5f6020820190508181035f8301526114d88161149f565b9050919050565b7f6f776e6572203d207a65726f20616464726573730000000000000000000000005f82015250565b5f611513601483611031565b915061151e826114df565b602082019050919050565b5f6020820190508181035f83015261154081611507565b9050919050565b7f6e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f61157b600f83611031565b915061158682611547565b602082019050919050565b5f6020820190508181035f8301526115a88161156f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115e682610fc9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611618576116176115af565b5b600182019050919050565b7f6d696e74205342542066697273740000000000000000000000000000000000005f82015250565b5f611657600e83611031565b915061166282611623565b602082019050919050565b5f6020820190508181035f8301526116848161164b565b9050919050565b5f81905092915050565b5f61169f82611027565b6116a9818561168b565b93506116b9818560208601611041565b80840191505092915050565b5f6116d08284611695565b915081905092915050565b7f796f7520617265206e6f742061646d696e0000000000000000000000000000005f82015250565b5f61170f601183611031565b915061171a826116db565b602082019050919050565b5f6020820190508181035f83015261173c81611703565b9050919050565b7f4d6178206c6576656c20726561636865640000000000000000000000000000005f82015250565b5f611777601183611031565b915061178282611743565b602082019050919050565b5f6020820190508181035f8301526117a48161176b565b9050919050565b5f6117b582611375565b91506117c083611375565b9250828201905060ff8111156117d9576117d86115af565b5b92915050565b7f6d696e7420746f207a65726f20616464726573730000000000000000000000005f82015250565b5f611813601483611031565b915061181e826117df565b602082019050919050565b5f6020820190508181035f83015261184081611807565b9050919050565b7f7573657220616c72656164792068617320616e205342540000000000000000005f82015250565b5f61187b601783611031565b915061188682611847565b602082019050919050565b5f6020820190508181035f8301526118a88161186f565b9050919050565b7f746f6b656e20616c7265616479206d696e7465640000000000000000000000005f82015250565b5f6118e3601483611031565b91506118ee826118af565b602082019050919050565b5f6020820190508181035f830152611910816118d7565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026119737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611938565b61197d8683611938565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6119b86119b36119ae84610fc9565b611995565b610fc9565b9050919050565b5f819050919050565b6119d18361199e565b6119e56119dd826119bf565b848454611944565b825550505050565b5f5f905090565b6119fc6119ed565b611a078184846119c8565b505050565b5b81811015611a2a57611a1f5f826119f4565b600181019050611a0d565b5050565b601f821115611a6f57611a4081611917565b611a4984611929565b81016020851015611a58578190505b611a6c611a6485611929565b830182611a0c565b50505b505050565b5f82821c905092915050565b5f611a8f5f1984600802611a74565b1980831691505092915050565b5f611aa78383611a80565b9150826002028217905092915050565b611ac082611027565b67ffffffffffffffff811115611ad957611ad8611194565b5b611ae38254611447565b611aee828285611a2e565b5f60209050601f831160018114611b1f575f8415611b0d578287015190505b611b178582611a9c565b865550611b7e565b601f198416611b2d86611917565b5f5b82811015611b5457848901518255600182019150602085019450602081019050611b2f565b86831015611b715784890151611b6d601f891682611a80565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220994cdbb222be3f9ef21f391d3ea69ebf47579b33812f062aa6f8a290ab7f4bfd64736f6c634300081e0033a2646970667358221220123a064db153235e94673ab451f4d8fbe397de6b4002fa6ce1f6670245ab1abe64736f6c634300081e0033a2646970667358221220e5a6ada0a65efda3e579f4e2039aac17b367dd20d0a7ac9049ea5b89847a795764736f6c634300081e0033",
                "sourceMap": "209:1873:25:-:0;;;3200:4:3;3160:44;;;;;;;;;;;;;;;;;;;;1087:4:14;1065:26;;;;;;;;;;;;;;;;;;;;328:1:25;304:26;;;;;;;;;;;;;;;;;;;;336:25;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;209:1873;;;;;;;;;;;;7:99:26;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;209:1873:25:-;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "608060405234801561000f575f5ffd5b5060043610610114575f3560e01c8063916a17c6116100a0578063b5508aa91161006f578063b5508aa91461023a578063ba414fa614610258578063e20c9f7114610276578063f5d9a1c914610294578063fa7626d41461029e57610114565b8063916a17c6146101ea5780639642ddaf146102085780639e535c6914610212578063b0464fdc1461021c57610114565b80632ade3880116100e75780632ade3880146101545780633e5e3c23146101725780633f7286f41461019057806366d9a9a0146101ae57806385226c81146101cc57610114565b8063039849d0146101185780630a9254e4146101225780631ed7831c1461012c5780632152bf7c1461014a575b5f5ffd5b6101206102bc565b005b61012a61086b565b005b6101346109a1565b6040516101419190611f75565b60405180910390f35b610152610a2c565b005b61015c610b40565b60405161016991906121b5565b60405180910390f35b61017a610cc4565b6040516101879190611f75565b60405180910390f35b610198610d4f565b6040516101a59190611f75565b60405180910390f35b6101b6610dda565b6040516101c391906123b3565b60405180910390f35b6101d4610f5c565b6040516101e19190612456565b60405180910390f35b6101f2611030565b6040516101ff919061256b565b60405180910390f35b610210611177565b005b61021a6114b9565b005b610224611553565b604051610231919061256b565b60405180910390f35b61024261169a565b60405161024f9190612456565b60405180910390f35b61026061176e565b60405161026d91906125a5565b60405180910390f35b61027e611875565b60405161028b9190611f75565b60405180910390f35b61029c611900565b005b6102a6611c8c565b6040516102b391906125a5565b60405180910390f35b5f600290505f6040518060400160405280600a81526020017f4a617661736372697074000000000000000000000000000000000000000000008152509050737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663ca669fa7601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa158015610395573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103b991906125f9565b6040518263ffffffff1660e01b81526004016103d59190612633565b5f604051808303815f87803b1580156103ec575f5ffd5b505af11580156103fe573d5f5f3e3d5ffd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e43252d7836040518263ffffffff1660e01b815260040161045d9190612633565b5f604051808303815f87803b158015610474575f5ffd5b505af1158015610486573d5f5f3e3d5ffd5b50505050737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663ca669fa7836040518263ffffffff1660e01b81526004016104d79190612633565b5f604051808303815f87803b1580156104ee575f5ffd5b505af1158015610500573d5f5f3e3d5ffd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638aa0fdad826040518263ffffffff1660e01b815260040161055f91906126de565b6020604051808303815f875af115801561057b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061059f9190612744565b50610644601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016105fe9190612633565b602060405180830381865afa158015610619573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061063d9190612744565b6001611c9e565b737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663ca669fa7836040518263ffffffff1660e01b81526004016106919190612633565b5f604051808303815f87803b1580156106a8575f5ffd5b505af11580156106ba573d5f5f3e3d5ffd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637d2564b6826040518263ffffffff1660e01b8152600401610719919061276f565b5f604051808303815f87803b158015610730575f5ffd5b505af1158015610742573d5f5f3e3d5ffd5b50505050737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663ca669fa7836040518263ffffffff1660e01b81526004016107939190612633565b5f604051808303815f87803b1580156107aa575f5ffd5b505af11580156107bc573d5f5f3e3d5ffd5b50505050610867601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638df72b5a836040518263ffffffff1660e01b815260040161081e919061276f565b602060405180830381865afa158015610839573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061085d91906127c5565b60ff166002611c9e565b5050565b60405161087790611e81565b604051809103905ff080158015610890573d5f5f3e3d5ffd5b5060205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04062266040518163ffffffff1660e01b81526004016020604051808303815f875af115801561093b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061095f919061282b565b601f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60606016805480602002602001604051908101604052809291908181526020018280548015610a2257602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109d9575b5050505050905090565b737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663f28dceb36040518163ffffffff1660e01b8152600401610a77906128b0565b5f604051808303815f87803b158015610a8e575f5ffd5b505af1158015610aa0573d5f5f3e3d5ffd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638aa0fdad6040518163ffffffff1660e01b8152600401610afd90612962565b6020604051808303815f875af1158015610b19573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b3d9190612744565b50565b6060601e805480602002602001604051908101604052809291908181526020015f905b82821015610cbb578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020015f905b82821015610ca4578382905f5260205f20018054610c19906129c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610c45906129c0565b8015610c905780601f10610c6757610100808354040283529160200191610c90565b820191905f5260205f20905b815481529060010190602001808311610c7357829003601f168201915b505050505081526020019060010190610bfc565b505050508152505081526020019060010190610b63565b50505050905090565b60606018805480602002602001604051908101604052809291908181526020018280548015610d4557602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610cfc575b5050505050905090565b60606017805480602002602001604051908101604052809291908181526020018280548015610dd057602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d87575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020015f905b82821015610f53578382905f5260205f2090600202016040518060400160405290815f82018054610e2d906129c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610e59906129c0565b8015610ea45780601f10610e7b57610100808354040283529160200191610ea4565b820191905f5260205f20905b815481529060010190602001808311610e8757829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015610f3b57602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610ee85790505b50505050508152505081526020019060010190610dfd565b50505050905090565b6060601a805480602002602001604051908101604052809291908181526020015f905b82821015611027578382905f5260205f20018054610f9c906129c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610fc8906129c0565b80156110135780601f10610fea57610100808354040283529160200191611013565b820191905f5260205f20905b815481529060010190602001808311610ff657829003601f168201915b505050505081526020019060010190610f7f565b50505050905090565b6060601d805480602002602001604051908101604052809291908181526020015f905b8282101561116e578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180548060200260200160405190810160405280929190818152602001828054801561115657602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116111035790505b50505050508152505081526020019060010190611053565b50505050905090565b601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e43252d7306040518263ffffffff1660e01b81526004016111d29190612633565b5f604051808303815f87803b1580156111e9575f5ffd5b505af11580156111fb573d5f5f3e3d5ffd5b505050505f6040518060400160405280600a81526020017f4a6176617363726970740000000000000000000000000000000000000000000081525090505f601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638aa0fdad6022846040518363ffffffff1660e01b8152600401611297929190612a83565b6020604051808303815f875af11580156112b3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112d79190612744565b90505f601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631675f455836040518263ffffffff1660e01b81526004016113359190612ac7565b5f60405180830381865afa15801561134f573d5f5f3e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906113779190612bfe565b905061140b60228054611389906129c0565b80601f01602080910402602001604051908101604052809291908181526020018280546113b5906129c0565b80156114005780601f106113d757610100808354040283529160200191611400565b820191905f5260205f20905b8154815290600101906020018083116113e357829003601f168201915b505050505082611d33565b5f601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114679190612633565b602060405180830381865afa158015611482573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114a69190612744565b90506114b3816001611c9e565b50505050565b61155130601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa158015611528573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061154c91906125f9565b611dc0565b565b6060601c805480602002602001604051908101604052809291908181526020015f905b82821015611691578382905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180548060200260200160405190810160405280929190818152602001828054801561167957602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116116265790505b50505050508152505081526020019060010190611576565b50505050905090565b60606019805480602002602001604051908101604052809291908181526020015f905b82821015611765578382905f5260205f200180546116da906129c0565b80601f0160208091040260200160405190810160405280929190818152602001828054611706906129c0565b80156117515780601f1061172857610100808354040283529160200191611751565b820191905f5260205f20905b81548152906001019060200180831161173457829003601f168201915b5050505050815260200190600101906116bd565b50505050905090565b5f60085f9054906101000a900460ff161561178c5760019050611872565b5f5f1b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663667f9d707f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c7f6661696c656400000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161182e929190612c5d565b602060405180830381865afa158015611849573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061186d9190612cae565b141590505b90565b606060158054806020026020016040519081016040528092919081815260200182805480156118f657602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116118ad575b5050505050905090565b5f60029050737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663ca669fa7601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119a0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119c491906125f9565b6040518263ffffffff1660e01b81526004016119e09190612633565b5f604051808303815f87803b1580156119f7575f5ffd5b505af1158015611a09573d5f5f3e3d5ffd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e43252d7826040518263ffffffff1660e01b8152600401611a689190612633565b5f604051808303815f87803b158015611a7f575f5ffd5b505af1158015611a91573d5f5f3e3d5ffd5b505050505f6040518060400160405280600a81526020017f4a617661736372697074000000000000000000000000000000000000000000008152509050737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663ca669fa7836040518263ffffffff1660e01b8152600401611b1b9190612633565b5f604051808303815f87803b158015611b32575f5ffd5b505af1158015611b44573d5f5f3e3d5ffd5b50505050601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638aa0fdad826040518263ffffffff1660e01b8152600401611ba391906126de565b6020604051808303815f875af1158015611bbf573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611be39190612744565b50611c88601f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401611c429190612633565b602060405180830381865afa158015611c5d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c819190612744565b6001611c9e565b5050565b601f5f9054906101000a900460ff1681565b808214611d2f577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166398296c5483836040518363ffffffff1660e01b8152600401611d02929190612cd9565b5f6040518083038186803b158015611d18575f5ffd5b505afa158015611d2a573d5f5f3e3d5ffd5b505050505b5050565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663f320d96383836040518363ffffffff1660e01b8152600401611d90929190612d00565b5f6040518083038186803b158015611da6575f5ffd5b505afa158015611db8573d5f5f3e3d5ffd5b505050505050565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611e7d577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff1663515361f683836040518363ffffffff1660e01b8152600401611e50929190612d35565b5f6040518083038186803b158015611e66575f5ffd5b505afa158015611e78573d5f5f3e3d5ffd5b505050505b5050565b6120e480612d5d83390190565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ee082611eb7565b9050919050565b611ef081611ed6565b82525050565b5f611f018383611ee7565b60208301905092915050565b5f602082019050919050565b5f611f2382611e8e565b611f2d8185611e98565b9350611f3883611ea8565b805f5b83811015611f68578151611f4f8882611ef6565b9750611f5a83611f0d565b925050600181019050611f3b565b5085935050505092915050565b5f6020820190508181035f830152611f8d8184611f19565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61202982611fe7565b6120338185611ff1565b9350612043818560208601612001565b61204c8161200f565b840191505092915050565b5f612062838361201f565b905092915050565b5f602082019050919050565b5f61208082611fbe565b61208a8185611fc8565b93508360208202850161209c85611fd8565b805f5b858110156120d757848403895281516120b88582612057565b94506120c38361206a565b925060208a0199505060018101905061209f565b50829750879550505050505092915050565b5f604083015f8301516120fe5f860182611ee7565b50602083015184820360208601526121168282612076565b9150508091505092915050565b5f61212e83836120e9565b905092915050565b5f602082019050919050565b5f61214c82611f95565b6121568185611f9f565b93508360208202850161216885611faf565b805f5b858110156121a357848403895281516121848582612123565b945061218f83612136565b925060208a0199505060018101905061216b565b50829750879550505050505092915050565b5f6020820190508181035f8301526121cd8184612142565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61225b81612227565b82525050565b5f61226c8383612252565b60208301905092915050565b5f602082019050919050565b5f61228e826121fe565b6122988185612208565b93506122a383612218565b805f5b838110156122d35781516122ba8882612261565b97506122c583612278565b9250506001810190506122a6565b5085935050505092915050565b5f604083015f8301518482035f8601526122fa828261201f565b915050602083015184820360208601526123148282612284565b9150508091505092915050565b5f61232c83836122e0565b905092915050565b5f602082019050919050565b5f61234a826121d5565b61235481856121df565b935083602082028501612366856121ef565b805f5b858110156123a157848403895281516123828582612321565b945061238d83612334565b925060208a01995050600181019050612369565b50829750879550505050505092915050565b5f6020820190508181035f8301526123cb8184612340565b905092915050565b5f82825260208201905092915050565b5f6123ed82611fbe565b6123f781856123d3565b93508360208202850161240985611fd8565b805f5b8581101561244457848403895281516124258582612057565b94506124308361206a565b925060208a0199505060018101905061240c565b50829750879550505050505092915050565b5f6020820190508181035f83015261246e81846123e3565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f604083015f8301516124b45f860182611ee7565b50602083015184820360208601526124cc8282612284565b9150508091505092915050565b5f6124e4838361249f565b905092915050565b5f602082019050919050565b5f61250282612476565b61250c8185612480565b93508360208202850161251e85612490565b805f5b85811015612559578484038952815161253a85826124d9565b9450612545836124ec565b925060208a01995050600181019050612521565b50829750879550505050505092915050565b5f6020820190508181035f83015261258381846124f8565b905092915050565b5f8115159050919050565b61259f8161258b565b82525050565b5f6020820190506125b85f830184612596565b92915050565b5f604051905090565b5f5ffd5b5f5ffd5b6125d881611ed6565b81146125e2575f5ffd5b50565b5f815190506125f3816125cf565b92915050565b5f6020828403121561260e5761260d6125c7565b5b5f61261b848285016125e5565b91505092915050565b61262d81611ed6565b82525050565b5f6020820190506126465f830184612624565b92915050565b5f82825260208201905092915050565b7f736b696c6c5552490000000000000000000000000000000000000000000000005f82015250565b5f61269060088361264c565b915061269b8261265c565b602082019050919050565b5f6126b082611fe7565b6126ba818561264c565b93506126ca818560208601612001565b6126d38161200f565b840191505092915050565b5f6040820190508181035f8301526126f581612684565b9050818103602083015261270981846126a6565b905092915050565b5f819050919050565b61272381612711565b811461272d575f5ffd5b50565b5f8151905061273e8161271a565b92915050565b5f60208284031215612759576127586125c7565b5b5f61276684828501612730565b91505092915050565b5f6020820190508181035f83015261278781846126a6565b905092915050565b5f60ff82169050919050565b6127a48161278f565b81146127ae575f5ffd5b50565b5f815190506127bf8161279b565b92915050565b5f602082840312156127da576127d96125c7565b5b5f6127e7848285016127b1565b91505092915050565b5f6127fa82611ed6565b9050919050565b61280a816127f0565b8114612814575f5ffd5b50565b5f8151905061282581612801565b92915050565b5f602082840312156128405761283f6125c7565b5b5f61284d84828501612817565b91505092915050565b5f82825260208201905092915050565b7f6e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f61289a600f83612856565b91506128a582612866565b602082019050919050565b5f6020820190508181035f8301526128c78161288e565b9050919050565b7f75726900000000000000000000000000000000000000000000000000000000005f82015250565b5f61290260038361264c565b915061290d826128ce565b602082019050919050565b7f4a617661736372697074000000000000000000000000000000000000000000005f82015250565b5f61294c600a8361264c565b915061295782612918565b602082019050919050565b5f6040820190508181035f830152612979816128f6565b9050818103602083015261298c81612940565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806129d757607f821691505b6020821081036129ea576129e9612993565b5b50919050565b5f819050815f5260205f209050919050565b5f8154612a0e816129c0565b612a18818661264c565b9450600182165f8114612a325760018114612a4857612a7a565b60ff198316865281151560200286019350612a7a565b612a51856129f0565b5f5b83811015612a7257815481890152600182019150602081019050612a53565b808801955050505b50505092915050565b5f6040820190508181035f830152612a9b8185612a02565b90508181036020830152612aaf81846126a6565b90509392505050565b612ac181612711565b82525050565b5f602082019050612ada5f830184612ab8565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612b1e8261200f565b810181811067ffffffffffffffff82111715612b3d57612b3c612ae8565b5b80604052505050565b5f612b4f6125be565b9050612b5b8282612b15565b919050565b5f67ffffffffffffffff821115612b7a57612b79612ae8565b5b612b838261200f565b9050602081019050919050565b5f612ba2612b9d84612b60565b612b46565b905082815260208101848484011115612bbe57612bbd612ae4565b5b612bc9848285612001565b509392505050565b5f82601f830112612be557612be4612ae0565b5b8151612bf5848260208601612b90565b91505092915050565b5f60208284031215612c1357612c126125c7565b5b5f82015167ffffffffffffffff811115612c3057612c2f6125cb565b5b612c3c84828501612bd1565b91505092915050565b5f819050919050565b612c5781612c45565b82525050565b5f604082019050612c705f830185612624565b612c7d6020830184612c4e565b9392505050565b612c8d81612c45565b8114612c97575f5ffd5b50565b5f81519050612ca881612c84565b92915050565b5f60208284031215612cc357612cc26125c7565b5b5f612cd084828501612c9a565b91505092915050565b5f604082019050612cec5f830185612ab8565b612cf96020830184612ab8565b9392505050565b5f6040820190508181035f830152612d1881856126a6565b90508181036020830152612d2c81846126a6565b90509392505050565b5f604082019050612d485f830185612624565b612d556020830184612624565b939250505056fe60806040526001600c5f6101000a81548160ff0219169083151502179055506001600c60026101000a81548160ff0219169083151502179055503480156043575f5ffd5b50612093806100515f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063c040622614610038578063f8ccbf4714610056575b5f5ffd5b610040610074565b60405161004d9190610228565b60405180910390f35b61005e61018e565b60405161006b919061025b565b60405180910390f35b5f5f737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff16637fb5297f6040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156100cf575f5ffd5b505af11580156100e1573d5f5f3e3d5ffd5b50505050336040516100f2906101a1565b6100fc9190610294565b604051809103905ff080158015610115573d5f5f3e3d5ffd5b509050737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff166376eadd366040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610171575f5ffd5b505af1158015610183573d5f5f3e3d5ffd5b505050508091505090565b600c60029054906101000a900460ff1681565b611db0806102ae83390190565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6101f06101eb6101e6846101ae565b6101cd565b6101ae565b9050919050565b5f610201826101d6565b9050919050565b5f610212826101f7565b9050919050565b61022281610208565b82525050565b5f60208201905061023b5f830184610219565b92915050565b5f8115159050919050565b61025581610241565b82525050565b5f60208201905061026e5f83018461024c565b92915050565b5f61027e826101ae565b9050919050565b61028e81610274565b82525050565b5f6020820190506102a75f830184610285565b9291505056fe608060405234801561000f575f5ffd5b50604051611db0380380611db083398181016040528101906100319190610144565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610097906101c9565b60405180910390fd5b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101e7565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610113826100ea565b9050919050565b61012381610109565b811461012d575f5ffd5b50565b5f8151905061013e8161011a565b92915050565b5f60208284031215610159576101586100e6565b5b5f61016684828501610130565b91505092915050565b5f82825260208201905092915050565b7f7665726966696572203d207a65726f20616464726573730000000000000000005f82015250565b5f6101b360178361016f565b91506101be8261017f565b602082019050919050565b5f6020820190508181035f8301526101e0816101a7565b9050919050565b611bbc806101f45f395ff3fe608060405234801561000f575f5ffd5b50600436106100b2575f3560e01c80638aa0fdad1161006f5780638aa0fdad146101c25780638df72b5a146101f2578063a49062d414610222578063afaf611a14610240578063e43252d714610270578063f851a4401461028c576100b2565b806301ffc9a7146100b65780631675f455146100e65780636352211e146101165780636f9170f61461014657806370a08231146101765780637d2564b6146101a6575b5f5ffd5b6100d060048036038101906100cb9190610f6b565b6102aa565b6040516100dd9190610fb0565b60405180910390f35b61010060048036038101906100fb9190610ffc565b61037b565b60405161010d9190611097565b60405180910390f35b610130600480360381019061012b9190610ffc565b61041c565b60405161013d91906110f6565b60405180910390f35b610160600480360381019061015b9190611139565b6104c3565b60405161016d9190610fb0565b60405180910390f35b610190600480360381019061018b9190611139565b610515565b60405161019d9190611173565b60405180910390f35b6101c060048036038101906101bb91906112b8565b6105d8565b005b6101dc60048036038101906101d791906112ff565b6105e4565b6040516101e99190611173565b60405180910390f35b61020c600480360381019061020791906112b8565b6106b2565b6040516102199190611390565b60405180910390f35b61022a6107cc565b6040516102379190611390565b60405180910390f35b61025a600480360381019061025591906113dc565b6107d1565b6040516102679190611390565b60405180910390f35b61028a60048036038101906102859190611139565b6107fb565b005b610294610924565b6040516102a191906110f6565b60405180910390f35b5f7f13f2a32f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061037457507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b606060035f8381526020019081526020015f20805461039990611447565b80601f01602080910402602001604051908101604052809291908181526020018280546103c590611447565b80156104105780601f106103e757610100808354040283529160200191610410565b820191905f5260205f20905b8154815290600101906020018083116103f357829003601f168201915b50505050509050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b5906114c1565b60405180910390fd5b919050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b90611529565b60405180910390fd5b60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff169050919050565b6105e181610948565b50565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590611591565b60405180910390fd5b60065f815480929190610680906115dc565b91905055505f60065490506106953382610c0c565b61069e83610948565b6106a88185610eaa565b8091505092915050565b5f5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1611610741576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107389061166d565b60405180910390fd5b5f8260405160200161075391906116c5565b60405160208183030381529060405280519060200120905060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8281526020019081526020015f205f9054906101000a900460ff16915050919050565b600281565b6001602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610889576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088090611725565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd7cf613dd0392c9170696a1b7ca820f2e07f8b54e99259edc95cc407ede57d7960405160405180910390a250565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c890611591565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1611610a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a569061166d565b60405180910390fd5b5f81604051602001610a7191906116c5565b6040516020818303038152906040528051906020012090505f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f9054906101000a900460ff169050600260ff168160ff1610610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b259061178d565b60405180910390fd5b600181610b3b91906117ab565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f6101000a81548160ff021916908360ff160217905550600181610bab91906117ab565b60ff1683604051610bbc91906116c5565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167ffb52386a76af79290662c032bf53cadd370d02eb37ad699d27d581eeb7878c8860405160405180910390a4505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7190611829565b60405180910390fd5b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660ff1614610d08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cff90611891565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9d906118f9565b60405180910390fd5b600160055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908360ff1602179055508160045f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b8060035f8481526020019081526020015f209081610ec89190611ab7565b50817fda84ca2183491f179a603e877b2cb058e42195041c2b9c53d746427e519a34df82604051610ef99190611097565b60405180910390a25050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f4a81610f16565b8114610f54575f5ffd5b50565b5f81359050610f6581610f41565b92915050565b5f60208284031215610f8057610f7f610f0e565b5b5f610f8d84828501610f57565b91505092915050565b5f8115159050919050565b610faa81610f96565b82525050565b5f602082019050610fc35f830184610fa1565b92915050565b5f819050919050565b610fdb81610fc9565b8114610fe5575f5ffd5b50565b5f81359050610ff681610fd2565b92915050565b5f6020828403121561101157611010610f0e565b5b5f61101e84828501610fe8565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61106982611027565b6110738185611031565b9350611083818560208601611041565b61108c8161104f565b840191505092915050565b5f6020820190508181035f8301526110af818461105f565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110e0826110b7565b9050919050565b6110f0816110d6565b82525050565b5f6020820190506111095f8301846110e7565b92915050565b611118816110d6565b8114611122575f5ffd5b50565b5f813590506111338161110f565b92915050565b5f6020828403121561114e5761114d610f0e565b5b5f61115b84828501611125565b91505092915050565b61116d81610fc9565b82525050565b5f6020820190506111865f830184611164565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6111ca8261104f565b810181811067ffffffffffffffff821117156111e9576111e8611194565b5b80604052505050565b5f6111fb610f05565b905061120782826111c1565b919050565b5f67ffffffffffffffff82111561122657611225611194565b5b61122f8261104f565b9050602081019050919050565b828183375f83830152505050565b5f61125c6112578461120c565b6111f2565b90508281526020810184848401111561127857611277611190565b5b61128384828561123c565b509392505050565b5f82601f83011261129f5761129e61118c565b5b81356112af84826020860161124a565b91505092915050565b5f602082840312156112cd576112cc610f0e565b5b5f82013567ffffffffffffffff8111156112ea576112e9610f12565b5b6112f68482850161128b565b91505092915050565b5f5f6040838503121561131557611314610f0e565b5b5f83013567ffffffffffffffff81111561133257611331610f12565b5b61133e8582860161128b565b925050602083013567ffffffffffffffff81111561135f5761135e610f12565b5b61136b8582860161128b565b9150509250929050565b5f60ff82169050919050565b61138a81611375565b82525050565b5f6020820190506113a35f830184611381565b92915050565b5f819050919050565b6113bb816113a9565b81146113c5575f5ffd5b50565b5f813590506113d6816113b2565b92915050565b5f5f604083850312156113f2576113f1610f0e565b5b5f6113ff85828601611125565b9250506020611410858286016113c8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061145e57607f821691505b6020821081036114715761147061141a565b5b50919050565b7f746f6b656e20646f65736e2774206578697374000000000000000000000000005f82015250565b5f6114ab601383611031565b91506114b682611477565b602082019050919050565b5f6020820190508181035f8301526114d88161149f565b9050919050565b7f6f776e6572203d207a65726f20616464726573730000000000000000000000005f82015250565b5f611513601483611031565b915061151e826114df565b602082019050919050565b5f6020820190508181035f83015261154081611507565b9050919050565b7f6e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f61157b600f83611031565b915061158682611547565b602082019050919050565b5f6020820190508181035f8301526115a88161156f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115e682610fc9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611618576116176115af565b5b600182019050919050565b7f6d696e74205342542066697273740000000000000000000000000000000000005f82015250565b5f611657600e83611031565b915061166282611623565b602082019050919050565b5f6020820190508181035f8301526116848161164b565b9050919050565b5f81905092915050565b5f61169f82611027565b6116a9818561168b565b93506116b9818560208601611041565b80840191505092915050565b5f6116d08284611695565b915081905092915050565b7f796f7520617265206e6f742061646d696e0000000000000000000000000000005f82015250565b5f61170f601183611031565b915061171a826116db565b602082019050919050565b5f6020820190508181035f83015261173c81611703565b9050919050565b7f4d6178206c6576656c20726561636865640000000000000000000000000000005f82015250565b5f611777601183611031565b915061178282611743565b602082019050919050565b5f6020820190508181035f8301526117a48161176b565b9050919050565b5f6117b582611375565b91506117c083611375565b9250828201905060ff8111156117d9576117d86115af565b5b92915050565b7f6d696e7420746f207a65726f20616464726573730000000000000000000000005f82015250565b5f611813601483611031565b915061181e826117df565b602082019050919050565b5f6020820190508181035f83015261184081611807565b9050919050565b7f7573657220616c72656164792068617320616e205342540000000000000000005f82015250565b5f61187b601783611031565b915061188682611847565b602082019050919050565b5f6020820190508181035f8301526118a88161186f565b9050919050565b7f746f6b656e20616c7265616479206d696e7465640000000000000000000000005f82015250565b5f6118e3601483611031565b91506118ee826118af565b602082019050919050565b5f6020820190508181035f830152611910816118d7565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026119737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611938565b61197d8683611938565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6119b86119b36119ae84610fc9565b611995565b610fc9565b9050919050565b5f819050919050565b6119d18361199e565b6119e56119dd826119bf565b848454611944565b825550505050565b5f5f905090565b6119fc6119ed565b611a078184846119c8565b505050565b5b81811015611a2a57611a1f5f826119f4565b600181019050611a0d565b5050565b601f821115611a6f57611a4081611917565b611a4984611929565b81016020851015611a58578190505b611a6c611a6485611929565b830182611a0c565b50505b505050565b5f82821c905092915050565b5f611a8f5f1984600802611a74565b1980831691505092915050565b5f611aa78383611a80565b9150826002028217905092915050565b611ac082611027565b67ffffffffffffffff811115611ad957611ad8611194565b5b611ae38254611447565b611aee828285611a2e565b5f60209050601f831160018114611b1f575f8415611b0d578287015190505b611b178582611a9c565b865550611b7e565b601f198416611b2d86611917565b5f5b82811015611b5457848901518255600182019150602085019450602081019050611b2f565b86831015611b715784890151611b6d601f891682611a80565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220994cdbb222be3f9ef21f391d3ea69ebf47579b33812f062aa6f8a290ab7f4bfd64736f6c634300081e0033a2646970667358221220123a064db153235e94673ab451f4d8fbe397de6b4002fa6ce1f6670245ab1abe64736f6c634300081e0033a2646970667358221220e5a6ada0a65efda3e579f4e2039aac17b367dd20d0a7ac9049ea5b89847a795764736f6c634300081e0033",
                "sourceMap": "209:1873:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1611:469;;;:::i;:::-;;368:175;;;:::i;:::-;;2907:134:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1128:147:25;;;:::i;:::-;;3823:151:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3684:133;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3385:141;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3193:186;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3047:140;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:146;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;743:379:25;;;:::i;:::-;;644:93;;;:::i;:::-;;2754:147:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2459:141;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1306:195:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2606:142:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1281:324:25;;;:::i;:::-;;1065:26:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1611:469:25;1650:11;1672:1;1650:24;;1684:23;:38;;;;;;;;;;;;;;;;;;;336:42:0;1732:8:25;;;1741:10;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1732:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1777:10;;;;;;;;;;;:25;;;1803:3;1777:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;336:42:0;1817:8:25;;;1826:3;1817:13;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1840:10;;;;;;;;;;;:15;;;1868:9;1840:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1889;1898:10;;;;;;;;;;;:20;;;1919:3;1898:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1925:1;1889:8;:38::i;:::-;336:42:0;1937:8:25;;;1946:3;1937:13;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:10;;;;;;;;;;;:22;;;1983:9;1960:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;336:42:0;2004:8:25;;;2013:3;2004:13;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2027:46;2036:10;;;;;;;;;;;:22;;;2059:9;2036:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2027:46;;2071:1;2027:8;:46::i;:::-;1640:440;;1611:469::o;368:175::-;421:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;404:14;;:37;;;;;;;;;;;;;;;;;;464:14;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;451:10;;:33;;;;;;;;;;;;;;;;;;368:175::o;2907:134:7:-;2954:33;3018:16;2999:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2907:134;:::o;1128:147:25:-;336:42:0;1188:15:25;;;:34;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1232:10;;;;;;;;;;;:15;;;:36;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1128:147::o;3823:151:7:-;3872:42;3948:19;3926:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:151;:::o;3684:133::-;3730:33;3794:16;3775:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3684:133;:::o;3385:141::-;3433:35;3501:18;3480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:141;:::o;3193:186::-;3249:56;3346:26;3317:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3193:186;:::o;3047:140::-;3095:34;3162:18;3141:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3047:140;:::o;3532:146::-;3580:40;3653:18;3632:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3532:146;:::o;743:379:25:-;780:10;;;;;;;;;;;:25;;;814:4;780:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;830:23;:38;;;;;;;;;;;;;;;;;;;879:12;894:10;;;;;;;;;;;:15;;;910:3;915:9;894:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;879:46;;936:23;962:10;;;;;;;;;;;:19;;;982:7;962:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:54;;1000:24;1009:3;1000:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1014:9;1000:8;:24::i;:::-;1035:12;1050:10;;;;;;;;;;;:20;;;1079:4;1050:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1035:50;;1095:20;1104:7;1113:1;1095:8;:20::i;:::-;770:352;;;;743:379::o;644:93::-;687:43;704:4;711:10;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;687:8;:43::i;:::-;644:93::o;2754:147:7:-;2803:40;2876:18;2855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2754:147;:::o;2459:141::-;2508:34;2575:18;2554:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:141;:::o;1306:195:2:-;1345:4;1365:7;;;;;;;;;;;1361:134;;;1395:4;1388:11;;;;1361:134;1482:1;1474:10;;219:28;211:37;;1437:7;;;219:28;211:37;;1255:17;1437:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;1430:54;;1306:195;;:::o;2606:142:7:-;2655:35;2723:18;2702:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:142;:::o;1281:324:25:-;1327:11;1349:1;1327:24;;336:42:0;1362:8:25;;;1371:10;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1362:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:10;;;;;;;;;;;:25;;;1426:3;1400:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1440:23;:38;;;;;;;;;;;;;;;;;;;336:42:0;1488:8:25;;;1497:3;1488:13;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1511:10;;;;;;;;;;;:15;;;1539:9;1511:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1560;1569:10;;;;;;;;;;;:20;;;1590:3;1569:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1596:1;1560:8;:38::i;:::-;1317:288;;1281:324::o;1065:26:14:-;;;;;;;;;;;;;:::o;2664:153:2:-;2755:5;2747:4;:13;2743:68;;219:28;211:37;;2776:11;;;2788:4;2794:5;2776:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2743:68;2664:153;;:::o;5050:122::-;219:28;211:37;;5141:11;;;5153:4;5159:5;5141:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5050:122;;:::o;4020:153::-;4111:5;4103:13;;:4;:13;;;4099:68;;219:28;211:37;;4132:11;;;4144:4;4150:5;4132:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4099:68;4020:153;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:114:26:-;74:6;108:5;102:12;92:22;;7:114;;;:::o;127:184::-;226:11;260:6;255:3;248:19;300:4;295:3;291:14;276:29;;127:184;;;;:::o;317:132::-;384:4;407:3;399:11;;437:4;432:3;428:14;420:22;;317:132;;;:::o;455:126::-;492:7;532:42;525:5;521:54;510:65;;455:126;;;:::o;587:96::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;587:96;;;:::o;689:108::-;766:24;784:5;766:24;:::i;:::-;761:3;754:37;689:108;;:::o;803:179::-;872:10;893:46;935:3;927:6;893:46;:::i;:::-;971:4;966:3;962:14;948:28;;803:179;;;;:::o;988:113::-;1058:4;1090;1085:3;1081:14;1073:22;;988:113;;;:::o;1137:732::-;1256:3;1285:54;1333:5;1285:54;:::i;:::-;1355:86;1434:6;1429:3;1355:86;:::i;:::-;1348:93;;1465:56;1515:5;1465:56;:::i;:::-;1544:7;1575:1;1560:284;1585:6;1582:1;1579:13;1560:284;;;1661:6;1655:13;1688:63;1747:3;1732:13;1688:63;:::i;:::-;1681:70;;1774:60;1827:6;1774:60;:::i;:::-;1764:70;;1620:224;1607:1;1604;1600:9;1595:14;;1560:284;;;1564:14;1860:3;1853:10;;1261:608;;;1137:732;;;;:::o;1875:373::-;2018:4;2056:2;2045:9;2041:18;2033:26;;2105:9;2099:4;2095:20;2091:1;2080:9;2076:17;2069:47;2133:108;2236:4;2227:6;2133:108;:::i;:::-;2125:116;;1875:373;;;;:::o;2254:145::-;2352:6;2386:5;2380:12;2370:22;;2254:145;;;:::o;2405:215::-;2535:11;2569:6;2564:3;2557:19;2609:4;2604:3;2600:14;2585:29;;2405:215;;;;:::o;2626:163::-;2724:4;2747:3;2739:11;;2777:4;2772:3;2768:14;2760:22;;2626:163;;;:::o;2795:124::-;2872:6;2906:5;2900:12;2890:22;;2795:124;;;:::o;2925:184::-;3024:11;3058:6;3053:3;3046:19;3098:4;3093:3;3089:14;3074:29;;2925:184;;;;:::o;3115:142::-;3192:4;3215:3;3207:11;;3245:4;3240:3;3236:14;3228:22;;3115:142;;;:::o;3263:99::-;3315:6;3349:5;3343:12;3333:22;;3263:99;;;:::o;3368:159::-;3442:11;3476:6;3471:3;3464:19;3516:4;3511:3;3507:14;3492:29;;3368:159;;;;:::o;3533:139::-;3622:6;3617:3;3612;3606:23;3663:1;3654:6;3649:3;3645:16;3638:27;3533:139;;;:::o;3678:102::-;3719:6;3770:2;3766:7;3761:2;3754:5;3750:14;3746:28;3736:38;;3678:102;;;:::o;3786:357::-;3864:3;3892:39;3925:5;3892:39;:::i;:::-;3947:61;4001:6;3996:3;3947:61;:::i;:::-;3940:68;;4017:65;4075:6;4070:3;4063:4;4056:5;4052:16;4017:65;:::i;:::-;4107:29;4129:6;4107:29;:::i;:::-;4102:3;4098:39;4091:46;;3868:275;3786:357;;;;:::o;4149:196::-;4238:10;4273:66;4335:3;4327:6;4273:66;:::i;:::-;4259:80;;4149:196;;;;:::o;4351:123::-;4431:4;4463;4458:3;4454:14;4446:22;;4351:123;;;:::o;4508:971::-;4637:3;4666:64;4724:5;4666:64;:::i;:::-;4746:86;4825:6;4820:3;4746:86;:::i;:::-;4739:93;;4858:3;4903:4;4895:6;4891:17;4886:3;4882:27;4933:66;4993:5;4933:66;:::i;:::-;5022:7;5053:1;5038:396;5063:6;5060:1;5057:13;5038:396;;;5134:9;5128:4;5124:20;5119:3;5112:33;5185:6;5179:13;5213:84;5292:4;5277:13;5213:84;:::i;:::-;5205:92;;5320:70;5383:6;5320:70;:::i;:::-;5310:80;;5419:4;5414:3;5410:14;5403:21;;5098:336;5085:1;5082;5078:9;5073:14;;5038:396;;;5042:14;5450:4;5443:11;;5470:3;5463:10;;4642:837;;;;;4508:971;;;;:::o;5563:663::-;5684:3;5720:4;5715:3;5711:14;5807:4;5800:5;5796:16;5790:23;5826:63;5883:4;5878:3;5874:14;5860:12;5826:63;:::i;:::-;5735:164;5986:4;5979:5;5975:16;5969:23;6039:3;6033:4;6029:14;6022:4;6017:3;6013:14;6006:38;6065:123;6183:4;6169:12;6065:123;:::i;:::-;6057:131;;5909:290;6216:4;6209:11;;5689:537;5563:663;;;;:::o;6232:280::-;6363:10;6398:108;6502:3;6494:6;6398:108;:::i;:::-;6384:122;;6232:280;;;;:::o;6518:144::-;6619:4;6651;6646:3;6642:14;6634:22;;6518:144;;;:::o;6750:1159::-;6931:3;6960:85;7039:5;6960:85;:::i;:::-;7061:117;7171:6;7166:3;7061:117;:::i;:::-;7054:124;;7204:3;7249:4;7241:6;7237:17;7232:3;7228:27;7279:87;7360:5;7279:87;:::i;:::-;7389:7;7420:1;7405:459;7430:6;7427:1;7424:13;7405:459;;;7501:9;7495:4;7491:20;7486:3;7479:33;7552:6;7546:13;7580:126;7701:4;7686:13;7580:126;:::i;:::-;7572:134;;7729:91;7813:6;7729:91;:::i;:::-;7719:101;;7849:4;7844:3;7840:14;7833:21;;7465:399;7452:1;7449;7445:9;7440:14;;7405:459;;;7409:14;7880:4;7873:11;;7900:3;7893:10;;6936:973;;;;;6750:1159;;;;:::o;7915:497::-;8120:4;8158:2;8147:9;8143:18;8135:26;;8207:9;8201:4;8197:20;8193:1;8182:9;8178:17;8171:47;8235:170;8400:4;8391:6;8235:170;:::i;:::-;8227:178;;7915:497;;;;:::o;8418:152::-;8523:6;8557:5;8551:12;8541:22;;8418:152;;;:::o;8576:222::-;8713:11;8747:6;8742:3;8735:19;8787:4;8782:3;8778:14;8763:29;;8576:222;;;;:::o;8804:170::-;8909:4;8932:3;8924:11;;8962:4;8957:3;8953:14;8945:22;;8804:170;;;:::o;8980:113::-;9046:6;9080:5;9074:12;9064:22;;8980:113;;;:::o;9099:173::-;9187:11;9221:6;9216:3;9209:19;9261:4;9256:3;9252:14;9237:29;;9099:173;;;;:::o;9278:131::-;9344:4;9367:3;9359:11;;9397:4;9392:3;9388:14;9380:22;;9278:131;;;:::o;9415:149::-;9451:7;9491:66;9484:5;9480:78;9469:89;;9415:149;;;:::o;9570:105::-;9645:23;9662:5;9645:23;:::i;:::-;9640:3;9633:36;9570:105;;:::o;9681:175::-;9748:10;9769:44;9809:3;9801:6;9769:44;:::i;:::-;9845:4;9840:3;9836:14;9822:28;;9681:175;;;;:::o;9862:112::-;9931:4;9963;9958:3;9954:14;9946:22;;9862:112;;;:::o;10008:704::-;10115:3;10144:53;10191:5;10144:53;:::i;:::-;10213:75;10281:6;10276:3;10213:75;:::i;:::-;10206:82;;10312:55;10361:5;10312:55;:::i;:::-;10390:7;10421:1;10406:281;10431:6;10428:1;10425:13;10406:281;;;10507:6;10501:13;10534:61;10591:3;10576:13;10534:61;:::i;:::-;10527:68;;10618:59;10670:6;10618:59;:::i;:::-;10608:69;;10466:221;10453:1;10450;10446:9;10441:14;;10406:281;;;10410:14;10703:3;10696:10;;10120:592;;;10008:704;;;;:::o;10810:730::-;10945:3;10981:4;10976:3;10972:14;11072:4;11065:5;11061:16;11055:23;11125:3;11119:4;11115:14;11108:4;11103:3;11099:14;11092:38;11151:73;11219:4;11205:12;11151:73;:::i;:::-;11143:81;;10996:239;11322:4;11315:5;11311:16;11305:23;11375:3;11369:4;11365:14;11358:4;11353:3;11349:14;11342:38;11401:101;11497:4;11483:12;11401:101;:::i;:::-;11393:109;;11245:268;11530:4;11523:11;;10950:590;10810:730;;;;:::o;11546:308::-;11691:10;11726:122;11844:3;11836:6;11726:122;:::i;:::-;11712:136;;11546:308;;;;:::o;11860:151::-;11968:4;12000;11995:3;11991:14;11983:22;;11860:151;;;:::o;12113:1215::-;12308:3;12337:92;12423:5;12337:92;:::i;:::-;12445:124;12562:6;12557:3;12445:124;:::i;:::-;12438:131;;12595:3;12640:4;12632:6;12628:17;12623:3;12619:27;12670:94;12758:5;12670:94;:::i;:::-;12787:7;12818:1;12803:480;12828:6;12825:1;12822:13;12803:480;;;12899:9;12893:4;12889:20;12884:3;12877:33;12950:6;12944:13;12978:140;13113:4;13098:13;12978:140;:::i;:::-;12970:148;;13141:98;13232:6;13141:98;:::i;:::-;13131:108;;13268:4;13263:3;13259:14;13252:21;;12863:420;12850:1;12847;12843:9;12838:14;;12803:480;;;12807:14;13299:4;13292:11;;13319:3;13312:10;;12313:1015;;;;;12113:1215;;;;:::o;13334:525::-;13553:4;13591:2;13580:9;13576:18;13568:26;;13640:9;13634:4;13630:20;13626:1;13615:9;13611:17;13604:47;13668:184;13847:4;13838:6;13668:184;:::i;:::-;13660:192;;13334:525;;;;:::o;13865:194::-;13974:11;14008:6;14003:3;13996:19;14048:4;14043:3;14039:14;14024:29;;13865:194;;;;:::o;14093:991::-;14232:3;14261:64;14319:5;14261:64;:::i;:::-;14341:96;14430:6;14425:3;14341:96;:::i;:::-;14334:103;;14463:3;14508:4;14500:6;14496:17;14491:3;14487:27;14538:66;14598:5;14538:66;:::i;:::-;14627:7;14658:1;14643:396;14668:6;14665:1;14662:13;14643:396;;;14739:9;14733:4;14729:20;14724:3;14717:33;14790:6;14784:13;14818:84;14897:4;14882:13;14818:84;:::i;:::-;14810:92;;14925:70;14988:6;14925:70;:::i;:::-;14915:80;;15024:4;15019:3;15015:14;15008:21;;14703:336;14690:1;14687;14683:9;14678:14;;14643:396;;;14647:14;15055:4;15048:11;;15075:3;15068:10;;14237:847;;;;;14093:991;;;;:::o;15090:413::-;15253:4;15291:2;15280:9;15276:18;15268:26;;15340:9;15334:4;15330:20;15326:1;15315:9;15311:17;15304:47;15368:128;15491:4;15482:6;15368:128;:::i;:::-;15360:136;;15090:413;;;;:::o;15509:144::-;15606:6;15640:5;15634:12;15624:22;;15509:144;;;:::o;15659:214::-;15788:11;15822:6;15817:3;15810:19;15862:4;15857:3;15853:14;15838:29;;15659:214;;;;:::o;15879:162::-;15976:4;15999:3;15991:11;;16029:4;16024:3;16020:14;16012:22;;15879:162;;;:::o;16123:639::-;16242:3;16278:4;16273:3;16269:14;16365:4;16358:5;16354:16;16348:23;16384:63;16441:4;16436:3;16432:14;16418:12;16384:63;:::i;:::-;16293:164;16544:4;16537:5;16533:16;16527:23;16597:3;16591:4;16587:14;16580:4;16575:3;16571:14;16564:38;16623:101;16719:4;16705:12;16623:101;:::i;:::-;16615:109;;16467:268;16752:4;16745:11;;16247:515;16123:639;;;;:::o;16768:276::-;16897:10;16932:106;17034:3;17026:6;16932:106;:::i;:::-;16918:120;;16768:276;;;;:::o;17050:143::-;17150:4;17182;17177:3;17173:14;17165:22;;17050:143;;;:::o;17279:1151::-;17458:3;17487:84;17565:5;17487:84;:::i;:::-;17587:116;17696:6;17691:3;17587:116;:::i;:::-;17580:123;;17729:3;17774:4;17766:6;17762:17;17757:3;17753:27;17804:86;17884:5;17804:86;:::i;:::-;17913:7;17944:1;17929:456;17954:6;17951:1;17948:13;17929:456;;;18025:9;18019:4;18015:20;18010:3;18003:33;18076:6;18070:13;18104:124;18223:4;18208:13;18104:124;:::i;:::-;18096:132;;18251:90;18334:6;18251:90;:::i;:::-;18241:100;;18370:4;18365:3;18361:14;18354:21;;17989:396;17976:1;17973;17969:9;17964:14;;17929:456;;;17933:14;18401:4;18394:11;;18421:3;18414:10;;17463:967;;;;;17279:1151;;;;:::o;18436:493::-;18639:4;18677:2;18666:9;18662:18;18654:26;;18726:9;18720:4;18716:20;18712:1;18701:9;18697:17;18690:47;18754:168;18917:4;18908:6;18754:168;:::i;:::-;18746:176;;18436:493;;;;:::o;18935:90::-;18969:7;19012:5;19005:13;18998:21;18987:32;;18935:90;;;:::o;19031:109::-;19112:21;19127:5;19112:21;:::i;:::-;19107:3;19100:34;19031:109;;:::o;19146:210::-;19233:4;19271:2;19260:9;19256:18;19248:26;;19284:65;19346:1;19335:9;19331:17;19322:6;19284:65;:::i;:::-;19146:210;;;;:::o;19362:75::-;19395:6;19428:2;19422:9;19412:19;;19362:75;:::o;19443:117::-;19552:1;19549;19542:12;19566:117;19675:1;19672;19665:12;19689:122;19762:24;19780:5;19762:24;:::i;:::-;19755:5;19752:35;19742:63;;19801:1;19798;19791:12;19742:63;19689:122;:::o;19817:143::-;19874:5;19905:6;19899:13;19890:22;;19921:33;19948:5;19921:33;:::i;:::-;19817:143;;;;:::o;19966:351::-;20036:6;20085:2;20073:9;20064:7;20060:23;20056:32;20053:119;;;20091:79;;:::i;:::-;20053:119;20211:1;20236:64;20292:7;20283:6;20272:9;20268:22;20236:64;:::i;:::-;20226:74;;20182:128;19966:351;;;;:::o;20323:118::-;20410:24;20428:5;20410:24;:::i;:::-;20405:3;20398:37;20323:118;;:::o;20447:222::-;20540:4;20578:2;20567:9;20563:18;20555:26;;20591:71;20659:1;20648:9;20644:17;20635:6;20591:71;:::i;:::-;20447:222;;;;:::o;20675:169::-;20759:11;20793:6;20788:3;20781:19;20833:4;20828:3;20824:14;20809:29;;20675:169;;;;:::o;20850:158::-;20990:10;20986:1;20978:6;20974:14;20967:34;20850:158;:::o;21014:365::-;21156:3;21177:66;21241:1;21236:3;21177:66;:::i;:::-;21170:73;;21252:93;21341:3;21252:93;:::i;:::-;21370:2;21365:3;21361:12;21354:19;;21014:365;;;:::o;21385:377::-;21473:3;21501:39;21534:5;21501:39;:::i;:::-;21556:71;21620:6;21615:3;21556:71;:::i;:::-;21549:78;;21636:65;21694:6;21689:3;21682:4;21675:5;21671:16;21636:65;:::i;:::-;21726:29;21748:6;21726:29;:::i;:::-;21721:3;21717:39;21710:46;;21477:285;21385:377;;;;:::o;21768:620::-;21982:4;22020:2;22009:9;22005:18;21997:26;;22069:9;22063:4;22059:20;22055:1;22044:9;22040:17;22033:47;22097:131;22223:4;22097:131;:::i;:::-;22089:139;;22275:9;22269:4;22265:20;22260:2;22249:9;22245:18;22238:48;22303:78;22376:4;22367:6;22303:78;:::i;:::-;22295:86;;21768:620;;;;:::o;22394:77::-;22431:7;22460:5;22449:16;;22394:77;;;:::o;22477:122::-;22550:24;22568:5;22550:24;:::i;:::-;22543:5;22540:35;22530:63;;22589:1;22586;22579:12;22530:63;22477:122;:::o;22605:143::-;22662:5;22693:6;22687:13;22678:22;;22709:33;22736:5;22709:33;:::i;:::-;22605:143;;;;:::o;22754:351::-;22824:6;22873:2;22861:9;22852:7;22848:23;22844:32;22841:119;;;22879:79;;:::i;:::-;22841:119;22999:1;23024:64;23080:7;23071:6;23060:9;23056:22;23024:64;:::i;:::-;23014:74;;22970:128;22754:351;;;;:::o;23111:313::-;23224:4;23262:2;23251:9;23247:18;23239:26;;23311:9;23305:4;23301:20;23297:1;23286:9;23282:17;23275:47;23339:78;23412:4;23403:6;23339:78;:::i;:::-;23331:86;;23111:313;;;;:::o;23430:86::-;23465:7;23505:4;23498:5;23494:16;23483:27;;23430:86;;;:::o;23522:118::-;23593:22;23609:5;23593:22;:::i;:::-;23586:5;23583:33;23573:61;;23630:1;23627;23620:12;23573:61;23522:118;:::o;23646:139::-;23701:5;23732:6;23726:13;23717:22;;23748:31;23773:5;23748:31;:::i;:::-;23646:139;;;;:::o;23791:347::-;23859:6;23908:2;23896:9;23887:7;23883:23;23879:32;23876:119;;;23914:79;;:::i;:::-;23876:119;24034:1;24059:62;24113:7;24104:6;24093:9;24089:22;24059:62;:::i;:::-;24049:72;;24005:126;23791:347;;;;:::o;24144:114::-;24199:7;24228:24;24246:5;24228:24;:::i;:::-;24217:35;;24144:114;;;:::o;24264:158::-;24355:42;24391:5;24355:42;:::i;:::-;24348:5;24345:53;24335:81;;24412:1;24409;24402:12;24335:81;24264:158;:::o;24428:179::-;24503:5;24534:6;24528:13;24519:22;;24550:51;24595:5;24550:51;:::i;:::-;24428:179;;;;:::o;24613:387::-;24701:6;24750:2;24738:9;24729:7;24725:23;24721:32;24718:119;;;24756:79;;:::i;:::-;24718:119;24876:1;24901:82;24975:7;24966:6;24955:9;24951:22;24901:82;:::i;:::-;24891:92;;24847:146;24613:387;;;;:::o;25006:168::-;25089:11;25123:6;25118:3;25111:19;25163:4;25158:3;25154:14;25139:29;;25006:168;;;;:::o;25180:165::-;25320:17;25316:1;25308:6;25304:14;25297:41;25180:165;:::o;25351:364::-;25492:3;25513:66;25576:2;25571:3;25513:66;:::i;:::-;25506:73;;25588:93;25677:3;25588:93;:::i;:::-;25706:2;25701:3;25697:12;25690:19;;25351:364;;;:::o;25721:417::-;25886:4;25924:2;25913:9;25909:18;25901:26;;25973:9;25967:4;25963:20;25959:1;25948:9;25944:17;25937:47;26001:130;26126:4;26001:130;:::i;:::-;25993:138;;25721:417;;;:::o;26144:153::-;26284:5;26280:1;26272:6;26268:14;26261:29;26144:153;:::o;26303:365::-;26445:3;26466:66;26530:1;26525:3;26466:66;:::i;:::-;26459:73;;26541:93;26630:3;26541:93;:::i;:::-;26659:2;26654:3;26650:12;26643:19;;26303:365;;;:::o;26674:160::-;26814:12;26810:1;26802:6;26798:14;26791:36;26674:160;:::o;26840:366::-;26982:3;27003:67;27067:2;27062:3;27003:67;:::i;:::-;26996:74;;27079:93;27168:3;27079:93;:::i;:::-;27197:2;27192:3;27188:12;27181:19;;26840:366;;;:::o;27212:726::-;27479:4;27517:2;27506:9;27502:18;27494:26;;27566:9;27560:4;27556:20;27552:1;27541:9;27537:17;27530:47;27594:131;27720:4;27594:131;:::i;:::-;27586:139;;27772:9;27766:4;27762:20;27757:2;27746:9;27742:18;27735:48;27800:131;27926:4;27800:131;:::i;:::-;27792:139;;27212:726;;;:::o;27944:180::-;27992:77;27989:1;27982:88;28089:4;28086:1;28079:15;28113:4;28110:1;28103:15;28130:320;28174:6;28211:1;28205:4;28201:12;28191:22;;28258:1;28252:4;28248:12;28279:18;28269:81;;28335:4;28327:6;28323:17;28313:27;;28269:81;28397:2;28389:6;28386:14;28366:18;28363:38;28360:84;;28416:18;;:::i;:::-;28360:84;28181:269;28130:320;;;:::o;28456:141::-;28505:4;28528:3;28520:11;;28551:3;28548:1;28541:14;28585:4;28582:1;28572:18;28564:26;;28456:141;;;:::o;28627:831::-;28712:3;28749:5;28743:12;28778:36;28804:9;28778:36;:::i;:::-;28830:71;28894:6;28889:3;28830:71;:::i;:::-;28823:78;;28932:1;28921:9;28917:17;28948:1;28943:164;;;;29121:1;29116:336;;;;28910:542;;28943:164;29027:4;29023:9;29012;29008:25;29003:3;28996:38;29087:6;29080:14;29073:22;29067:4;29063:33;29058:3;29054:43;29047:50;;28943:164;;29116:336;29183:38;29215:5;29183:38;:::i;:::-;29243:1;29257:154;29271:6;29268:1;29265:13;29257:154;;;29345:7;29339:14;29335:1;29330:3;29326:11;29319:35;29395:1;29386:7;29382:15;29371:26;;29293:4;29290:1;29286:12;29281:17;;29257:154;;;29440:1;29435:3;29431:11;29424:18;;29123:329;;28910:542;;28716:742;;28627:831;;;;:::o;29464:508::-;29622:4;29660:2;29649:9;29645:18;29637:26;;29709:9;29703:4;29699:20;29695:1;29684:9;29680:17;29673:47;29737:75;29807:4;29798:6;29737:75;:::i;:::-;29729:83;;29859:9;29853:4;29849:20;29844:2;29833:9;29829:18;29822:48;29887:78;29960:4;29951:6;29887:78;:::i;:::-;29879:86;;29464:508;;;;;:::o;29978:118::-;30065:24;30083:5;30065:24;:::i;:::-;30060:3;30053:37;29978:118;;:::o;30102:222::-;30195:4;30233:2;30222:9;30218:18;30210:26;;30246:71;30314:1;30303:9;30299:17;30290:6;30246:71;:::i;:::-;30102:222;;;;:::o;30330:117::-;30439:1;30436;30429:12;30453:117;30562:1;30559;30552:12;30576:180;30624:77;30621:1;30614:88;30721:4;30718:1;30711:15;30745:4;30742:1;30735:15;30762:281;30845:27;30867:4;30845:27;:::i;:::-;30837:6;30833:40;30975:6;30963:10;30960:22;30939:18;30927:10;30924:34;30921:62;30918:88;;;30986:18;;:::i;:::-;30918:88;31026:10;31022:2;31015:22;30805:238;30762:281;;:::o;31049:129::-;31083:6;31110:20;;:::i;:::-;31100:30;;31139:33;31167:4;31159:6;31139:33;:::i;:::-;31049:129;;;:::o;31184:308::-;31246:4;31336:18;31328:6;31325:30;31322:56;;;31358:18;;:::i;:::-;31322:56;31396:29;31418:6;31396:29;:::i;:::-;31388:37;;31480:4;31474;31470:15;31462:23;;31184:308;;;:::o;31498:434::-;31587:5;31612:66;31628:49;31670:6;31628:49;:::i;:::-;31612:66;:::i;:::-;31603:75;;31701:6;31694:5;31687:21;31739:4;31732:5;31728:16;31777:3;31768:6;31763:3;31759:16;31756:25;31753:112;;;31784:79;;:::i;:::-;31753:112;31874:52;31919:6;31914:3;31909;31874:52;:::i;:::-;31593:339;31498:434;;;;;:::o;31952:355::-;32019:5;32068:3;32061:4;32053:6;32049:17;32045:27;32035:122;;32076:79;;:::i;:::-;32035:122;32186:6;32180:13;32211:90;32297:3;32289:6;32282:4;32274:6;32270:17;32211:90;:::i;:::-;32202:99;;32025:282;31952:355;;;;:::o;32313:524::-;32393:6;32442:2;32430:9;32421:7;32417:23;32413:32;32410:119;;;32448:79;;:::i;:::-;32410:119;32589:1;32578:9;32574:17;32568:24;32619:18;32611:6;32608:30;32605:117;;;32641:79;;:::i;:::-;32605:117;32746:74;32812:7;32803:6;32792:9;32788:22;32746:74;:::i;:::-;32736:84;;32539:291;32313:524;;;;:::o;32843:77::-;32880:7;32909:5;32898:16;;32843:77;;;:::o;32926:118::-;33013:24;33031:5;33013:24;:::i;:::-;33008:3;33001:37;32926:118;;:::o;33050:332::-;33171:4;33209:2;33198:9;33194:18;33186:26;;33222:71;33290:1;33279:9;33275:17;33266:6;33222:71;:::i;:::-;33303:72;33371:2;33360:9;33356:18;33347:6;33303:72;:::i;:::-;33050:332;;;;;:::o;33388:122::-;33461:24;33479:5;33461:24;:::i;:::-;33454:5;33451:35;33441:63;;33500:1;33497;33490:12;33441:63;33388:122;:::o;33516:143::-;33573:5;33604:6;33598:13;33589:22;;33620:33;33647:5;33620:33;:::i;:::-;33516:143;;;;:::o;33665:351::-;33735:6;33784:2;33772:9;33763:7;33759:23;33755:32;33752:119;;;33790:79;;:::i;:::-;33752:119;33910:1;33935:64;33991:7;33982:6;33971:9;33967:22;33935:64;:::i;:::-;33925:74;;33881:128;33665:351;;;;:::o;34022:332::-;34143:4;34181:2;34170:9;34166:18;34158:26;;34194:71;34262:1;34251:9;34247:17;34238:6;34194:71;:::i;:::-;34275:72;34343:2;34332:9;34328:18;34319:6;34275:72;:::i;:::-;34022:332;;;;;:::o;34360:514::-;34521:4;34559:2;34548:9;34544:18;34536:26;;34608:9;34602:4;34598:20;34594:1;34583:9;34579:17;34572:47;34636:78;34709:4;34700:6;34636:78;:::i;:::-;34628:86;;34761:9;34755:4;34751:20;34746:2;34735:9;34731:18;34724:48;34789:78;34862:4;34853:6;34789:78;:::i;:::-;34781:86;;34360:514;;;;;:::o;34880:332::-;35001:4;35039:2;35028:9;35024:18;35016:26;;35052:71;35120:1;35109:9;35105:17;35096:6;35052:71;:::i;:::-;35133:72;35201:2;35190:9;35186:18;35177:6;35133:72;:::i;:::-;34880:332;;;;;:::o",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "IS_TEST()": "fa7626d4",
                "excludeArtifacts()": "b5508aa9",
                "excludeContracts()": "e20c9f71",
                "excludeSelectors()": "b0464fdc",
                "excludeSenders()": "1ed7831c",
                "failed()": "ba414fa6",
                "setUp()": "0a9254e4",
                "targetArtifactSelectors()": "66d9a9a0",
                "targetArtifacts()": "85226c81",
                "targetContracts()": "3f7286f4",
                "targetInterfaces()": "2ade3880",
                "targetSelectors()": "916a17c6",
                "targetSenders()": "3e5e3c23",
                "testMint()": "9642ddaf",
                "testMintWithPrank()": "f5d9a1c9",
                "testOwner()": "9e535c69",
                "testUpdate()": "039849d0",
                "test_RevertIfMintNotWhitelisted()": "2152bf7c"
              }
            }
          },
          "version": "0.8.30",
          "build_id": "d290beb48127fdf4",
          "profile": "default"
        }
      ]
    }
  },
  "build_infos": [
    {
      "id": "d290beb48127fdf4",
      "source_id_to_path": {
        "0": "lib/forge-std/src/Base.sol",
        "1": "lib/forge-std/src/Script.sol",
        "2": "lib/forge-std/src/StdAssertions.sol",
        "3": "lib/forge-std/src/StdChains.sol",
        "4": "lib/forge-std/src/StdCheats.sol",
        "5": "lib/forge-std/src/StdConstants.sol",
        "6": "lib/forge-std/src/StdError.sol",
        "7": "lib/forge-std/src/StdInvariant.sol",
        "8": "lib/forge-std/src/StdJson.sol",
        "9": "lib/forge-std/src/StdMath.sol",
        "10": "lib/forge-std/src/StdStorage.sol",
        "11": "lib/forge-std/src/StdStyle.sol",
        "12": "lib/forge-std/src/StdToml.sol",
        "13": "lib/forge-std/src/StdUtils.sol",
        "14": "lib/forge-std/src/Test.sol",
        "15": "lib/forge-std/src/Vm.sol",
        "16": "lib/forge-std/src/console.sol",
        "17": "lib/forge-std/src/console2.sol",
        "18": "lib/forge-std/src/interfaces/IMulticall3.sol",
        "19": "lib/forge-std/src/safeconsole.sol",
        "20": "script/DeploySkillSBT.s.sol",
        "21": "src/ERC721SBT/ERC721SBT.sol",
        "22": "src/SkillSBT.sol",
        "23": "src/interfaces/IERC165.sol",
        "24": "src/interfaces/IERC721.sol",
        "25": "test/MySkillTest.t.sol"
      },
      "language": "Solidity"
    }
  ]
}
